@model KRBAccounting.Service.Models.Sales.SalesChallanAddViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@{
   string display = "display:none;";
    string billTermClass = "";
    if (Model.AllowProductWiseBillTerm)
    {
        display = "";
        billTermClass = "rate-bill-term";
    }
}
@*@Html.CustomValidationSummary("Login was unsuccessful. Please correct the errors and try again.")*@
@*@using (Ajax.BeginForm("SalesChallanAdd", "Entry", new { controller = "Entry" }, new AjaxOptions { HttpMethod = "Post", OnComplete = "OnComplete" }, new { @class = "form-horizontal form-custom", id = "sales-invoice-form" }))
{*@
@using (Html.BeginForm("SalesChallanAdd", "Entry", FormMethod.Post, new { @class = "form-horizontal form-custom", id = "sales-challan-form" }))
{
    @Html.HiddenFor(x => x.SalesChallan.Id)
    <div id="billing-term-list" style="display: none">
    </div>
    <div style="width: 1317px; height: 517px;">
        <fieldset>
            <div style="float: left; width: 100%;" class="one-row">
                <div class="lag">
                    <span class="stack">
                        <label class="label-70">
                            Challan No.</label>
                        <span class="field">
                            @Html.HiddenFor(x => x.SalesChallan.DocId)
                            @Html.TextBoxFor(m => m.SalesChallan.ChallanNo, new { @class = "modaldoclink input-90 input", entermsg = "Enter Voucher No.", module = "PB", valueId = "SalesChallan_DocId" })
                            @Html.ValidationMessageFor(m => m.SalesChallan.ChallanNo)<span class="loading SalesChallan_ChallanNo">
                                <img title="w_loader_gr.gif" src="/Content/themes/img/loaders/w_loader_gr.gif" /></span>
                        </span></span><span class="stack">
                            <label class="label-37">
                                Date</label>
                            <span class="field">
                               @Html.TextBoxFor(m => m.ChallanDate)
                                @Html.ValidationMessageFor(m => m.ChallanDate)
                            </span></span>
                </div>
            </div>
            <div style="float: left; width: 475px" class="left">
                <div>
                    <div class="lag">
                        <label class="label-70">
                            Order No</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.SalesOrderId)
                            @Html.TextBoxFor(x => x.OrderNo, new { @class = "modallink_custom input-346 input", displaytext = "OrderNo", href = "/Entry/GetSalesOrderForPickList", valueId = "SalesOrderId", valuetype = "salesorder" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-70">
                            Customer</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.SalesChallan.GlCode)
                            <input type="text" class = "modallink input-346 input" href="@Url.Action("GetCustomerList", "Entry")" valueId="SalesChallan_GlCode" id="vendor" entermsg = "Press F1 for choosing existing Account list." />
                            @Html.ValidationMessageFor(m => m.SalesChallan.GlCode)
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-70">
                            Agent</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.SalesChallan.AgentCode, new { @class = "input-90", entermsg = "Enter Voucher No." })
                            <input type="text" class = "modallink input-346 input" href="@Url.Action("GetAgent", "Master")" valueId="SalesChallan_AgentCode" id="agent" entermsg = "Press F1 for choosing existing cash/bank list." />
                        </span>
                    </div>
                </div>
            </div>
            <div class="right thumbnail" style="width: 300px; float: right">
                @*<fieldset>*@
                <div class="lag">
                    <label class="label-120">
                        Credit Limit</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.CreditLimit, new { @class = "input-120 input", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Current Balance</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.CurrentBalance, new { @class = "input-120 input", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Outstanding Challan</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.OutstandingChallan, new { @class = "input-120 input", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Total Outstanding</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.TotalOutstanding, new { @class = "input-120 input", disabled = "disabled" })
                    </span>
                </div>
                <div class="clearfix">
                </div>
                @*</fieldset>*@
            </div>
        </fieldset>
        <div id="tabs">
            <ul>
                <li><a href="#tabs-1">Product Details</a></li>
                <li><a href="#tabs-2">Import/Transport Details</a></li>
            </ul>
            <div id="tabs-1">
                <div class="lag detailEntryTable">
                    <table class="table-bordered" id="table-detail">
                        <tr class="nodrop nodrag">
                            <th width="20px">
                            </th>
                            <th width="250px">
                                Particular
                            </th>
                            <th>Godown</th>
                            <th width="80px">
                                Qty
                            </th>
                            <th>
                                Unit
                            </th>
                            <th width="80px">
                                Atl Qty
                            </th>
                            <th>
                                Alt Unit
                            </th>
                            <th width="80px">
                                Rate
                            </th>
                            <th width="80px">
                                Basic Amt
                            </th>
                            <th width="80px" style="@display">
                                Term Amt
                            </th>
                            <th width="80px" style="@display">
                                Net Amt
                            </th>
                        </tr>
                        <tbody id="body-challan-detail">
                            @{
    var viewModel=new KRBAccounting.Service.Models.Sales.SalesDetailEntryViewModel();
    viewModel.AllowProductWiseBillTerm = Model.AllowProductWiseBillTerm;
    viewModel.UnitList = Model.UnitList;
    viewModel.Index = 0;
                            }
                            @Html.Partial("_PartialSalesDetailEntry", viewModel)
                        </tbody>
                    </table>
                </div>
                <div class="lag">
                    <span class="stack">
                        <label class="label-90">
                            Short Name</label>
                        @Html.TextBoxFor(x => x.ShortName, new { @class = "input-100 input", disabled = "disabled" })
                    </span><span class="stack" style="padding-left: 40px">
                        <label class="label-90">
                            Stock Qty</label>
                        @Html.TextBoxFor(x => x.StockQty, new { @class = "input-100 input", disabled = "disabled" })
                    </span><span class="stack" style="padding-left: 40px">
                        <label class="label-90">
                            Alt Stock Qty</label>
                        @Html.TextBoxFor(x => x.AltStockQty, new { @class = "input-100 input", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <span class="stack" style="padding-left: 264px">
                        <label class="label-90">
                            Total Qty</label>
                        @Html.TextBoxFor(x => x.TotalQty, new { @class = "input-100 input", disabled = "disabled" })
                    </span><span class="stack" style="padding-left: 40px">
                        <label class="label-90">
                            Total Alt Qty</label>
                        @Html.TextBoxFor(x => x.TotalAltQty, new { @class = "input-100 input", disabled = "disabled" })
                    </span>
                </div>
            </div>
            <div id="tabs-2">
                <div class="left thumbnail" style="float: left; width: 358px">
                    <div class="lag">
                        <label class="label-120">
                            PPD No.</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesChallanImpTransDoc.PPDNo, new { @class = "input-120 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            PPD Date</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PPDDate, new { @class = "input-90 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Taxable Value</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesChallanImpTransDoc.TaxableAmt, new { @class = "input-90 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Vat</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesChallanImpTransDoc.Vat, new { @class = "input-90 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Custom Name</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesChallanImpTransDoc.CustomName, new { @class = "input-190 input" })
                        </span>
                    </div>
                </div>
                <div class="right thumbnail" style="margin-left: 20px; float: right; width: 358px">
                    <div class="lag">
                        <label class="label-120">
                            Transport</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesChallanImpTransDoc.Transport, new { @class = "input-190 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Vehicle No</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesChallanImpTransDoc.VehicleNo, new { @class = "input-120 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            C/N No</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesChallanImpTransDoc.CnNo, new { @class = "input-100 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            C/N Date</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.CnDate, new { @class = "input-80 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Document Bank</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesChallanImpTransDoc.DocumentBank, new { @class = "input-190 input" })
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <fieldset>
            <div class="lag">
                <span class="stack">
                    <label class="label-70">
                        Basic Amt</label>
                    @Html.TextBoxFor(x => x.SalesChallan.BasicAmt, new { @class = "input-80 MasterBasicAmt", @readonly = "readonly" })
                </span><span class="stack" style="padding-left: 15px">
                    <label class="label-60">
                        Term Amt</label>
                    @Html.TextBoxFor(x => x.SalesChallan.TermAmt, new { @class = "input-80", @readonly = "readonly" })
                    <input type="button" class="btn btn-mini billwise_term" value="Term" />
                </span><span class="stack" style="padding-left: 15px">
                    <label class="label-60">
                        Total Amt</label>
                    @Html.TextBoxFor(x => x.SalesChallan.NetAmt, new { @class = "input-80", @readonly = "readonly" })
                </span><span class="stack" style="padding-left: 15px">
                    <label class="label-85">
                        Total Amt in Rs</label>
                    @Html.TextBoxFor(x => x.TotalAmtRs, new { @class = "input-90", disabled = "disabled" })
                </span>
            </div>
        </fieldset>
        <div class="lag">
            <label class="label-90">
                Remarks</label>
            <span class="field">
                @Html.TextBoxFor(m => m.SalesChallan.Remarks, new { @class = "input-245 input" })
            </span>
        </div>
    </div>
@* if (Model.SystemControl.UDF == "1")
    {
        if (Model.UdfEntries.LongCount() != 0)
        {
    <a href="javascript:void(0);" class="btn UDFCustomFiled">UDF</a>
    <div class="UDFEntry">
        @Html.Partial("_PartialUdfField", Model.UdfEntries)
    </div>
        }
    }*@
}
<script type="text/javascript">
   var totalAmt = parseFloat(0);
   var totalQty = parseFloat(0);
   $(document).ready(function () {
     var dateType = @Model.SystemControl.DateType.ToString();
     if(dateType=="1") {
            $("#ChallanDate").mask("99/99/9999");
            $("#ChallanDate").live("blur", function() {
                var validDate = isDate($(this).val(),"/",1,0,2);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
            }
    else {
            $("#ChallanDate").mask("9999/99/99");
            $("#ChallanDate").live("blur", function() {
                var date = $(this).val();
                var validDate=isNepaliDate(date);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
        }
       
     
       if(dateType=="1") {
            $("#PPDDate,#CnDate").mask("99/99/9999");
            $("#PPDDate,#CnDate").live("blur", function() {
                if($(this).val()!="__/__/____"&& $(this).val()!=" ") 
                    {
                var validDate = isDate($(this).val(),"/",1,0,2);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
                    }
            });
            }
    else {
            $("#PPDDate,#CnDate").mask("9999/99/99");
            $("#PPDDate,#CnDate").live("blur", function() {
                if($(this).val()!="____/__/__"&& $(this).val()!=" ") 
                    {
                var date = $(this).val();
                var validDate=isNepaliDate(date);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
                    }
            });
        }

       $("#tabs").tabs();
       $(".text_product").attr("id", "product_0");
       $(".text_product").attr("valueId", $(".productId").attr("id"));
       $(".text_product").closest("tr").attr("id", "tr_0");
   });
</script>
