@using System.Web.Script.Serialization
@model KRBAccounting.Web.ViewModels.Entry.PurchaseReturnViewModel
@{
    var serializer = new JavaScriptSerializer();
    ViewBag.Title = "Purchase Return";
}
<script src="/Scripts/jquery.queryable-1.0.min.js" type="text/javascript"></script>
<style>
    .product_batch
    {
        cursor: pointer;
    }
</style>
<div class="breadLine">
    <ul class="breadcrumb">
        @* <li><a href="@Url.Action("PurchaseOrder", "Entry")">Order</a> <span class="divider">
            |</span></li>
        <li><a href="@Url.Action("PurchaseChallan", "Entry")">Challan</a> <span class="divider">
            |</span></li>*@
        @if (KRBAccounting.Web.CustomFilters.CheckPermission.GivePermission("Navigate", "SBT"))
        {
            <li><a href="@Url.Action("PurchaseInvoice", "Entry")">Invoice</a> <span class="divider">
                |</span></li>
        }
        @if (KRBAccounting.Web.CustomFilters.CheckPermission.GivePermission("Navigate", "PBT"))
        {
            <li><a href="@Url.Action("PurchaseReturn", "Entry")">Return</a> <span class="divider">
                |</span></li>
        }
    </ul>
</div>
<div id="purchasereturn-list">
    @Html.Action("PurchaseReturnList")
</div>
<div class="dialog" id="modalPurchaseReturn" style="display: none;" title="Purchase Return(+)">
    <div class="block">
    </div>
</div>
<div class="dialog" id="SchemeDialog" style="display: none;" title="Schemes (+)">
    <div class="block">
    </div>
</div>
<div class="dialog" id="modalProductBatch" style="display: none;" title="Batch">
    <div class="block">
    </div>
</div>

<script src="@Url.Content("~/Scripts/jQuery.tmpl.min.js")" type="text/javascript"></script>
<script type="text/x-jquery-tmpl" id="ProductBillTermTemplate">    
    <span class="single-list" style="display: none">
        <input autocomplete="off" class="collection_index" name="billTermList.Index" type="hidden" value="${index}" />
        <input class="billing_term_value billing_term Id" id="billTermList___${index}___Id" name="billTermList[${index}].Id" type="hidden" value="${Id}" />
        <input class="billing_term amount" id="billTermList___${index}___Amount" name="billTermList[${index}].Amount" type="hidden" value="${Amount}" />
        <input class="billing_term Basis" id="billTermList___${index}___Basis" name="billTermList[${index}].Basis" type="hidden" value="${Basis}" />
        <input class="billing_term Description" id="billTermList___${index}___Description" name="billTermList[${index}].Description" type="hidden" value="${Description}" />
        <input class="billing_term Rate" id="billTermList___${index}___Rate" name="billTermList[${index}].Rate" type="hidden" value="${Rate}" />
        <input class="billing_term Sign" id="billTermList___${index}___Sign" name="billTermList[${index}].Sign" type="hidden" value="${Sign}" />
        <input class="billing_term BillingTermIndex" id="billTermList___${index}___BillingTermIndex" name="billTermList[${index}].BillingTermIndex" type="hidden" value="${BillingTermIndex}" />
        <input class="billing_term IsProductWise" id="billTermList___${index}___IsProductWise" name="billTermList[${index}].IsProductWise" type="hidden" value="${IsProductWise}" />
        <input class="billing_term ParentGuid" id="billTermList___${index}___ParentGuid" name="billTermList[${index}].ParentGuid" type="hidden" value="${ParentGuid}" />
        <input class="billing_term DisplayOrder" id="billTermList___${index}___DisplayOrder" name="billTermList[${index}].DisplayOrder" type="hidden" value="${DisplayOrder}" />
    </span>
</script>
<script type="text/x-jquery-tmpl" id="BillTermPopupTemplate">    
    <tr class="alt">
        <input type="hidden" class="billingterm_Id" value="${Id}">
        <input type="hidden" class="billingterm_displayorder" value="${DisplayOrder}">
        <td class="billingterm_Description">${Description}</td>
        <td class="billingterm_Basis">${Basis}</td>
        <td class="billingterm_Sign">${Sign}</td>
        <td><input type="text" value="${Rate}" style="width:50px;" class="billingterm_rate input"></td>
        <td><input type="text" value="${Amount}" style="width:70px;" class="billingterm_amount"></td>        
    </tr>
</script>
<script type="text/javascript">
var productWiseBatchList=@Html.Raw(serializer.Serialize(Model.ProductWiseBillTerms));
var billWiseBatchList=@Html.Raw(serializer.Serialize(Model.BillWiseBillTerms));
    var negativeStockAction = "";
    var dateType = "";
    function PicklistCustomFunction(value, type) {
        if(type=='purchasereturn') {
            $.ajax({
            url: '/Entry/GetProductBatchSales',
            data:{productId:value},
            begin:function () {
                BeginRequest();
            },
            success: function(data) {
                if(element.closest("tr").find(".unit").hasClass("disablealtunit")) {
                    element.closest("tr").find(".altUnit").val(data.altUnit);
                }
                if(element.closest("tr").find(".unit").hasClass("disableunit")) {
                    element.closest("tr").find(".unit").val(data.unit);
                }
                if(data.success) {
                    $("#modalProductBatch .block").html(data.view);
                    $("#modalProductBatch").dialog("open");
                }
                else {
                    element.closest("tr").find(".batchid").val("");
                    element.closest("tr").find(".BatchSerialNo").val("");
                }
            },
            complete: function () {
                $.unblockUI();
            }
        });
        }
        if (type == "ledger") {

            var invoiceDate = $("#InvoiceDate").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("PopulatePurchaseReturnLedgerList", "Entry")',
                data: {
                    id: value,
                    date: invoiceDate
                },
                beforeSend: function () {
                    BeginRequest();
                },
                success: function (data) {
                    $("#vendor").val(data.VendorName);
                    $("#PurchaseReturnMaster_AgentCode").val(data.AgentId);
                    $("#agent").val(data.AgentName);
                    $("#PurchaseReturnMaster_AgentCode").val(data.AgentId);
                    $("#PurchaseReturnMaster_DueDay").val(data.CreditDays);
                    $("#CurrencyId").val(data.Currency);
                    $("#PurchaseReturnMaster_CurrencyId").val(data.CurrencyId);
                    $("#DueDate").val(data.DueDate);
                    dateType = data.DateType;
                    resetValidation();
                },
                complete: function () {
                    $.unblockUI();
                }
            });
        }
    }
    
    $("#modalProductBatch").dialog({
        autoOpen: false,
        modal: true,
        width: 'auto',
        buttons: {
            "Ok": function () {
                var BatchSerialNo = $(this).find(".BatchSerialNo").val();
                var BatchQty = $(this).find(".BatchQty").val();
                var BatchUnitId = $(this).find(".BatchUnitId").val();
                var BatchMfgDate = $(this).find(".BatchMfgDate").val();
                var BatchExpDate = $(this).find(".BatchExpDate").val();
                var BatchIsMfgDate = $(this).find(".BatchIsMfgDate").val();
                var BatchIsExpDate = $(this).find(".BatchIsExpDate").val();
                var BatchGodownId= $(this).find(".BatchGodownId").val();
                var BatchGodown = $(this).find(".BatchGodown").val();
                var BatchBuyRate = $(this).find(".BatchBuyRate").val();
                var BatchSalesRate= $(this).find(".BatchSalesRate").val();
                var BatchProductId = element.closest("td").find(".productId").val();
                var parentGuid = element.closest("td").find(".detailGuid").val();
                var guid = _generateGuid();
                element.closest("td").find(".product_batch").html($("#ProductBatchTemplate").tmpl({ index: guid,
                    BatchSerialNo:BatchSerialNo,
                    Qty:BatchQty,
                    UnitId:BatchUnitId,
                    MfgDate:BatchMfgDate,
                    ExpDate:BatchExpDate,
                    IsMfgDate:BatchIsMfgDate,
                    IsExpDate:BatchIsExpDate,
                    ParentGuid:parentGuid,
                    GodownId:BatchGodownId,
                    Godown:BatchGodown,
                    ProductId: BatchProductId,
                    BuyRate:BatchBuyRate,
                    SalesRate:BatchSalesRate
                }));
                element.closest("tr").find(".unit").val(BatchUnitId);
                element.closest("tr").find(".qty").val(BatchQty);
                element.closest("tr").find(".unit").val(BatchUnitId);
                element.closest("tr").find(".qty").val(BatchQty);
                element.closest("tr").find(".godownId").val(BatchGodownId);
                element.closest("tr").find(".godown").val(BatchGodown);
                //unit 
                $(this).dialog("close");
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });
    $("#modalPurchaseReturn").dialog({
        autoOpen: false,
        modal: true,
        width: 'auto',
        buttons: {
            "Ok": function () {
                var form = $(".ui-dialog #purchase-return-form");
                var isValid = $("form").valid();
                var currencyId = $("#CurrencyId").val();
                if (currencyId != "" && currencyId!=null) {
                    var rate = $("#PurchaseReturnMaster_CurrRate").val();
                    if (rate == "") {
                        // alert("Please, fill the currency rate");
                        $("#PurchaseReturnMaster_CurrRate").addClass("error");
                    }
                }
                var error = document.querySelectorAll('.error');
                if (error.length > 0) {
                    isValid = false;
                }
                if(isValid) {
                    if (!$("#PurchaseReturnMaster_GlCode").val() || !$("#vendor").val()) {
                        $("#vendor").addClass("error");
                        isValid = false;
                    } else {
                        $("#vendor").removeClass("error");
                        isValid = true;
                    }
                }
                if (isValid) {
                    var length = $(".detail-entry").length;
                    $(".detail-entry").each(function (index) {
                        if (index == 0 || index != length - 1) {
                            if ($(this).find(".text_product").val() == 0 || $(this).find(".text_product").val() == "") {
                                isValid = false;
                                $(this).find(".text_product").addClass("error").focus();
                            }
                            if ($(this).find(".basicAmt").val() == 0 || $(this).find(".basicAmt").val() == "") {
                                if (isValid) {
                                    if ($(this).find(".qty").val() == 0 || $(this).find(".qty").val() == "") {
                                        $(this).find(".qty").addClass("error").focus();
                                    }
                                    if ($(this).find(".rate").val() == 0 || $(this).find(".rate").val() == "") {
                                        $(this).find(".rate").addClass("error").focus();
                                    }
                                } else {
                                    if ($(this).find(".qty").val() == 0 || $(this).find(".qty").val() == "") {
                                        $(this).find(".qty").addClass("error");
                                    }
                                    if ($(this).find(".rate").val() == 0 || $(this).find(".rate").val() == "") {
                                        $(this).find(".rate").addClass("error");
                                    }
                                }
                                isValid = false;
                            }

                        }
                    });
                }
                else {
                    isValid = false;
                        
                }
                if (isValid) {
                    $.ajax({
                        type: "POST",
                        url: form.attr('action'),
                        data: form.serialize(),
                        beforeSend: function () {
                            $.blockUI();
                        },
                        success: function (data) {
                            if (data.success) {
                                OnComplete();
                            }
                            else {
                                $("#MsgError").html(data.msg).show();
                            }
                        },
                        complete: function () {
                            $.unblockUI();
                        }
                    });
                }
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });
//    function CalculateTotalAmt() {
//        var totalAmt = parseFloat(0);
//        var receiptAmtElements = document.querySelectorAll(".amt");
//        var i;
//        for (i = 0; i < receiptAmtElements.length; i++) {
//            var amt = receiptAmtElements[i].value;
//            if (amt != "") {
//                totalAmt = totalAmt + parseFloat(amt);
//            }
//        }
//        return totalAmt;
//    }

    function writeError(control, msg) {
        var err_msg = '<div class="alert-message error"><a class="close" href="javascript:void(0);">×</a><p>' + msg + '</p></div>';
        $('#' + control).html(err_msg);
    }

    function getRequest(url) {
        $.blockUI();
        $.ajax({
            url: url,
            context: document.body,
            success: function (data) {
                $('#modalPurchaseReturn .block').html(data);
                $(this).addClass("done");
                $("#modalPurchaseReturn").dialog('open');
            },
            error: function (err) {
                writeError('msgErrorNewLocationDetails', err);
            },
            complete: function () {
                $.unblockUI();
            }
        });
    }

    $('a.addPurchaseReturn').live('click', function () {
        var url = '@Url.Action("PurchaseReturnAdd", "Entry")';
        getRequest(url);

        return false;
    });
    $('a.editPurchaseReturn').live('click', function () {
        var id = $(this).attr("data-id");
        var url = '@Url.Action("PurchaseReturnEdit", "Entry")/' + id;
        getRequest(url);

        return false;
    });
    $('a.approvedPurchaseReturn').live('click', function () {
        var id = $(this).attr("data-id");
        var url = '@Url.Action("PurchaseReturnApproved", "Entry")/' + id;
        $.ajax({
            url: url,
            type: 'Post',
            success: function () {
                $("#purchasereturn-list").load("/Entry/PurchaseReturnList");
            }
        });

        return false;
    });

    $("a.PurchaseReturnDelete").live('click', function () {
        var result = confirm('Are you sure want to delete this?');
        if (result) {
            var url = '@Url.Action("PurchaseReturnDelete")';
            var id = $(this).attr("data-id");
            var element = $(this);
            $.ajax({
                url: url,
                type: 'post',
                data: { id: id },
                success: function (data) {
                    if (data) {
                        element.closest("tr").remove();
                    } else {
                        alert("could not delete");
                    }
                },
                error: function (err) {
                    writeError('msgErrorNewLocationDetails', err);
                }
            });
        }

    });

    $('#savePurchaseReturn').live('click', function () {
        //if ($(".text_ledger:last").val()==""||$(""))
        $("#purchase-return-form").submit();
    });

    function OnComplete() {
        $('#modalPurchaseReturn .block').load("/Entry/PurchaseReturnAdd");
        $("#purchasereturn-list").load("/Entry/PurchaseReturnList");
    }

    $(".rate").live('keydown', function (e) {
        DisplayBillTerm(e, $(this));
//        var element = $(this);
//        var ev = e || event;
//        var keycode = ev.keyCode;
//        if (keycode == 13 || keycode == 9) {
//            var closestTr = element.closest("tr");
//            if (closestTr.find(".productId").val() != "" && closestTr.find(".productId").val() != 0 && closestTr.find(".qty").val() != "" && closestTr.find(".rate").val() != "") {
//                var qty = parseFloat(closestTr.find('.qty').val());
//                var rate = parseFloat(closestTr.find('.rate').val());
//                var basicAmt = qty * rate;
//                $((closestTr.find(".basicAmt").val(basicAmt)));
//                var link = $(this).attr("href");
//                var id = $('#table-detail tr:last').attr("id");
//                var arrString = id.split("_");
//                var index = parseInt(arrString[1]) + 1;
//                //pass index as parameter while creating new table row to keep track of billing term(find out which billing term belong to which sales detail)
//                $.ajax({
//                    url: link,
//                    type: "GET",
//                    data: {
//                        index: index
//                    },
//                    error: function () {
//                        alert("An error occurred.");
//                    },
//                    success: function (data) {
//                        if (closestTr.is(":last-child")) {
//                            $('#table-detail tr:last').addClass("deletable");
//                            $('#table-detail tr:last').after(data);
//                            $(".text_product:last").attr("id", "product_" + index);
//                            $(".text_product:last").closest("tr").attr("id", "tr_" + index);
//                            $(".text_product").attr("valueId", $(".productId:last").attr("id"));
//                        }
//                        selectedElement = closestTr;
//                        if ($(element).hasClass("rate-bill-term")) {
//                            isProductWise = true;

//                            $.ajax({
//                                url: "/Entry/GetPurchaseBillingTerm?productwise=1",
//                                dataType: "json",
//                                type: "GET",
//                                error: function () {
//                                    alert("An error occurred.");
//                                },
//                                success: function (data) {
//                                    if (data != "") {
//                                        var tableData = CreateBillingTermTableViewProductWise(data, "listpopup", true, element);
//                                        $('#modalbox-billingterm-productwise .msg-body').html(tableData);
//                                        $("#modalbox-billingterm-productwise").dialog({
//                                            modal: true,
//                                            width: 'auto',
//                                            buttons: {
//                                                "Ok": function () {
//                                                    selectedElement.find(".billing_term").remove();
//                                                    var termAmt = parseFloat(0);
//                                                    closestTr.find(".product_wise_billterms").html("");
//                                                    $(this).closest("#modalbox-billingterm-productwise").find(".billingterm_amount").each(function () {
//                                                        if ($(this).val() != "") {
//                                                            var value = parseFloat(0);
//                                                            var basis = $(this).closest("tr").find(".billingterm_Basis").html();
//                                                            var sign = $(this).closest("tr").find(".billingterm_Sign").html();
//                                                            var rate = $(this).closest("tr").find(".billingterm_rate").val();
//                                                            var desc = $(this).closest("tr").find(".billingterm_Description").html();
//                                                            var id = $(this).closest("tr").find(".billingterm_Id").val();
//                                                            value = parseFloat($(this).val());
//                                                            if (sign == "-") {
//                                                                termAmt = RoundTwoDecimalPlace(termAmt - value);
//                                                            } else {
//                                                                termAmt = RoundTwoDecimalPlace(termAmt + value);
//                                                            }
//                                                            var basicAmt = selectedElement.find(".basicAmt").val();
//                                                            selectedElement.find(".termAmt").val(termAmt);
//                                                            var netAmt = parseFloat(basicAmt) + parseFloat(termAmt);
//                                                            selectedElement.find(".netAmt").val(netAmt);
//                                                            var index = selectedElement.find(".indexId").val();
//                                                            if (value != 0) {
//                                                                $.ajax({
//                                                                    url: "/Entry/InsertBillTerm",
//                                                                    type: "GET",
//                                                                    data: {
//                                                                        desc: desc,
//                                                                        basis: basis,
//                                                                        id: id,
//                                                                        amount: value,
//                                                                        rate: rate,
//                                                                        sign: sign,
//                                                                        index: index,
//                                                                        isProductWise: true
//                                                                    },
//                                                                    success: function (data) {
//                                                                        element.append(data);
//                                                                    }
//                                                                });
//                                                            }
//                                                        }
//                                                    });
//                                                    getTotalQty();
//                                                    getTotalAmt();
//                                                    $('input[type="text"]').focus(function () {
//                                                        if ($(this).attr("entermsg")) {
//                                                            $(".enter-msg").html($(this).attr("entermsg"));
//                                                        } else {
//                                                            $(".enter-msg").html("");
//                                                        }
//                                                        $(".receipt-amt").blur(function () {
//                                                            if ($(this).val() != "") {
//                                                                selectedElement.find(".payment-amt").attr("disabled", "disabled");
//                                                            } else {
//                                                                selectedElement.find(".payment-amt").removeAttr("disabled");
//                                                            }
//                                                        });
//                                                        $(".payment-amt").blur(function () {
//                                                            if ($(this).val() != "") {
//                                                                selectedElement.find(".receipt-amt").attr("disabled", "disabled");
//                                                            } else {
//                                                                selectedElement.find(".receipt-amt").removeAttr("disabled");
//                                                            }
//                                                        });
//                                                    });
//                                                    $(".msg-body").html("");
//                                                    $("#billing-term-list").html("");
//                                                    $(this).dialog("close");
//                                                },
//                                                Cancel: function () {
//                                                    $(this).dialog("close");
//                                                }
//                                            }
//                                        });
//                                        $('.input').focus(function () {
//                                            $(this).select();
//                                        });
//                                        //$("#billing-term-list").html("");
//                                        $('#modalbox-billingterm-productwise').find(".billingterm_rate").first().focus();
//                                        return false;
//                                    }
//                                }
//                            });
//                            return false;
//                        } else {
//                            var basicAmt = selectedElement.find(".basicAmt").val();
//                            selectedElement.find(".termAmt").val(0);
//                            selectedElement.find(".netAmt").val(basicAmt);
//                            getTotalQty();
//                            getTotalAmt();
//                        }
//                        closestTr.next().find('.text_product').focus();
//                        isProductWise = false;
//                        getTotalQty();
//                        getTotalAmt();
//                        $('input[type="text"]').focus(function () {
//                            if ($(this).attr("entermsg")) {
//                                $(".enter-msg").html($(this).attr("entermsg"));
//                            } else {
//                                $(".enter-msg").html("");
//                            }
//                            $(".receipt-amt").blur(function () {
//                                if ($(this).val() != "") {
//                                    closestTr.find(".payment-amt").attr("disabled", "disabled");
//                                } else {
//                                    closestTr.find(".payment-amt").removeAttr("disabled");
//                                }
//                            });
//                            $(".payment-amt").blur(function () {
//                                if ($(this).val() != "") {
//                                    closestTr.find(".receipt-amt").attr("disabled", "disabled");
//                                } else {
//                                    closestTr.find(".receipt-amt").removeAttr("disabled");
//                                }
//                            });
//                        });
//                        $("#billing-term-list").html("");
//                    }
//                });
//            }
//            closestTr.find(".text_ledger").addClass("error");
//            closestTr.find(".text_ledger").focus();
//            return false;
//        }
//        return true;
    });

    $(".select").live('dblclick', function () {
        if ($(this).closest("tr").hasClass('deletable')) {
            $(this).closest("tr").remove();
            getTotalQty();
            getTotalAmt();
        }
    });
    $(".del-row").live('click', function(e) {
        $(this).closest("tr").remove();
        getTotalQty();
        getTotalAmt();
    });

    $('input[type="text"]').focus(function () {
        if ($(this).attr("entermsg")) {
            $(".enter-msg").html($(this).attr("entermsg"));
        } else {
            $(".enter-msg").html("");
        }

    });

    $(".receipt-amt").blur(function () {
        var closestTr = $(this).closest("tr");
        if ($(this).val() != "") {
            closestTr.find(".payment-amt").attr("disabled", "disabled");
        } else {
            closestTr.find(".payment-amt").removeAttr("disabled");
        }
    });

    $(".payment-amt").blur(function () {
        var closestTr = $(this).closest("tr");
        if ($(this).val() != "") {
            closestTr.find(".receipt-amt").attr("disabled", "disabled");
        } else {
            closestTr.find(".receipt-amt").removeAttr("disabled");
        }
    });

    $(".text_product").live("focusout", function () {
        if ($(this).val() == "") {
            $(this).addClass("error");
            $(this).focus();
        } else {
            $(this).removeClass("error");
        }
    });

    $("#vendor").live("focusout", function () {
        var glCode = $("#PurchaseReturnMaster_GlCode").val();
        if (glCode != "") {
            $.getJSON("/Entry/GetVendorDetails?glCode=" + glCode, null, function (data) {
                $("#CreditLimit").val(data.creditLimit);
                $("#CurrentBalance").val(data.balance);
                $("#OutstandingChallan").val(data.outstandingChallan);
                $("#TotalOutstanding").val(data.totalOutstanding);
            });
        }
    });

    $(".text_product").live("focus", function () {
        var element = $(this);
        var productId = $(this).closest("tr").find(".productId").val();
        $(this).removeClass("error");
        $(this).closest("tr").find(".product_text").removeClass("error");
        if (productId != "" && productId != 0) {
            $.getJSON("/Entry/ProductShortName?id=" + productId, null, function (data) {
                $("#ShortName").val(data);
            });
            $.getJSON("/Entry/ProductStockQuantity?id=" + productId, null, function (data) {
                $("#StockQty").val(data);
            });

            $.getJSON("/Entry/GetLowestUnit?id=" + productId, null, function (code) {
                //element.closest("tr").find(".unit").val(code);
                element.closest("tr").find(".altUnit").val(code);
            });
            if(element.closest("tr").find(".unit").hasClass("disablealtunit")) {
                $.getJSON("/Entry/GetDropDownlist?productId=" + productId, null, function(code) {
                    var innerhtml = '';
                    $.each(code, function() {
                        innerhtml += '<option value="' + this.Id + '">' + this.Code + '</option>';

                    });
                    element.closest("tr").find(".unit").html(innerhtml);
                });
            }
        } else {
            $("#ShortName").val("");
            $("#StockQty").val("");
        }
    });

    $(".UDFCustomFiled").live("click", function () {
        $(".UDFEntry").toggle('hide');

    });

//    function getTotalQty() {
//        totalQty = parseFloat(0);
//        var qtyElements = document.querySelectorAll(".qty");
//        var i;
//        for (i = 0; i < qtyElements.length; i++) {
//            var amt = qtyElements[i].value;
//            if (amt != "") {
//                totalQty = totalQty + parseFloat(amt);
//            }
//        }
//        $("#TotalQty").val(totalQty);
//    }

//    function getTotalAmt() {

//        var totalAmt = parseFloat(0);

//        var basicAmtElements = document.querySelectorAll(".netAmt");
//        var j;
//        for (j = 0; j < basicAmtElements.length; j++) {
//            var amt = Math.abs(basicAmtElements[j].value);
//            if (amt != "") {
//                totalAmt = totalAmt + parseFloat(amt);
//            }
//        }
//        var netAmt = totalAmt;
//        var termAmt = 0;

//        $("#billing-term-list .billing_term_value").each(function () {
//            if ($(this).val() != "") {
//                var basis = $(this).attr("basis");
//                var sign = $(this).attr("sign");
//                var rate = parseFloat($(this).attr("rate"));
//                var value = rate / 100 * totalAmt;
//                if (sign == "-") {
//                    termAmt = RoundTwoDecimalPlace(termAmt - value);
//                } else {
//                    termAmt = RoundTwoDecimalPlace(termAmt + value);
//                }
//                netAmt = parseFloat(totalAmt) + parseFloat(termAmt);
//                //alert(termAmt);
//                //alert($(this).closest("span").find(".amount").val());
//                var newTermAmt = Math.abs(termAmt);
//                $(this).closest("span").find(".amount").val(newTermAmt);
//            }
//        });
//        $("#PurchaseReturnMaster_BasicAmt").val(totalAmt);
//        $("#PurchaseReturnMaster_NetAmt").val(netAmt);
//        $("#PurchaseReturnMaster_TermAmt").val(termAmt);
//        $("#TotalAmtRs").val(netAmt);
//    }

    $(".text_product").live('keydown', function (e) {
        DisplayBillWiseTerm('#purchase-return-form', $(this), e);
//        if ($(this).closest("tr").is(":first-child") || $(this).val() != "") {
//            return true;
//        } else {
//            var ev = e || event;
//            var keycode = ev.keyCode;
//            if (keycode == "13") {
//                if ($(this).val() == "") {
//                    $.ajax({
//                        url: "/Entry/GetPurchaseBillingTerm",
//                        dataType: "json",
//                        type: "GET",
//                        error: function () {
//                            alert("An error occurred.");
//                        },
//                        success: function (data) {
//                            if (data != "") {
//                                isProductWise = false;
//                                var tableData = CreateBillingTermTableView(data, "listpopup", true);
//                                $('#modalbox-billingterm .msg-body').html(tableData);
//                                $("#modalbox-billingterm").dialog({
//                                    modal: true,
//                                    width: 'auto',
//                                    buttons: {
//                                        "Ok": function () {
//                                            $("#billing-term-list").html("");
//                                            var termAmt = parseFloat(0);
//                                            $(this).closest("#modalbox-billingterm").find(".billingterm_amount").each(function () {
//                                                if ($(this).val() != "") {
//                                                    var value = parseFloat(0);
//                                                    var basis = $(this).closest("tr").find(".billingterm_Basis").html();
//                                                    var sign = $(this).closest("tr").find(".billingterm_Sign").html();
//                                                    var rate = $(this).closest("tr").find(".billingterm_rate").val();
//                                                    var desc = $(this).closest("tr").find(".billingterm_Description").html();
//                                                    var id = $(this).closest("tr").find(".billingterm_Id").val();
//                                                    value = parseFloat($(this).val());
//                                                    if (sign == "-") {
//                                                        termAmt = RoundTwoDecimalPlace(termAmt - value);
//                                                    } else {
//                                                        termAmt = RoundTwoDecimalPlace(termAmt + value);
//                                                    }
//                                                    var basicAmt = $("#PurchaseReturnMaster_BasicAmt").val();
//                                                    var netAmt = parseFloat(basicAmt) + parseFloat(termAmt);
//                                                    $("#PurchaseReturnMaster_NetAmt").val(netAmt);
//                                                    $("#TotalAmtRs").val(netAmt);
//                                                    $("#PurchaseReturnMaster_TermAmt").val(termAmt);
//                                                    if (value != 0) {
//                                                        $.ajax({
//                                                            url: "/Entry/InsertBillTerm",
//                                                            type: "GET",
//                                                            data: {
//                                                                desc: desc,
//                                                                basis: basis,
//                                                                id: id,
//                                                                amount: Math.abs(value),
//                                                                rate: rate,
//                                                                sign: sign,
//                                                                isProductWise: false
//                                                            },
//                                                            success: function (data) {
//                                                                $(".ui-dialog #billing-term-list").append(data);
//                                                            }
//                                                        });
//                                                    }
//                                                }
//                                            });
//                                            $(this).dialog("close");
//                                        },
//                                        Cancel: function () {
//                                            $(this).dialog("close");
//                                        }
//                                    }
//                                });
//                                $('#modalbox-billingterm').find(".billingterm_rate").first().focus();
//                            }
//                        }
//                    });
//                    return false;
//                }
//                return true;
//            }
//        }
    });
    
    $(".unit").live("change", function() {
        var element = $(this);
        var closestTr = element.closest("tr");
        var unit = $(this).val();
        var productId = closestTr.find(".productId").val();
        var lowestUnit = closestTr.find(".altUnit").val();
        var quantity = closestTr.find(".qty").val();
        if(quantity!="" && quantity!=0 && productId!=0) {
            var url = "@Url.Action("GetConversionDetail")?productId=" + productId + "&&quantity=" + quantity + "&&Unit=" + unit + "&&LowestUnit=" + lowestUnit+"&&type=P";
            $.getJSON(url, function(success) {
                closestTr.find(".altQty").val(success.convertvalue);
                closestTr.find(".rate").val(success.ratte);
                closestTr.find(".hiddenrate").val(success.ratte);

                var rate = closestTr.find(".rate").val();

                var basic = parseFloat(quantity) * parseFloat(rate);
                closestTr.find(".basicAmt").val(basic);
                closestTr.find(".termAmt").val(0);
                closestTr.find(".netAmt").val(basic);
            });
        }
        else {
            alert("Enter the quantity and product");
        }
           
    });
       
    $(".qty").live("blur", function() {
        var element = $(this);
        var closestTr = element.closest("tr");
        var unit = closestTr.find(".unit").val();
        var productId = closestTr.find(".productId").val();
        var lowestUnit = closestTr.find(".altUnit").val();
        var quantity = $(this).val();
        $(this).removeClass("error");
        $(this).closest("tr").find(".qty").removeClass("error");
        
        if(quantity!="" && quantity!=0 && productId!=0) {
            var url = "@Url.Action("GetConversionDetail")?productId=" + productId + "&&quantity=" + quantity + "&&Unit=" + unit + "&&LowestUnit=" + lowestUnit+"&&type=P";
            $.getJSON(url, function(success) {
                closestTr.find(".altQty").val(success.convertvalue);
                closestTr.find(".rate").val(success.ratte);
                closestTr.find(".hiddenrate").val(success.ratte);
                var rate = closestTr.find(".rate").val();
                if(rate!=0) {
                    closestTr.find(".rate").removeClass("error");
                }
                var basic = parseFloat(quantity) * parseFloat(rate);
                closestTr.find(".basicAmt").val(basic);
                closestTr.find(".termAmt").val(0);
                closestTr.find(".netAmt").val(basic);
                getTotalAmt();
                getTotalQty();
            });
              
        }
        else {
            alert("Enter the quantity and product");
        }
    });
//    $(".rate").live("keyup", function(e) {
//        if(IsNumberKey(e)) {
//            var element = $(this);
//            var closestTr = element.closest("tr");
//            var quantity = closestTr.find(".qty").val();
//            var rate = closestTr.find(".rate").val();
//              $(this).removeClass("error");
//          $(this).closest("tr").find(".rate").removeClass("error");
//            if (quantity && rate) {
//                var basic = parseFloat(quantity) * parseFloat(rate);
//                closestTr.find(".basicAmt").val(basic);
//                var termAmt = closestTr.find(".termAmt").val();
//                var netAmt = parseFloat(basic) + parseFloat(termAmt);
//                closestTr.find(".netAmt").val(netAmt);
//                getTotalQty();
//                getTotalAmt();
//            }
//        } else {
//            e.preventDefault();
//            return false;
//        }
//    });  
    
    $(".product_batch").live("click", function() {
        if($(this).attr("hasexpireddate")=="True") {
            if($(this).attr("isexpired")=="True"){
                if($(this).find(".expdate").attr("hasvalue")=="true") {
                    var expProduct = $(this).attr("expproduct");
                    if(expProduct==1) {
                        alert("This product has already been expired");
                        return false;
                    }
                    if(expProduct==1) {
                        alert("This product has already been expired");
                    }
                }
            }
        }
        var closestTr = element.closest("tr");
        var godownId = $(this).attr("godown-id");
        var godownname = $(this).find(".godown").text();
        var batchId = $(this).attr("data-id");
        var BatchSerialNo = $(this).find(".BatchSerialNo").text();
        var stockQty = $(this).find(".stockqty").text();
        //BatchSerialNo
        closestTr.find(".batchid").val(batchId);
        closestTr.find(".godownId").val(godownId);
        closestTr.find(".godownname").val(godownname);
        closestTr.find(".BatchSerialNo").val(BatchSerialNo);
        closestTr.find(".StockQty").val(stockQty);
        $("#modalProductBatch").dialog("close");
    });
    
    $("#InvoiceDate").live("blur", function (e) {
        var currentElement = $(this);
        var date = $(this).val();
        var url = '@Url.Action("CheckFiscalyearDateinPurchaseReturn", "Entry")?InvoiceDate=' + date;
        $.post(url, function (data) {
            if (data != "True") {
                currentElement.addClass("error");
                alert(data);

            } else {
                currentElement.removeClass("error");
            }
        });
    });
    
    $("#PurchaseReturnMaster_CurrRate").live("blur", function () {
        var currencyId = $("#CurrencyId").val();
        var current = $(this).val();
        if (currencyId != "") {
            if (current != "") {
                $("#PurchaseReturnMaster_CurrRate").removeClass("error");
            } else {
                $("#PurchaseReturnMaster_CurrRate").addClass("error");
            }

        } else {
            $("#PurchaseReturnMaster_CurrRate").removeClass("error");
        }

    });


    $("#CurrencyId").live("blur", function () {
        var current = $(this).val();
        if (current == "") {
            $("#PurchaseReturnMaster_CurrRate").removeClass("error");
        }

    });
</script>
