@using KRBAccounting.Domain.Entities
@using KRBAccounting.Service
@model  KRBAccounting.Service.Models.Purchase.PurchaseInvoiceAddViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@{
    string display = "display:none;";
    string billTermClass = "";
    if (ViewBag.AllowProductWiseBillTerm == 1)
    {
        display = "";
        billTermClass = "rate-bill-term";
    }
    var purchaseType = @Model.SystemControl.PurchaseDeriveFrom;
    var billingTerms = ((List<BillingTermDetail>)ViewBag.BillingTermList).Where(x => !x.IsProductWise);
    var changeRate = Model.EntryControl != null && Model.EntryControl.ChangeRate;
}
@using (Ajax.BeginForm("PurchaseInvoiceEdit", "Entry", new { controller = "Entry" }, new AjaxOptions { HttpMethod = "Post", OnComplete = "OnCompleteEdit" }, new { @class = "form-horizontal form-custom", id = "purchase-invoice-form" }))
{
    @Html.HiddenFor(x => x.PurchaseInvoice.Id)
    @Html.HiddenFor(x => x.PurchaseInvoice.BranchId)
    @Html.HiddenFor(x => x.PurchaseInvoice.CreatedById)
    @Html.HiddenFor(x => x.PurchaseInvoice.CreatedDate)
    @Html.HiddenFor(x => x.PurchaseInvoice.IsApproved)
    @Html.HiddenFor(x => x.PurchaseInvoice.ApprovedBy)
    @Html.HiddenFor(x => x.PurchaseInvoice.ApprovedDate)
    @Html.HiddenFor(x => x.PurchaseImpTransDoc.PurchaseInvoiceId)
    @Html.HiddenFor(x => x.PurchaseImpTransDoc.Id)
@*   @Html.HiddenFor(x => x.DueDate)*@
    <div id="billing-term-list" style="display: none">
        @foreach (var term in billingTerms)
        {
            @Html.Action("InsertBillTermEdit", term)
        }
    </div>
    <div style="width: 1317px; height: 517px;">
        <fieldset>
            <div style="float: left; width: 100%;" class="one-row">
                <div class="lag">
                    <span class="stack">
                        <label class="label-70">
                            Invoice No.</label>
                        <span class="field">@*<input type="text" value="@Model.PurchaseInvoice.InvoiceNo" readonly="readonly" class="input-90"/>*@
                            @Html.TextBoxFor(m => m.PurchaseInvoice.InvoiceNo, new { @class = "input-90", entermsg = "Enter Voucher No." })
                            @Html.ValidationMessageFor(m => m.PurchaseInvoice.InvoiceNo)<span class="loading PurchaseInvoice_InvoiceNo">
                                <img title="w_loader_gr.gif" src="/Content/themes/img/loaders/w_loader_gr.gif" /></span>
                        </span></span><span class="stack">
                            <label class="label-37">
                                Date</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.InvoiceDate, new { @class = "InvoiceDate" })
                                @Html.ValidationMessageFor(m => m.InvoiceDate)
                            </span></span><span class="stack">
                                <label class="label-70">
                                    Party Inv No.</label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.PurchaseInvoice.PartyInvoiceNo, new { @class = "input-90", entermsg = "Enter Voucher No." })
                                </span></span><span class="stack">
                                    <label class="label-37">
                                        Date</label>
                                    <span class="field">
                                        @Html.TextBoxFor(m => m.PartyDate, new { @class = "input-80 invoicedate", entermsg = "Enter Voucher Date." })
                                    </span></span>
                </div>
            </div>
            <div style="float: left; width: 475px" class="left">
                @* @if (purchaseType == 1)
                {
                    <div class="lag">
                        <label class="label-70">
                            Challan No</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.PurchaseInvoice.ChallanId)
                            @Html.TextBoxFor(m => m.ChallanNo, new { @class = "modallink_custom input-346 input", valueid = "PurchaseInvoice_ChallanId", displaytext = "ChallanNo", href = "/Entry/GetPurchaseChallanForPickList", valurtype="challan" })
                        </span>
                    </div>
                }
                  @if (purchaseType == 2)
                    {
                      <div class="lag">
                        <label class="label-70">
                            Order No</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.PurchaseOrderId)
                             @Html.TextBoxFor(x => x.OrderNo, new { @class = "modallink_custom input-346 input", displaytext = "OrderNo", href = "/Entry/GetPurchaseOrderForPickList" , valueId = "PurchaseOrderId" ,valuetype="order"})
                          //  <input type="text" class="modallink_custom input-346 input" displaytext="OrderNo"
                                       href="/Entry/GetPurchaseOrderForPickList" picklist_class="Order_name" valueid="PurchaseOrderId" id="Order" valuetype="order"/> //
                        </span>
                    </div>
                    }*@
                <div>
                    <div class="lag">
                        <label class="label-70">
                            Vendor</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.PurchaseInvoice.GlCode)
                            <input type="text" value="@UtilityService.GetLedgerNameById(Model.PurchaseInvoice.GlCode)" class="modallink_custom input-346" href="@Url.Action("GetVendorList", "Entry")" createhref="@Url.Action("OnlineGeneralLedgerAdd", "Master")" valueId="PurchaseInvoice_GlCode" id="vendor" valuetype="ledger"  entermsg = "Press F1 for choosing existing Account list." />
                        </span>
                    </div>
                    <div class="lag">
                        <span class="stack">
                            <label class="label-70">
                                Due Days</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.PurchaseInvoice.DueDay, new { @class = "input-25 DueDay", entermsg = "Enter Voucher Due Day." })
                            </span></span><span class="stack">
                                <label class="label-25">
                                    Date</label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.DueDate, new { @class = "input-80 ", entermsg = "Enter Voucher Date.", readOnly = true })
                                </span></span><span class="stack">
                                    <label class="label-53">
                                        Inv Type</label>
                                    <span class="field">
                                        @Html.DropDownListFor(m => m.PurchaseInvoice.PurchaseInvoiceType, Model.InvoiceTypeList, new { @class = "select-105", entermsg = "Select Invoice Type" })
                                    </span></span>
                    </div>
                    @if (Model.EntryControl != null && Model.EntryControl.Agent)
                    {
                        <div class="lag">
                            <label class="label-70">
                                Agent</label>
                            <span class="field">
                                @Html.HiddenFor(m => m.PurchaseInvoice.AgentCode, new { @class = "input-90", entermsg = "Enter Voucher No." })
                                <input type="text" value="@UtilityService.GetAgentNameById(Model.PurchaseInvoice.AgentCode)" class="modallink input-346" href="@Url.Action("GetAgent", "Master")" valueId="PurchaseInvoice_AgentCode" id="agent" entermsg = "Press F1 for choosing existing cash/bank list."  />
                            </span>
                        </div>
                    }
                    @if (Model.EntryControl != null && Model.EntryControl.SubLedger)
                    {
                        <div class="lag">
                            <label class="label-70">
                                Sub Ledger</label>
                            <span class="field">
                                @Html.HiddenFor(m => m.PurchaseInvoice.SlCode, new { @class = "input-90", entermsg = "Enter Voucher No." })
                                @{
                           var SICode = Convert.ToInt32(Model.PurchaseInvoice.SlCode);
                                }
                                <input type="text" value="@UtilityService.GetSubLedgerNameById(SICode)" class="modallink input-346" href="@Url.Action("GetSubLedger", "Master")" valueId="PurchaseInvoice_SlCode" id="subledger" entermsg = "Press F1 for choosing existing cash/bank list."  />
                            </span>
                        </div>
                    }
                </div>
                <div class="lag">
                    <span class="stack">
                        <label class="label-70">
                            Currency</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.PurchaseInvoice.CurrencyId, new { @class = "input-90 input", entermsg = "Enter Voucher No." })
                            <input type="text" value="@Model.PurchaseInvoice.CurrCode" class = "modallink input-90 input" href="@Url.Action("GetCurrency", "Entry")" valueId="PurchaseInvoice_CurrencyId" 
                             id="CurrencyId" entermsg = "Press F1 for choosing existing cash/bank list." />
                        </span></span><span class="stack">
                            <label class="label-37">
                                Rate</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.PurchaseInvoice.CurrRate, new { @class = "input-45 input CurrRate", entermsg = "Enter Rate." })
                                @Html.ValidationMessageFor(m => m.PurchaseInvoice.CurrRate)
                            </span></span>
                </div>
            </div>
            <div class="right thumbnail" style="width: 300px; float: right">
                @*<fieldset>*@
                <div class="lag">
                    <label class="label-120">
                        Credit Limit</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.CreditLimit, new { @class = "input-120", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Current Balance</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.CurrentBalance, new { @class = "input-120", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Outstanding Challan</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.OutstandingChallan, new { @class = "input-120", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Total Outstanding</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.TotalOutstanding, new { @class = "input-120", disabled = "disabled" })
                    </span>
                </div>
                <div class="clearfix">
                </div>
                @*</fieldset>*@
            </div>
        </fieldset>
        <div id="tabs">
            <ul>
                <li><a href="#tabs-1">Product Details</a></li>
                <li><a href="#tabs-2">Import/Transport Details</a></li>
            </ul>
            <div id="tabs-1">
                <div class="lag detailEntryTable">
                    <table class="table-bordered" style="width: 760px" id="table-detail">
                        <tr class="nodrop nodrag">
                            <th width="20px">
                            </th>
                            <th width="250px">
                                Particular
                            </th>
                            @if (Model.EntryControl != null && Model.EntryControl.SubLedger)
                            {
                                <th>
                                    Godown
                                </th>
                            }
                            <th width="80px">
                                Qty
                            </th>
                            @if (Model.EntryControl != null && Model.EntryControl.Unit)
                            {
                                <th>
                                    Unit
                                </th>
                            }
                            <th width="80px">
                                Atl Qty
                            </th>
                            @if (Model.EntryControl != null && Model.EntryControl.AltUnit)
                            {
                                <th>
                                    Alt Unit
                                </th>
                            }
                            <th width="80px">
                                Rate
                            </th>
                            <th width="80px">
                                Basic Amt
                            </th>
                            <th width="80px" style="@display">
                                Term Amt
                            </th>
                            <th width="80px" style="@display">
                                Net Amt
                            </th>
                        </tr>
                        <tbody id="body-invoice-detail">
                            @foreach (var detail in Model.PurchaseInvoice.PurchaseDetails)
                            {
                                detail.Unitlist = UtilityService.DropdownlistByProductId(detail.PCode, detail.UnitId);
                                detail.DetailGuid = Guid.NewGuid().ToString();
                                detail.EntryControl = Model.EntryControl;
                                @Html.Partial("_PartialPurchaseDetailEdit", detail)
                            }
                            @{
                            var purchaseDetail = new KRBAccounting.Domain.Entities.PurchaseDetail();
                            purchaseDetail.Index = (int)ViewBag.Index;
                            purchaseDetail.Unitlist = Model.UnitList;
                            purchaseDetail.DetailGuid = Guid.NewGuid().ToString();
                            purchaseDetail.EntryControl = Model.EntryControl;
                            }
                            @Html.Partial("_PartialPurchaseDetailEdit", purchaseDetail)
                        </tbody>
                        @*  @{
                        var viewModel = new KRBAccounting.Web.ViewModels.Entry.PurchaseDetailEntryViewModel();
                        viewModel.AllowProductWiseBillTerm = Model.AllowProductWiseBillTerm;
                        viewModel.Index = (int)ViewBag.Index;
                        }
                        @Html.Partial("_PartialPurchaseDetailEntry", viewModel)*@
                    </table>
                </div>
                <div class="lag">
                    <span class="stack">
                        <label class="label-90">
                            Short Name</label>
                        @Html.TextBoxFor(x => x.ShortName, new { @class = "input-100", disabled = "disabled" })
                    </span><span class="stack" style="padding-left: 40px">
                        <label class="label-90">
                            Stock Qty</label>
                        @Html.TextBoxFor(x => x.StockQty, new { @class = "input-100", disabled = "disabled" })
                    </span><span class="stack" style="padding-left: 40px">
                        <label class="label-90">
                            Alt Stock Qty</label>
                        @Html.TextBoxFor(x => x.AltStockQty, new { @class = "input-100", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <span class="stack" style="padding-left: 264px">
                        <label class="label-90">
                            Total Qty</label>
                        @Html.TextBoxFor(x => x.TotalQty, new { @class = "input-100", disabled = "disabled" })
                    </span><span class="stack" style="padding-left: 40px">
                        <label class="label-90">
                            Total Alt Qty</label>
                        @Html.TextBoxFor(x => x.TotalAltQty, new { @class = "input-100", disabled = "disabled" })
                    </span>
                </div>
            </div>
            <div id="tabs-2">
                <div class="left thumbnail" style="float: left; width: 358px">
                    <div class="lag">
                        <label class="label-120">
                            PPD No.</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PurchaseImpTransDoc.PPDNo, new { @class = "input-120" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            PPD Date</label>
                        <span class="field">
                            @Html.EditorFor(m => m.PPDDate, new { @class = "input-90" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Taxable Value</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PurchaseImpTransDoc.TaxableAmt, new { @class = "input-90" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Vat</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PurchaseImpTransDoc.Vat, new { @class = "input-90" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Custom Name</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PurchaseImpTransDoc.CustomName, new { @class = "input-190" })
                        </span>
                    </div>
                </div>
                <div class="right thumbnail" style="margin-left: 20px; float: right; width: 358px">
                    <div class="lag">
                        <label class="label-120">
                            Transport</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PurchaseImpTransDoc.Transport, new { @class = "input-190" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Vehicle No</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PurchaseImpTransDoc.VehicleNo, new { @class = "input-120" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            C/N No</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PurchaseImpTransDoc.CnNo, new { @class = "input-100" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            C/N Date</label>
                        <span class="field">
                            @Html.EditorFor(m => m.CnDate, new { @class = "input-80" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="label-120">
                            Document Bank</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.PurchaseImpTransDoc.DocumentBank, new { @class = "input-190" })
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <fieldset>
            <div class="lag">
                <span class="stack">
                    <label class="label-70">
                        Basic Amt</label>
                    @Html.TextBoxFor(x => x.PurchaseInvoice.BasicAmt, new { @class = "input-80 MasterBasicAmt", @readonly = "readonly" })
                </span><span class="stack" style="padding-left: 15px">
                    <label class="label-60">
                        Term Amt</label>
                    @Html.TextBoxFor(x => x.PurchaseInvoice.TermAmt, new { @class = "input-80 MasterTermAmt", @readonly = "readonly" })
                </span><span class="stack" style="padding-left: 15px">
                    <label class="label-60">
                        Total Amt</label>
                    @Html.TextBoxFor(x => x.PurchaseInvoice.NetAmt, new { @class = "input-80 MasterNetAmt", @readonly = "readonly" })
                </span><span class="stack" style="padding-left: 15px">
                    <label class="label-85">
                        Total Amt in Rs</label>
                    @Html.TextBoxFor(x => x.TotalAmtRs, new { @class = "input-90", disabled = "disabled" })
                </span>
            </div>
        </fieldset>
        <div class="clearfix">
        </div>
        <div class="lag">
            <label class="label-90">
                Remarks</label>
            <span class="field">
                @Html.TextBoxFor(m => m.PurchaseInvoice.Remarks, new { @class = "input-245" })
            </span>
        </div>
    </div>
@* if (Model.SystemControl.UDF == "1")
                        {
                            if (Model.UdfEntries.LongCount() != 0)
                            {
    <a href="javascript:void(0);" class="btn UDFCustomFiled">UDF</a>
    <div class="UDFEntry">
        @Html.Partial("_PartialUdfField", Model.UdfEntries)
    </div>
                            }
                        }*@
}
@if (changeRate)
{
    <script type="text/javascript">
        changeRate = true;
    </script>
}
<script type="text/javascript">
    var value = 0;
    var totalAmt = parseFloat(0);
 var totalQty = parseFloat(0);
    $(document).ready(function () {
        $("#savePurchaseInvoice").removeAttr("disabled");
        var qty = document.querySelectorAll(".qty");
        var altQty = document.querySelectorAll(".altQty");
        var rate = document.querySelectorAll(".rate");
        var basicAmt = document.querySelectorAll(".basicAmt");                                                                                                                                                   
//        $.each(qty, function (i, item) {
//            if (item.value == 0) {
//                $(this).val('');
//            }
//        });
//        $.each(altQty, function (i, item) {
//            if (item.value == 0) {
//                $(this).val('');
//            }
//        });
//        $.each(rate, function (i, item) {
//            if (item.value == 0) {
//                $(this).val('');
//            }
//        });
//        $.each(basicAmt, function (i, item) {
//            if (item.value == 0) {
//                $(this).val('');
//            }
//        });
      var dateType = @Model.SystemControl.DateType.ToString();
      if(dateType=="1") {
            $("#InvoiceDate").mask("99/99/9999");
            $("#InvoiceDate").live("blur", function() {
                var validDate = isDate($(this).val(),"/",1,0,2);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
            }
    else {
            $("#InvoiceDate").mask("9999/99/99");
            $("#InvoiceDate").live("blur", function() {
                var date = $(this).val();
                var validDate=isNepaliDate(date);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
        }
       
     
       if(dateType=="1") {
            $("#DueDate,#PPDDate,#CnDate,#PartyDate").mask("99/99/9999");
            $("#DueDate,#PPDDate,#CnDate,#PartyDate").live("blur", function() {
                if($(this).val()!="__/__/____"&& $(this).val()!=" ") 
                    {
                var validDate = isDate($(this).val(),"/",1,0,2);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
                    }
            });
            }
    else {
            $("#DueDate,#PPDDate,#CnDate,#PartyDate").mask("9999/99/99");
            $("#DueDate,#PPDDate,#CnDate,#PartyDate").live("blur", function() {
                 if($(this).val()!="____/__/__"&& $(this).val()!=" ") {
                     var date = $(this).val();
                     var validDate = isNepaliDate(date);
                     if (!validDate) {
                         $($(this).addClass("error"));
                     } else {
                         $($(this).removeClass("error"));
                     }
                 }
            });
        }
        $("#tabs").tabs();
        var ledgerElement = document.querySelectorAll(".text_product");
        var i = 0;
        $.each(ledgerElement, function (index) {
                         var closestTr = $(this).closest('tr');
            closestTr.attr('id', "tr_" + i);
            var valueid = $(".productId").get(index);

            $(this).attr("id", "product_" + index);
            $(this).attr("valueId", valueid.id);
            i++;
        });
        
         var GodownElement = document.querySelectorAll(".godown");
        $.each(GodownElement, function (index) {

            var valueid = $(".value").get(index);

            $(this).attr("id", "godown_" + index);
            $(this).attr("valueId", valueid.id);
        });
    });


    var glCode = $("#PurchaseInvoice_GlCode").val();
    if (glCode != "") {
        $.getJSON("/Entry/GetVendorDetails?glCode=" + glCode, null, function (data) {
            $("#CreditLimit").val(data.creditLimit);
            $("#CurrentBalance").val(data.balance);
            $("#OutstandingChallan").val(data.outstandingChallan);
            $("#TotalOutstanding").val(data.totalOutstanding);
        });
    }

</script>
