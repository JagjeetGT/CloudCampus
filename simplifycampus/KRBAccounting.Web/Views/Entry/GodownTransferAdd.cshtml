@model KRBAccounting.Web.ViewModels.Entry.GodownTransferAddViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@{
    var date = Model.Date.ToString("MM/dd/yyyy");
       
}
@*@Html.CustomValidationSummary("Login was unsuccessful. Please correct the errors and try again.")*@
@using (Ajax.BeginForm("GodownTransferAdd", "Entry", new { controller = "Master" }, new AjaxOptions { HttpMethod = "Post", OnComplete = "OnComplete" }, new { @class = "form-horizontal form-custom", id = "godowntransfer-add-form" }))
{
    <div id="billing-term-list" style="display: none">
    </div>
    <div style="width: 850px; height: 450px">
        <fieldset>
            <div style="float: left; width: 100%;" class="one-row">
                <div class="lag">
                    <span class="stack">
                        <label class="label-70">
                            Invoice No.</label>
                        <span class="field">
                            @*@Html.HiddenFor(x => x.StockTransfer.DocId)*@
                            @Html.TextBoxFor(m => m.StockTransfer.STNo, new { @class = "input-90 input modaldoclink", entermsg = "Enter Voucher No.", module = "SB", valueId = "SalesInvoice_DocId", id = "st_no" })
                            @Html.ValidationMessageFor(m => m.StockTransfer.STNo)
                        </span></span><span class="stack">
                            <label class="label-37">
                                Date</label>
                            <span class="field">
                                @Html.HiddenFor(m => m.StockTransfer.STMiti)
                                @Html.HiddenFor(m => m.Date, new { displayId = "DisplayDate" })
                                @Html.TextBoxFor(m => m.DisplayDate, new { @class = "input-90 input", entermsg = "Enter Voucher Date.", miti = Model.SystemControl.DateType, dateId = "Date", displayId = "DisplayDate", mitiId = "StockTransfer_STMiti" })
                                @Html.ValidationMessageFor(m => m.Date)
                                <input type="hidden" id="currDate" value="@date"/>
                            </span></span>
                </div>
            </div>
            <div style="float: left; width: 475px" class="left">
                <div>
                    <div class="lag">
                        <label class="label-70">
                            Godown</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.StockTransfer.GodownId)
                            <input type="text" class = "modallink input-346 input" href="@Url.Action("GetGodownList", "Master")" createhref="@Url.Action("OnlineProductAdd", "Master")" valueId="StockTransfer_GodownId" id="customer" entermsg = "Press F1 for choosing existing Account list." />
                            @Html.ValidationMessageFor(m => m.StockTransfer.GodownId)
                        </span>
                    </div>
                </div>
            </div>
        </fieldset>
        <div class="lag detailEntryTable">
            <table class="table-bordered" id="table-detail">
                <tr class="nodrop nodrag">
                    <th width="20px">
                    </th>
                    <th width="250px">
                        Particular
                    </th>
                    <th width="80px">
                        Godown
                    </th>
                    <th width="80px">
                        Alt Qty
                    </th>
                    <th width="80px">
                        Qty
                    </th>
                    <th width="80px">
                        Rate
                    </th>
                    <th width="80px">
                        Total Amount
                    </th>
                </tr>
                @Html.Partial("_PartialGodownTransferDetailEntry", new KRBAccounting.Web.ViewModels.Entry.GodownTransferEntryViewModel())
            </table>
        </div>
        <div class="lag">
            <fieldset>
                <legend>From Godown</legend><span class="stack" style="padding-left: 40px">
                    <label class="label-90">
                        Stock Qty</label>
                    @Html.TextBoxFor(x => x.FromStockQty, new { @class = "input-100 input" })
                </span><span class="stack" style="padding-left: 40px">
                    <label class="label-90">
                        Alt Stock Qty</label>
                    @Html.TextBoxFor(x => x.FromAltStockQty, new { @class = "input-100 input" })
                </span>
            </fieldset>
            <fieldset>
                <legend>To Godown</legend><span class="stack" style="padding-left: 40px">
                    <label class="label-90">
                        Stock Qty</label>
                    @Html.TextBoxFor(x => x.ToStockQty, new { @class = "input-100 input" })
                </span><span class="stack" style="padding-left: 40px">
                    <label class="label-90">
                        Alt Stock Qty</label>
                    @Html.TextBoxFor(x => x.ToAltStockQty, new { @class = "input-100 input" })
                </span>
            </fieldset>
        </div>
        <fieldset>
            <div class="lag">
                <span class="stack">
                    <label class="label-90">
                        Short Name</label>
                    @Html.TextBoxFor(x => x.ShortName, new { @class = "input-100 input" })
                </span><span class="stack" style="padding-left: 264px">
                    <label class="label-90">
                        Total Qty</label>
                    @Html.TextBoxFor(x => x.TotalQty, new { @class = "input-100 input" })
                </span><span class="stack">
                    <label class="label-90">
                        Total Alt Qty</label>
                    @Html.TextBoxFor(x => x.TotalAltQty, new { @class = "input-100 input" })
                </span>
            </div>
        </fieldset>
        <div class="lag">
            <label class="label-90">
                Remarks</label>
            <span class="field">
                @Html.TextBoxFor(m => m.StockTransfer.Remarks, new { @class = "input-245 input" })
            </span>
        </div>
        <div class="lag">
            <label class="label-90">
                Net Amount</label>
            <span class="field">
                @Html.TextBoxFor(m => m.TotalAmt, new { @class = "input-245 input" })
            </span>
        </div>
    </div>
    
}
<script type="text/javascript">
    var recAmt = parseFloat(0);
    var payAmt = parseFloat(0);
    var netAmt = parseFloat(0);


    $(document).ready(function () {
     var dateType = @Model.SystemControl.DateType;
        var date;
        var nepDate;
        if (dateType == 1) {
            date = $("#currDate").val();
            nepDate = convertToNepali(date);
        } else {
            date = $("#currDate").val();
            date = convertToNepali(date);
            nepDate = date;
        }
        $("#StockTransfer_STMiti").val(nepDate);
        $("#DisplayDate").val(date);
        $("#Date").nepDateTimePicker();

        $(".text_product").attr("id", "detail_0");
        $(".text_product").attr("valueId", $(".hdn_product_Id").attr("id"));
        $(".text_product").closest("tr").attr("id", "tr_0");

        $(".text_godown").attr("id", "godown_0");
        $(".text_godown").attr("valueId", $(".hdn_godown_Id").attr("id"));

        
    });
</script>
