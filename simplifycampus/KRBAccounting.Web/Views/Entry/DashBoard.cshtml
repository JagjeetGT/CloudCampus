@model KRBAccounting.Web.ViewModels.Home.HomeViewModel
@using System.Web.Script.Serialization
@{
    var serializer = new JavaScriptSerializer();
    ViewBag.Title = "Dashboard | ";
}
<script src="@Url.Content("~/Content/highchartjs/highcharts.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/highchartjs/modules/exporting.js")" type="text/javascript"></script>
@*@Html.Partial("_PartialDashboardBreadCrumb")*@
<style>
    .highcharts-container {
        overflow: visible !important;
    }

    .highcharts-tooltip span {
        width: 160px;
        overflow: visible !important;
        overflow: auto;
        white-space: normal !important;
    }

    .dashboard-head {
        color: #335A85;
        display: block;
        float: left;
        font-size: 12px;
        font-weight: bold;
        line-height: 22px;
        margin: 0 0 0 10px;
    }

    .table tr th {
        font-size: 10px !important;
    }

    .table-sorting {
        font-size: 10px !important;
    }

    .block-fluid {
        border-width: 0 !important;
    }

    .table th, .table td {
        line-height: 0px !important;
    }
</style>
<div class="workplace">
    <!--[if !IE]> START STATICS <![endif]-->
    <div class="row-fluid">
        <div class="span12">
            @*<div style="width: 100%;height:275px">*@
            @*<div style="width: 49%;float: left">*@
            <div style="display: block; float: left; width: 49%; min-width: 280px !important;margin-right:5px; ">
                <table cellpadding="0" cellspacing="0" width="100%" id="Cash-BankChart">
                    <tr>
                        <td style="width: 100%;">
                            <div id="cash-bank-Analysis">
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div style="display: block; float: left; width: 49%;min-width:280px !important">
                <table cellpadding="0" cellspacing="0" width="100%" id="YearlyStatistics">
                    <tr>
                        <td style="width: 100%;">
                            <div id="yearly-statistics">
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            @*</div>*@
            <div class="clearfix"></div>
            <div class="dashboard_tables" style="width: 330px; float: left; display: block; margin-right: 3px; ">
                <div style="border-style: solid; border-color: rgb(69, 114, 167); border-width: 2px; border-radius: 5px 5px 5px 5px;">
                    <div>
                        <span class="dashboard-head">
                            Profit and Loss Total
                        </span>
                        <div class="clear">
                        </div>
                    </div>
                    <div class="block-fluid table-sorting">
                        <table cellpadding="0" cellspacing="0" width="95%" class="table tbl-list">
                            <thead>
                                <tr>
                                    <th>
                                        Header
                                    </th>
                                    <th>
                                        This Week
                                    </th>
                                    <th>
                                        This Month
                                    </th>
                                    <th>
                                        This Year
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.PLTotalList)
                                {
                                    <tr>
                                        <td>
                                            @item.Header
                                        </td>
                                        <td>
                                            @item.ThisWeekTotal
                                        </td>
                                        <td>
                                            @item.ThisMonthTotal
                                        </td>
                                        <td>
                                            @item.ThisYearTotal
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div style="border-style: solid; border-color: rgb(69, 114, 167); border-width: 2px; border-radius: 5px 5px 5px 5px; margin-top: 5px;">
                    <div>
                        <span class="dashboard-head">
                            Account Watch List
                        </span>
                        <div class="clear">
                        </div>
                    </div>
                    <div class="block-fluid table-sorting">
                        @if (Model.AccountWatchLists.Count == 0)
                        {
                            <text>You haven't added any account watch list yet.</text>
                        }
                        else
                        {
                            <table cellpadding="0" cellspacing="0" width="95%" class="table tbl-list">
                                <thead>
                                    <tr>
                                        <th>
                                            Account
                                        </th>
                                        <th>
                                            Balance
                                        </th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.AccountWatchLists)
                                    {
                                        <tr>
                                            <td>
                                                @item.AccountName
                                            </td>
                                            <td>
                                                @Math.Abs(item.Total) @if (item.Total > 0)
                                                {
                                                    <text> Dr </text>
                                                }
                                                else
                                                {
                                                    <text> Cr </text>
                                                }
                                            </td>

                                        </tr>
                                    }


                                </tbody>
                            </table>
                        }
                    </div>
                </div>

            </div>
            @*<div class="dashbaord_charts" style="float: right; margin-left: 5px; width: 747px;">*@
            <div style=" min-width: 350px !important; width: 34%; float: left; display: block;margin-right:3px">
                <table cellpadding="0" cellspacing="0" width="100%" id="TopCustomers">
                    <tr>
                        <td style="width: 100%;">
                            @* <div id="top-item" style="min-width: 310px; height: 400px; margin: 0 auto"></div>*@
                            <div id="top-customers">
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div style="min-width: 350px !important; width: 34%; float: left; display: block ">
                <table cellpadding="0" cellspacing="0" width="100%" id="TopItem">
                    <tr>
                        <td style="width: 100%;">
                            @* <div id="top-item" style="min-width: 310px; height: 400px; margin: 0 auto"></div>*@
                            <div id="top-item">
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            @*</div>*@
        </div>
    </div>
</div>
<div id="modelGetDetail" class="dialog" style="display: none">
    <div class="block" style="padding: 0;">
    </div>
</div>
<script type="text/javascript">


    //$(".scrollBox").mCustomScrollbar();
    function CashFlowBegin() {
        $('div#cashflow-statistics').block({
            message: false
        });
    };
    function MonthlyAnalysisBegin() {
        $('div#monthly-statistics').block({
            message: false
        });
    };
    function YearlyAnalysisBegin() {
        $('div#yearly-statistics').block({
            message: false
        });
    };
    function OnBegin(data) {
        $('div#' + data).block({
            message: false
        });
    };

    $(document).ready(function () {
        //var categories = @Html.Raw(serializer.Serialize(Model.CashFlowInChart.Categories));
        var cashbankcategories = @Html.Raw(serializer.Serialize(Model.CashAnalysisChart.CashInHand.Categories));
        //        var Ins =@Html.Raw(serializer.Serialize(Model.CashFlowInChart.Total));
        //        var Outs =@Html.Raw(serializer.Serialize(Model.CashFlowOutChart.Total));
        //        var totalIns = new Highcharts.Chart({
        //            chart: { renderTo: 'cashflow-statistics', defaultSeriesType: 'line' },
        //            title: { text: '@Model.CurrentDate.ToString("MMMM") @Model.CurrentDate.Year',
        //                x: -20 /*center*/,
        //                style: {
        //                fontWeight: 'bold',
        //                fontSize:'12px'
        //                }
        //            },
        //            subtitle: { text: ''
        //            },
        //            xAxis: {
        //                title: { text: 'Day',
        //                    style: {
        //                        fontSize: '12px'
        //                    }
        //                },
        //                categories: categories,
        //                labels: {
        //                    style: {
        //                        color: '#525151',
        //                        fontSize: '8px'
        //                    }
        //                }
        //            },
        //            yAxis: {
        //                labels: { formatter: function () { return this.value; }, style: { color: '#89A54E',fontSize:'8px'} },
        //                title: { text: 'Total Amount in Rs',
        //                style: {
        //                        fontSize: '12px'
        //                    }
        //                },
        //                lineWidth: 2,
        //                plotLines: [{
        //                    value: 0,
        //                    width: 1,
        //                    color: '#808080'
        //                }],
        //                allowDecimals: false,
        //                min: 0
        //            },
        //            tooltip: {
        //                formatter: function () {
        //                    return '<b>' + this.series.name + '</b><br/>' + this.x + ': ' + this.y;
        //                }
        //            },
        //            plotOptions: {
        //                pie: {
        //                    allowPointSelect: true,
        //                    cursor: 'pointer',
        //                    dataLabels: {
        //                        enabled: false
        //                    },
        //                    showInLegend: true
        //                }
        //            },
        //            credits: { enabled: false },
        //            legend: {
        //                layout: 'horizontal',
        //                align: 'bottom',
        //                verticalAlign: 'bottom',
        //                borderWidth: 0,
        //                itemStyle: {
        //                    fontSize:'8px'
        //                }
        //            },
        //            series: [{
        //                name: 'Total Ins',
        //                data: Ins
        //            },
        //                {
        //                    name: 'Total Out',
        //                    data: Outs
        //                }]
        //        });
        //
        //Yearly
        var yearlyCategories = @Html.Raw(serializer.Serialize(Model.YearlyAnalysisChart.PurchaseChart.Categories));
        var yearlyPurchase =@Html.Raw(serializer.Serialize(Model.YearlyAnalysisChart.PurchaseChart.Total));
        var yearlyPurchaseReturn =@Html.Raw(serializer.Serialize(Model.YearlyAnalysisChart.PurchaseReturnChart.Total));
        var yearlySales =@Html.Raw(serializer.Serialize(Model.YearlyAnalysisChart.SalesChart.Total));
        var yearlySalesReturn =@Html.Raw(serializer.Serialize(Model.YearlyAnalysisChart.SalesReturnChart.Total));
        var yearlyAnalysis = new Highcharts.Chart({
            chart: {
                backgroundColor: {
                    linearGradient: {
                        x1: 0,
                        y1: 0,
                        x2: 1,
                        y2: 1
                    },
                    stops: [
                        [0, 'rgb(255, 255, 255)'],
                        [1, 'rgb(240, 240, 255)']
                    ]
                },
                borderWidth: 2,
                plotBackgroundColor: 'rgba(255, 255, 255, .9)',
                plotShadow: true,
                plotBorderWidth: 1,
                type: 'column',
                renderTo: 'yearly-statistics',
                defaultSeriesType: 'line',
                height:270 },
            title: { text: 'Yearly Analysis for the year @Model.CurrentDate.Year', x: -20 /*center*/,
                style: {
                    //fontWeight: 'bold',
                    fontSize:'12px'
                } },
            subtitle: { text: '' },
            xAxis: {
                title: { text: 'Month',
                    style: {
                        fontSize: '10px',
                        fontWeight: 'Normal'
                    }},
                categories: yearlyCategories,
                labels: {
                    style: {
                        color: '#525151',
                        font: '9px Helvetica'
                    }
                }
            },
            yAxis: {
                minorTickInterval: 'auto',
                labels: { formatter: function () { return this.value; }, style: { color: '#89A54E',font:'9px Helvetica'} },
                title: { text: 'Amount in Thousands(Rs)', style: {
                    fontSize:'10px',
                    fontWeight:'Normal'
                }
                },
                lineWidth: 2,
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }],
                allowDecimals: false,
                min: 0
            },
            tooltip: {
                formatter: function () {
                    return '<b>' + this.series.name + '</b><br/>' + this.x + ': ' + this.y;
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: false
                    },
                    showInLegend: true
                }
            },
            credits: { enabled: false },
            legend: {
                layout: 'horizontal',
                align: 'bottom',
                verticalAlign: 'bottom',
                itemStyle: {
                    fontSize:'9px',
                    fontWeight: 'normal'
                }
            },
            series: [{
                name: 'Purchase',
                data: yearlyPurchase
            },
                {
                    name: 'PurchaseReturn',
                    data: yearlyPurchaseReturn
                },{
                    name: 'Sales',
                    data: yearlySales
                },
                {
                    name: 'SalesReturn',
                    data: yearlySalesReturn
                }]
        });

        // Cash/Bank in Hand
        var data = @Html.Raw(serializer.Serialize(Model.CashAnalysisChart.CashInHand.Total));
        var bankData= @Html.Raw(serializer.Serialize(Model.CashAnalysisChart.CashInBank.Total));
        $('#cash-bank-Analysis').highcharts({
            chart: {
                backgroundColor: {
                    linearGradient: {
                        x1: 0,
                        y1: 0,
                        x2: 1,
                        y2: 1
                    },
                    stops: [
                        [0, 'rgb(255, 255, 255)'],
                        [1, 'rgb(240, 240, 255)']
                    ]
                },
                borderWidth: 2,
                plotBackgroundColor: 'rgba(255, 255, 255, .9)',
                plotShadow: true,
                plotBorderWidth: 1,
                type: 'column',
                height: 270
            },
            title: {
                text: 'Yearly Cash/Bank Analysis',
                style: {
                    //fontWeight: 'bold',
                    fontSize: '12px'
                }
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                title: { text: 'Month',
                    style: {
                        fontSize: '10px',
                        fontWeight: 'Normal'
                    }},
                categories: cashbankcategories,
                labels: {
                    style: {
                        color: '#525151',
                        font: '9px Helvetica'
                    }
                }
            },
            yAxis: {
                minorTickInterval: 'auto',
                labels: { formatter: function () { return this.value; }, style: { color: '#89A54E',font:'9px Helvetica'} },
                title: { text: 'Amount in Thousands(Rs)', style: {
                    fontSize:'10px',
                    fontWeight:'Normal'
                }
                },
                lineWidth: 2,
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }],
                allowDecimals: false,
                min: 0
            },
            tooltip: {
                formatter: function () {
                    return '<b>' + this.x + '</b><br/>' + this.x + ':' + Highcharts.numberFormat(this.y, 1) + ' Rs';
                }
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            legend: {
                layout: 'horizontal',
                align: 'bottom',
                verticalAlign: 'bottom',
                itemStyle: {
                    fontSize: '9px',
                    fontWeight: 'normal'
                }
            },
            series: [{
                name: 'Cash In Hand',
                data: data,
                pointWidth: 10,
                color: '#008c31',
                dataLabels: {
                    enabled: false,
                    rotation: -90,
                    color: '#FFFFFF',
                    align: 'right',
                    x: 1,
                    y: 4,
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }

            }, {
                name: 'Cash at Bank',
                data: bankData,
                pointWidth: 10,
                dataLabels: {
                    enabled: false,
                    rotation: -90,
                    color: '#FFFFFF',
                    align: 'right',
                    x: 1,
                    y: 4,
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            }]
        });

        //Top 5 Items

        var topItemdata = @Html.Raw(serializer.Serialize(Model.TopItem));
        var topItemnewData = [];
        for (var i = 0, len = topItemdata.length; i < len; i++) {
            topItemnewData.push([topItemdata[i].Text, topItemdata[i].Value]);
        }
        $('#top-item').highcharts({
            chart: {
                backgroundColor: {
                    linearGradient: {
                        x1: 0,
                        y1: 0,
                        x2: 1,
                        y2: 1
                    },
                    stops: [
                        [0, 'rgb(255, 255, 255)'],
                        [1, 'rgb(240, 240, 255)']
                    ]
                },
                borderWidth: 2,
                type: 'column',
                plotBorderWidth: null,
                plotShadow: false,
                marginBottom: 10,
                marginTop: 20,
                height: 200
                //,
                //width: 300
            },
            title: {
                text: 'Top 5 Items',
                style: {
                    //fontWeight: 'bold',
                    fontSize: '11px'
                }
            },
            tooltip: {
                useHTML: true,
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },

            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                height: 50,
                width: 130,
                y: 50,
                x: -10,
                itemStyle: {
                    fontSize: '9px',
                    fontWeight: 'normal'
                },
                labelFormatter: function () {
                    return TrimText(this.name);
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: false,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: false,
                        color: '#000000',
                        connectorColor: '#000000',
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                    },
                    //center: [150, 90],
                    size: 150,
                    showInLegend: true
                }
            },
            series: [{
                type: 'pie',
                name: 'Item share',
                data: topItemnewData
            }]
        });

        // Top 5 Customers
        var topCustomerdata = @Html.Raw(serializer.Serialize(Model.TopCustomer));
        var topCustomernewData = [];
        for (var i = 0, len = topCustomerdata.length; i < len; i++) {
            topCustomernewData.push([topCustomerdata[i].Text, topCustomerdata[i].Value]);
        }
        $('#top-customers').highcharts({
            chart: {
                backgroundColor: {
                    linearGradient: {
                        x1: 0,
                        y1: 0,
                        x2: 1,
                        y2: 1
                    },
                    stops: [
                        [0, 'rgb(255, 255, 255)'],
                        [1, 'rgb(240, 240, 255)']
                    ]
                },
                borderWidth: 2,
                type: 'column',
                plotBorderWidth: null,
                plotShadow: false,
                marginBottom: 10,
                marginTop: 10,
                height: 190
                //,
                //width: 300
            },
            title: {
                text: 'Top 5 Customers',
                style: {
                    //fontWeight: 'bold',
                    fontSize: '11px'
                },
                align:'right',
                x:-35
            },
            tooltip: {
                useHTML: true,
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                height: 50,
                width: 130,
                y: 50,
                x: -10,
                itemStyle: {
                    fontSize: '9px',
                    fontWeight: 'normal'
                },
                labelFormatter: function () {
                    return TrimText(this.name);
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: false,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: false,
                        color: '#000000',
                        connectorColor: '#000000',
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                    },
                    //center: [150, 90],
                    size: 150,
                    showInLegend: true
                }
            },
            series: [{
                type: 'pie',
                name: 'Total Sale',
                data: topCustomernewData
            }]
        });
    });

    function TrimText(strVal) {
        var string = strVal.slice(0, 18);
        if (strVal.length > 20) {
            string += '..';
        }
        return string;
    }

</script>
