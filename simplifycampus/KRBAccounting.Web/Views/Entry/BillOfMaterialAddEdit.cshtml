@model KRBAccounting.Web.ViewModels.Entry.BillOfMaterialAddViewModel
@using (Ajax.BeginForm("BillOfMaterialAdd", "Entry", new { controller = "Master" }, new AjaxOptions { HttpMethod = "Post", OnComplete = "OnComplete" }, new { @class = "form-horizontal form-custom", id = "bom-form" }))
{
    @Html.HiddenFor(x => x.Id)
    <div id="MsgError">
    </div>
    <div style="min-width: 740px; max-width: 785px; height: 240px">
        <fieldset>
            <div class="lag">
                <span class="stack">
                    <label class="label-60">
                        Memo No.</label>
                    <span class="field">
                        @Html.TextBoxFor(x => x.Code, new { @class = "input-90  input" })
                        @Html.ValidationMessageFor(m => m.Code)
                    </span></span><span class="stack">
                        <label class="label-110">
                            Memo Description</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.Description, new { @class = " input-235 input", entermsg = "Enter Voucher Date." })
                        </span></span><span class="stack">
                            <label class="label-70">
                                Cost Center</label>
                            <span class="field">
                                @Html.HiddenFor(x => x.CostCenterId)
                                @Html.TextBoxFor(x => x.CostCenter, new { @class = "input-100 modallink_custom input", displaytext = "Description", href = "/Master/GetCostCenterList", title = "Cost Center", valueid = "CostCenterId", valuetype = "finished_good" })
                            </span></span>
            </div>
            <div class="lag">
                <span class="stack">
                    <label class="label-60">
                        Product</label>
                    <span class="field">
                        @Html.HiddenFor(x => x.FinishedGoodId)
                        @Html.TextBoxFor(x => x.FinishedGood, new { @class = "input-100 modallink_custom input first-col", displaytext = "Description", href = "/Entry/GetProductList", title = "Pruducts", valueid = "FinishedGoodId" })
                    </span></span><span class="stack">
                        <label class="label-70">
                            Conv. Factor</label>
                        <span class="field">
                            @Html.TextBoxFor(x => x.ConversionFactor, new { @class = "input-64 input" })
                        </span></span><span class="stack">
                            <label class="label-53">
                                Quantity</label>
                            <span class="field">
                                @Html.TextBoxFor(x => x.Qty, new { @class = "input-64 input" })
                            </span></span><span class="stack">
                                <label class="label-53">
                                    Unit</label>
                                <span class="field">
                                    @Html.HiddenFor(x => x.UnitId)
                                    @Html.TextBoxFor(x => x.Unit, new { @class = "input-64 modallink input", href = "/Master/GetUnitList", title = "Units", valueid = "UnitId" })
                                </span></span>
            </div>
           @* <div class="lag">
                <span class="stack">
                    <label class="label-53">
                        Currency</label>
                    <span class="field">
                        @Html.HiddenFor(m => m.BillOfMaterial.CurrencyId, new { @class = "input-90 input", entermsg = "Enter Voucher No." })
                        <input type="text" class = "modallink input-90 input" href="@Url.Action("GetCurrency", "Entry")" valueId="DebitNoteMaster_CurrencyId" 
                             id="CurrencyId" entermsg = "Press F1 for choosing existing cash/bank list." />
                    </span></span><span class="stack">
                        <label class="label-53">
                            Rate</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.BillOfMaterial.CurrRate, new { @class = "input-45 input", entermsg = "Enter Rate." })
                            @Html.ValidationMessageFor(m => m.BillOfMaterial.CurrRate)
                        </span></span>
            </div>*@
        </fieldset>
        <div class="lag detailEntryTable">
            <table class="table-bordered" id="table-bill-of-material-detail">
                <tr class="nodrop nodrag">
                    <th width="20px">
                    </th>
                    <th width="260px">
                        Raw Material
                    </th>
                    <th width="50px">
                        Cost Center
                    </th>
                    @if (Model.EntryControl != null && Model.EntryControl.Godown)
                    {
                        <th width="50px">
                            Godown
                        </th>
                    }
                    <th width="50px">
                        Unit
                    </th>
                    <th width="50px">
                        Qty
                    </th>
                </tr>
                @if (Model.BillOfMaterialDetailAddViewModels != null)
                {
                    foreach (var item in Model.BillOfMaterialDetailAddViewModels)
                    {
                        item.EntryControl = Model.EntryControl;
                    @Html.Partial("_PartialBillOfMaterialDetailEdit", item)
                    }
                }
                @{
                var model = new KRBAccounting.Web.ViewModels.Entry.BillOfMaterialDetailAddViewModel();
                model.UnitList = Model.UnitList;
                model.EntryControl = Model.EntryControl;
                    @Html.Partial("_PartialBillOfMaterialDetailEntry", model)
                }
            </table>
        </div>
        <span class="clearfix"></span>
        <fieldset>
            <div class="lag">
                <span class="stack">
                    <label class="label-40">
                        Short Name</label>
                    @Html.TextBoxFor(x => x.ShortName, new { @class = "input-160 input", disabled = "disabled" })
                </span><span class="stack">
                    <label class="label-40">
                        Stock Qty</label>
                    @Html.TextBoxFor(x => x.StockQty, new { @class = "input-160 input", disabled = "disabled" })
                </span><span class="stack">
                    <label class="label-40">
                        Total Qty</label>
                    @Html.TextBoxFor(x => x.TotalQty, new { @class = "input-160 input", disabled = "disabled" })
                </span>
            </div>
        </fieldset>
        @if (Model.EntryControl != null && Model.EntryControl.Remarks)
        {
            <div class="lag">
                <label class="label-90">
                    Remarks</label>
                <span class="field">
                    @Html.TextBoxFor(x => x.Remarks, new { @class = "input-370 input" })
                </span>
            </div>
        }
    </div>
}