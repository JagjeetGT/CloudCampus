@using KRBAccounting.Domain.Entities
@using KRBAccounting.Service
@model KRBAccounting.Domain.Entities.PurchaseOrderDetail
@{
    var trId = "tr_" + 1;
}
<tr id="@trId" class="cashbank-detail-entry detail-entry editSalesPurchase">
    @using (Html.BeginCollectionItem("purchaseDetailEntry"))
    {
        string display = "display:none;";
        string billTermClass = "";
        if (ViewBag.AllowProductWiseBillTerm == 1)
        {
            display = "";
            billTermClass = "rate-bill-term";
        }
        if(Model.OrderId!=0)
        {
            @Html.HiddenFor(x => x.OrderId)
        }

        if (Model.Id != 0)
        {
             @Html.HiddenFor(x => x.Id)
        }
       
        @*@Html.HiddenFor(x => x.Index, new { @class = "indexId" })*@
        <td class="dragHandle">
            &nbsp;&nbsp;&nbsp;
        </td>
        <td>
            @Html.HiddenFor(x => x.ProductCode, new { @class = "productId value" })
            <input type="text" class = "modallink text_product input-245 input" href="@Url.Action("GetProductList", "Entry")" value="@UtilityService.GetProductNameById(Model.ProductCode)" entermsg = "Press F1 for existing Account list." />
        </td>
        <td>
            @Html.TextBoxFor(x => x.Qty, new { @class = "Qty input-100 qty input numberonly", entermsg = "Enter Quantity." })
            @*<input type="text" value="@Model.Qty" entermsg="Enter Quantity." class="input-80 qty input" />*@
        </td>
        if (Model.EntryControl != null && Model.EntryControl.Unit)
        {
            <td>
                @Html.DropDownListFor(x => x.UnitId, Model.Unitlist, new {@class = "input-80 unit input", entermsg = "Enter Unit."})
            </td>
        }
        <td>
            @Html.TextBoxFor(x => x.AltQty, new { @class = "AltQty input-100 altQty input numberonly", entermsg = "Enter Altrnative Quantity." ,@readOnly = true})
            @*<input type="text" value="@Model.AltQty" entermsg="Enter Altrnative Quantity." class="input-80 altQty input" />*@
        </td>
        if (Model.EntryControl != null && Model.EntryControl.AltUnit)
        {
            <td>
                @Html.TextBoxFor(x => x.AltUnit, new { @class = "input-100 altunit input", entermsg = "Enter Altrnative Unit.", @readonly = true })
            </td>
        }
        <td>
            @Html.TextBoxFor(x => x.Rate, new { @class = "Rate input-100 rate input  numberonly " + billTermClass, entermsg = "Enter Rate.", href = "/Entry/GetPurchaseOrderDetailEdit" })
            @*<input type="text" value="@Model.Rate" entermsg="Enter Rate." class="input-80 rate @billTermClass input "  href="/Entry/GetPurchaseDetailEdit"/>*@
            <span class="product_wise_billterms">
                @{
                    var billingTerms = ((List<BillingTermDetail>)ViewBag.BillingTermList).Where(x => x.DetailId == Model.Id);
        
                }
                @foreach (var term in billingTerms.OrderBy(x => x.BillingTermId))
                {
                    @Html.Action("InsertBillTermEdit", term)
                }
            </span>
        </td>
        if (Model.EntryControl != null && Model.EntryControl.BasicAmount)
        {
             @Html.TextBoxFor(x => x.BasicAmt, new { @class = "input-100 basicAmt", entermsg = "Enter Basic Amount." })
        }
        else
        {
            <td>
                @Html.TextBoxFor(x => x.BasicAmt, new { @class = "input-100 basicAmt input", entermsg = "Enter Basic Amount.", @readonly = "readonly" })
            </td>
        }
        <td style="@display">
            @Html.TextBoxFor(x => x.TermAmt, new { @class = "input-100 termAmt input", @readonly = "readonly" })
        </td>

        <td style="@display">
            @Html.TextBoxFor(x => x.NetAmt, new { @class = "input-100 netAmt input", @readonly = "readonly" })
        </td>
        <td>
        <img src="../../Content/img/delete.png" width="15px" class="del-row">
    </td>
    }
    
</tr>
<script type="text/javascript">


    $(document).ready(function () {
        $('#table-cash-bank-detail').tableDnD({
            onDrop: function (table, row) {
            },
            dragHandle: ".dragHandle"
        });

        $("#table-cash-bank-detail tr").hover(function () {
            $(this.cells[0]).addClass('showDragHandle');
        }, function () {
            $(this.cells[0]).removeClass('showDragHandle');
        });
    });

</script>
