@model KRBAccounting.Service.Models.Sales.SalesInvoiceAddViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@{
    string display = "display:none;";
    string billTermClass = "";
    if (Model.AllowProductWiseBillTerm)
    {
        display = "";
        billTermClass = "rate-bill-term";
    }
    var SalesType = @Model.SystemControl.SalesDeriveFrom;
    var width = 517;

    string widthval = width.ToString() + "px";
    var changeRate = Model.EntryControl != null && Model.EntryControl.ChangeRate;
    //1317
}
@*@Html.CustomValidationSummary("Login was unsuccessful. Please correct the errors and try again.")*@
@using (Ajax.BeginForm("SalesInvoiceAdd", "Entry", new { controller = "Master" }, new AjaxOptions { HttpMethod = "Post", OnComplete = "OnComplete" }, new { @class = "form-horizontal form-custom", id = "sales-invoice-form" }))
{
    @Html.HiddenFor(x => x.SalesInvoice.Id)
    <div id="billing-term-list" style="display: none">
    </div>
    <div style="width: 1317px; height: 517px">
        <fieldset>
            <div style="float: left; width: 100%;" class="one-row">
                <div class="lag">
                    <span class="stack">
                        <label class="label-70">
                            Invoice No.</label>
                        <span class="field">
                            @Html.HiddenFor(x => x.SalesInvoice.DocId)
                            @Html.TextBoxFor(m => m.SalesInvoice.InvoiceNo, new { @class = "input-90 input modaldoclink", entermsg = "Enter Voucher No.", module = "SB", valueId = "SalesInvoice_DocId", id = "sales_invoice_no" })
                            @Html.ValidationMessageFor(m => m.SalesInvoice.InvoiceNo)<span class="loading SalesInvoice_InvoiceNo">
                                <img title="w_loader_gr.gif" src="/Content/themes/img/loaders/w_loader_gr.gif" /></span>
                        </span></span><span class="stack">
                            <label class="label-37">
                                Date</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.InvoiceDate, new { @class = "InvoiceDate" })
                                @Html.ValidationMessageFor(m => m.InvoiceDate)
                            </span></span>
                </div>
            </div>
            <div style="float: left; width: 475px" class="left">
                <div>
                    @*  @if (SalesType == 1)
                    {
                        <div class="lag">
                            <label class="label-70">
                                Challan No</label>
                            <span class="field">
                                @Html.HiddenFor(m => m.SalesInvoice.ChallanId)
                                <input type="text" class="modallink_custom input-346 input" displaytext="ChallanNo"
                                       href="/Entry/GetSalesChallanForPickList" valueid="SalesInvoice_ChallanId" id="ChallanName"  valuetype="challan"/>
                            </span>
                        </div>
                    }
                     @if (SalesType == 2)
                     {
                         <div class="lag">
                            <label class="label-70">
                                Order No</label>
                            <span class="field">
                                @Html.HiddenFor(m => m.SalesOrderId)
                                <input type="text" class="modallink_custom input-346 input" displaytext="OrderNo"
                                       href="/Entry/GetSalesOrderForPickList" valueid="SalesInvoice_OrderId" id="OrderName"  valuetype="order"/>
                            </span>
                        </div>
                     }*@
                    <div class="lag">
                        <label class="label-70">
                            Customer</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.SalesInvoice.GlCode)
                            <input type="text" class = "modallink_custom input-346 input" href="@Url.Action("GetCustomerList", "Entry")" valueId="SalesInvoice_GlCode" id="customer" valuetype="ledger"entermsg = "Press F1 for choosing existing Account list." />
                            @Html.ValidationMessageFor(m => m.SalesInvoice.GlCode)
                        </span>
                    </div>
                    <div class="lag">
                        <span class="stack">
                            <label class="label-70">
                                Due Days</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoice.DueDay, new { @class = "input-25 input DueDay", entermsg = "Enter Voucher Date." })
                            </span></span><span class="stack">
                                <label class="label-25">
                                    Date</label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.DueDate, new { @class = "input-80 input" })
                                </span></span>
                    </div>
                    @if (Model.EntryControl != null && Model.EntryControl.Agent)
                    {
                        <div class="lag">
                            <label class="label-70">
                                Agent</label>
                            <span class="field">
                                @Html.HiddenFor(m => m.SalesInvoice.AgentCode, new { @class = "input-90 input", entermsg = "Enter Voucher No." })
                                <input type="text" class = "modallink input-346 input" href="@Url.Action("GetAgent", "Master")" valueId="SalesInvoice_AgentCode" id="agent" entermsg = "Press F1 for choosing existing cash/bank list." />
                            </span>
                        </div>
                    }
                    @if (Model.EntryControl != null && Model.EntryControl.SubLedger)
                    {
                        <div class="lag">
                            <label class="label-70">
                                Sub Ledger</label>
                            <span class="field">
                                @Html.HiddenFor(m => m.SalesInvoice.SlCode, new { @class = "input-90 input", entermsg = "Enter Voucher No." })
                                <input type="text" class = "modallink input-346 input" href="@Url.Action("GetSubLedger", "Master")" valueId="SalesInvoice_SlCode" id="subledger" entermsg = "Press F1 for choosing existing cash/bank list." />
                            </span>
                        </div>
                    }
                </div>
                <div class="lag">
                    <span class="stack">
                        <label class="label-70">
                            Currency</label>
                        <span class="field">
                            @Html.HiddenFor(m => m.SalesInvoice.CurrencyId, new { @class = "input-90 input", entermsg = "Enter Voucher No." })
                            <input type="text" class = "modallink input-90 input" href="@Url.Action("GetCurrency", "Entry")" valueId="SalesInvoice_CurrencyId" 
                             id="CurrencyId" entermsg = "Press F1 for choosing existing cash/bank list." />
                        </span></span><span class="stack">
                            <label class="label-37">
                                Rate</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoice.CurrRate, new { @class = "input-45 input CurrRate", entermsg = "Enter Rate." })
                                @Html.ValidationMessageFor(m => m.SalesInvoice.CurrRate)
                            </span></span>
                </div>
            </div>
            <div class="right thumbnail" style="width: 300px; float: right">
                @*<fieldset>*@
                <div class="lag">
                    <label class="label-120">
                        Credit Limit</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.CreditLimit, new { @class = "input-120", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Current Balance</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.CurrentBalance, new { @class = "input-120", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Outstanding Challan</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.OutstandingChallan, new { @class = "input-120", disabled = "disabled" })
                    </span>
                </div>
                <div class="lag">
                    <label class="label-120">
                        Total Outstanding</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.TotalOutstanding, new { @class = "input-120", disabled = "disabled" })
                    </span>
                </div>
                <div class="clearfix">
                </div>
                @*</fieldset>*@
            </div>
        </fieldset>
        <div id="tabs">
            <ul>
                <li><a href="#tabs-1">Product Details</a></li>
                <li><a href="#tabs-2">Import/Transport Details</a></li>
            </ul>
            <div id="tabs-1">
                <div class="lag detailEntryTable">
                    <table class="table-bordered" id="table-detail">
                        <tr class="nodrop nodrag">
                            <th width="20px">
                            </th>
                            <th width="250px">
                                Particular
                            </th>
                            @if (Model.EntryControl != null && Model.EntryControl.Godown)
                            {
                                <th>
                                    Godown
                                </th>
                            }
                            <th width="80px">
                                Qty
                            </th>
                           @* @if (Model.EntryControl != null && Model.EntryControl.Unit)
                            {*@
                                <th>
                                    Unit
                                </th>
                            @*}*@
                            <th width="80px">
                                Atl Qty
                            </th>
                           @* @if (Model.EntryControl != null && Model.EntryControl.AltUnit)
                            {*@
                                <th>
                                    Alt Unit
                                </th>
                            @*}*@
                            <th width="80px">
                                Rate
                            </th>
                            @*  @if (Model.EntryControl != null && Model.EntryControl.BasicAmount)
                            {*@
                            <th width="80px">
                                Basic Amt
                            </th>
                            @*}*@
                            <th width="80px" style="@display">
                                Term Amt
                            </th>
                            <th width="80px" style="@display">
                                Net Amt
                            </th>
                        </tr>
                        <tbody id="body-invoice-detail">
                            @{
                                var viewModel = new KRBAccounting.Service.Models.Sales.SalesDetailEntryViewModel();
                                viewModel.AllowProductWiseBillTerm = Model.AllowProductWiseBillTerm;
                                viewModel.UnitList = Model.Unitlist;
                                viewModel.Index = 0;
                                viewModel.EntryControl = Model.EntryControl;
                                viewModel.DetailGuid = Guid.NewGuid().ToString();
                            }
                            @Html.Partial("_PartialSalesDetailEntry", viewModel)
                        </tbody>
                    </table>
                </div>
                <div class="lag">
                    <span class="stack">
                        <label class="label-90">
                            Short Name</label>
                        @Html.TextBoxFor(x => x.ShortName, new { @class = "input-100 input", disabled = "disabled" })
                    </span><span class="stack" style="padding-left: 40px">
                               <label class="label-90">
                                   Stock Qty</label>
                               @Html.TextBoxFor(x => x.StockQty, new { @class = "input-100 input", disabled = "disabled" })
                           </span><span class="stack" style="padding-left: 40px">
                                      <label class="label-90">
                                          Alt Stock Qty</label>
                                      @Html.TextBoxFor(x => x.AltStockQty, new { @class = "input-100 input", disabled = "disabled" })
                                  </span>
                </div>
                <div class="lag">
                    <span class="stack" style="padding-left: 264px">
                        <label class="label-90">
                            Total Qty</label>
                        @Html.TextBoxFor(x => x.TotalQty, new { @class = "input-100 input", disabled = "disabled" })
                    </span><span class="stack" style="padding-left: 40px">
                               <label class="label-90">
                                   Total Alt Qty</label>
                               @Html.TextBoxFor(x => x.TotalAltQty, new { @class = "input-100 input", disabled = "disabled" })
                           </span>
                </div>
            </div>
            <div id="tabs-2">
                <div class="left" style="float: left; width: 358px">
                    <div class="lag">
                        <label class="input-80">
                            Transport</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.Transport, new { @class = "input-240 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <span class="stack">
                            <label class="input-80">
                                Vehicle No</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.VehicleNo, new { @class = "input-74 input" })
                            </span></span><span class="stack">
                                              <label class="label-60">
                                                  Package</label>
                                              <span class="field">
                                                  @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.Package, new { @class = "input-74 input" })
                                              </span></span>
                    </div>
                    <div class="lag">
                        <span class="stack">
                            <label class="input-80">
                                C/N No.</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.CnNo, new { @class = "input-74 input" })
                            </span></span><span class="stack">
                                              <label class="label-60">
                                                  C/N Date</label>
                                              <span class="field">
                                                  @Html.TextBoxFor(m => m.CnDate, new { @class = "input-74 input" })
                                              </span></span>
                    </div>
                    <div class="lag">
                        <span class="stack">
                            <label class="input-80">
                                C/N Freight</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.CnFreight, new { @class = "input-74 input" })
                            </span></span><span class="stack">
                                              <label class="label-60">
                                                  Advance</label>
                                              <span class="field">
                                                  @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.CnAdvance, new { @class = "input-74 input" })
                                              </span></span>
                    </div>
                    <div class="lag">
                        <span class="stack">
                            <label class="input-80">
                                Bal. Freight</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.CnBalance, new { @class = "input-74 input" })
                            </span></span><span class="stack">
                                              <label class="label-60">
                                                  C/N Type</label>
                                              <span class="field">
                                                  @Html.DropDownListFor(m => m.SalesInvoiceOtherDetail.CnType, Model.CnTypeList, new { @class = "select-82 input" })
                                              </span></span>
                    </div>
                    <div class="lag">
                        <label class="input-80">
                            Driver's Name</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.DriverName, new { @class = "input-240 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="input-80">
                            License No</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.LicenseName, new { @class = "input-240 input" })
                        </span>
                    </div>
                </div>
                <div class="right" style="margin-left: 20px; float: right; width: 358px">
                    <div class="lag">
                        <span class="stack">
                            <label class="input-105">
                                Contract No. & Dt.</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.ContractNo, new { @class = "input-130 input" })
                            </span></span><span class="stack"><span class="field">
                                                                  @Html.TextBoxFor(m => m.ContractDate, new { @class = "input-70 input", @style = "margin-left:5px" })
                                                              </span></span>
                    </div>
                    <div class="lag">
                        <span class="stack">
                            <label class="input-105">
                                Export Inv. No. & Dt.</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.ExportInvoiceNo, new { @class = "input-130 input" })
                            </span></span><span class="stack"><span class="field">
                                                                  @Html.TextBoxFor(m => m.ExportInvoiceDate, new { @class = "input-70 input", @style = "margin-left:5px" })
                                                              </span></span>
                    </div>
                    <div class="lag">
                        <span class="stack">
                            <label class="input-105">
                                P.O. No. & Dt.</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.PONo, new { @class = "input-130 input" })
                            </span></span><span class="stack"><span class="field">
                                                                  @Html.TextBoxFor(m => m.PODate, new { @class = "input-70 input", @style = "margin-left:5px" })
                                                              </span></span>
                    </div>
                    <div class="lag">
                        <label class="input-105">
                            Doc Bank</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.DocBank, new { @class = "input-215 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="input-105">
                            L/C No</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.LCNumber, new { @class = "input-215 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="input-105">
                            Custom Name</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.CustomName, new { @class = "input-215 input" })
                        </span>
                    </div>
                    <div class="lag">
                        <label class="input-105">
                            CoFD</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.SalesInvoiceOtherDetail.COFDDesc, new { @class = "input-215 input" })
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <fieldset>
            <div class="lag">
                <span class="stack">
                    <label class="label-70">
                        Basic Amt</label>
                    @Html.TextBoxFor(x => x.SalesInvoice.BasicAmt, new { @class = "input-80 MasterBasicAmt", @readonly = "readonly" })
                </span><span class="stack" style="padding-left: 15px">
                           <label class="label-60">
                               Term Amt</label>
                           @Html.TextBoxFor(x => x.SalesInvoice.TermAmt, new { @class = "input-80 MasterTermAmt", @readonly = "readonly" })
                       </span><span class="stack" style="padding-left: 15px">
                                  <label class="label-60">
                                      Total Amt</label>
                                  @Html.TextBoxFor(x => x.SalesInvoice.NetAmt, new { @class = "input-80 MasterNetAmt", @readonly = "readonly" })
                              </span><span class="stack" style="padding-left: 15px">
                                         <label class="label-85">
                                             Total Amt in Rs</label>
                                         @Html.TextBoxFor(x => x.TotalAmtRs, new { @class = "input-90", disabled = "disabled" })
                                     </span>
            </div>
        </fieldset>
        <br/>
        @if (Model.EntryControl != null && Model.EntryControl.Remarks)
        {
            <div class="lag">
                <label class="label-90">
                    Remarks</label>
                <span class="field">
                    @Html.TextBoxFor(m => m.SalesInvoice.Remarks, new { @class = "input-245 input" })
                </span>
            </div>
        }
    </div>
@*if (Model.SystemControl.UDF == "1")
    {
        if (Model.UdfEntries.LongCount() != 0)
        {
    <a href="javascript:void(0);" class="btn UDFCustomFiled">UDF</a>
    <div class="UDFEntry" style="display: none">
        @Html.Partial("_PartialUdfField", Model.UdfEntries)
    </div>
        }
    }*@
}
@if (changeRate)
{
    <script type="text/javascript">
        changeRate = true;
    </script>
}
<script type="text/javascript">
    negativeStockAction = @Model.SystemControl.NegativeStock.ToString();
    var totalAmt = parseFloat(0);
    var totalQty = parseFloat(0);
    var rate = 0;
    $(document).ready(function () {
        var dateType = @Model.SystemControl.DateType.ToString();
        if(dateType=="1") {
            $("#InvoiceDate").mask("99/99/9999");
            $("#InvoiceDate").live("blur", function() {
                var validDate = isDate($(this).val(),"/",1,0,2);
                if(!validDate) {
                    $($(this).addClass("error"));
                }
                else {
                    $($(this).removeClass("error"));
                }
            });
        }
        else {
            $("#InvoiceDate").mask("9999/99/99");
            $("#InvoiceDate").live("blur", function() {
                var date = $(this).val();
                var validDate=isNepaliDate(date);
                if(!validDate) {
                    $($(this).addClass("error"));
                }
                else {
                    $($(this).removeClass("error"));
                }
            });
        }
       
     
        if(dateType=="1") {
            $("#DueDate,#CnDate,#PODate,#ContractDate,#ExportInvoiceDate").mask("99/99/9999");
            $("#DueDate,#CnDate,#PODate,#ContractDate,#ExportInvoiceDate").live("blur", function() {
                if($(this).val()!="__/__/____"&& $(this).val()!=" ") 
                {
                    var validDate = isDate($(this).val(),"/",1,0,2);
                    if(!validDate) {
                        $($(this).addClass("error"));
                    }
                    else {
                        $($(this).removeClass("error"));
                    }
                }
            });
        }
        else {
            $("#DueDate,#CnDate,#PODate,#ContractDate,#ExportInvoiceDate").mask("9999/99/99");
            $("#DueDate,#CnDate,#PODate,#ContractDate,#ExportInvoiceDate").live("blur", function() {
                if($(this).val()!="____/__/__"&& $(this).val()!=" ")
                {
                    var date = $(this).val();
                    var validDate=isNepaliDate(date);
                    if(!validDate) {
                        $($(this).addClass("error"));
                    }
                    else {
                        $($(this).removeClass("error"));
                    }
                }
            });
        }

      //  $("#SalesInvoice_InvoiceMiti").val(nepDate);
    
        $("#tabs").tabs();
        $(".text_product").attr("id", "product_0");
        $(".text_product").attr("valueId", $(".productId").attr("id"));
        $(".text_product").closest("tr").attr("id", "tr_0");
    });
 
</script>
