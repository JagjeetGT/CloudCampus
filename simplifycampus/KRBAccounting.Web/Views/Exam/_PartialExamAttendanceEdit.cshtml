@model KRBAccounting.Domain.Entities.ScExamAttendanceMaster
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@using (Ajax.BeginForm("ExamAttendanceEdit", "Exam", new { controller = "School" }, new AjaxOptions { HttpMethod = "Post", OnBegin = "Begin", OnSuccess = "successEdit" }, new { @class = "form-horizontal from-custom online-form", id = "form-id" }))
{
    @Html.HiddenFor(x => x.Id)
       @Html.HiddenFor(x => x.CreatedById)
        @Html.HiddenFor(x => x.CreatedDate)
        @Html.HiddenFor(m=>m.AcademicYearId)
    <div class="span6" style="margin-left: 0px">
        <div class="lag">
            <div class="stack">
                <label class="label-45">
                    Class</label>
                <div class="field">@Html.HiddenFor(x => x.ClassId)
                    <input type="text" class = "modallink input-120 input"value="@if (Model.Classes != null)
                                                                                 {
                                                                                     @Model.Classes.Description
                                                                                 }
                                                                                    " href="@Url.Action("GetClasses", "School")"  valueId="ClassId" id="feeitemledger" title="Classes" entermsg = "Press F1 for choosing existing cash/bank list." />
                    @Html.ValidationMessageFor(m => m.ClassId)</div>
            </div>
            <div class="stack">
                <label class="label-70">
                    Section</label>
                <div class="field">
                    @Html.HiddenFor(x => x.SectionId)
                    <input type="text" class = "modallink input-120 input" value="@if (Model.Section != null)
                                                                                  {
                                                                                      @Model.Section.Description
                                                                                  }
                                                                                     " href="@Url.Action("GetSections", "School")" valueId="SectionId" id="houseSectionId" title="Section" entermsg = "Enter SectionId" />
                    @Html.ValidationMessageFor(m => m.SectionId)
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag">
            <div class="stack">
                <label class="label-45">
                    Exam</label>
                <div class="field">
                    @Html.HiddenFor(x => x.ExamId)
                    <input type="text" class = "modallink input-120 input" href="@Url.Action("GetExames", "School")" value="@if (Model.Exam != null)
                                                                                                                            {
                                                                                                                                @Model.Exam.Description
                                                                                                                            }
                                                                                                                               " valueId="ExamId" id="ExamMasterId" title="Examination" entermsg = "Enter SectionId" />
                    @Html.ValidationMessageFor(m => m.ExamId)
                 @*    <input id="examCode" type="text" value="@if (Model.Exam != null)
                                                             {
                                                                 @Model.Exam.Code
                                                             }
                                                                " style="margin-left: 5px;" class="input-90 input" readonly="readonly" />*@
                </div>
            </div>
            <div class="stack">
                <label class="label-70">
                    Total Days</label>
                <div class="field">
                     @Html.TextBoxFor(x => x.TotalDays, new { @class = "input-120 input" })
                      @Html.ValidationMessageFor(m => m.TotalDays)
                </div>
            </div>
        </div>
    </div>
    
    <fieldset>
        <div class="lag">
            <label class="label-70">
                Entry Date</label>
            <div class="field">
                @Html.DateTextBoxFor(x => x.EntryDate, new { @class = "input-90 input" })
                @Html.ValidationMessageFor(m => m.EntryDate)
            </div>
        </div><div class="clearfix"></div>
        <div class="lag">
            <label class="label-70">
                Entry Miti</label>
            <div class="field">
                @Html.TextBoxFor(x => x.EntryMiti, new { @class = "input-90 input" })
                @Html.ValidationMessageFor(m => m.EntryMiti)
            </div>
        </div>
    </fieldset>
    <div class="clearfix">
    </div>
    <div class="lag detailEntryTable" style="height: 250px; width: 100%">
        <table class="listpopup" id="table-class-fee-rate-detail" style=" width: 100%">
            <tr class="nodrop nodrag">
                <th width="20px">
                </th>
                <th>
                    Student
                </th>
                <th>
                    Code
                </th>
                <th>
                    Roll No
                </th>
                <th>
                    Present Days
                </th>
                <th>
                    Absent Days
                </th>
                <th>
                    Narration
                </th>
            </tr> @foreach (var item in Model.AttendanceDetails)
                  {
                @Html.Partial("_PartialExamAttendanceDetailEdit", item)
                  }
        </table>
    </div>
        
        
    
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#EntryDate").datepicker();
        $("#EntryDate").mask('99/99/9999');
        $("#EntryMiti").mask('9999/99/99');
        if (!$("#EntryDate").hasClass("error") && $("#EntryDate").val() != "") {
            var date = $("#EntryDate").val();
            var nepDate = convertToNepaliNew(date);
            $("#EntryMiti").val(nepDate);


        }
        var ledgerElement = document.querySelectorAll(".hdn_Subject_Id");
        $.each(ledgerElement, function (index) {
            var element = $(this).closest("tr");
            element.attr("id", "tr_" + index);

            var Subject_valueid = element.find(".hdn_Subject_Id").attr("id");

            element.find(".text_subject").attr({
                "valueId": Subject_valueid,
                "id": "text_subject_" + index
            });

        });
    });
   
</script>