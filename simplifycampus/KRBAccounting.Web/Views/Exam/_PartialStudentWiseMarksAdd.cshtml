@model KRBAccounting.Domain.Entities.ScExamMarksEntry
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@using (Ajax.BeginForm("StudentWiseMarksAdd", "Exam", new { controller = "Exam" }, new AjaxOptions { HttpMethod = "Post", OnBegin = "Begin", OnSuccess = "success" }, new { @class = "form-horizontal from-custom online-form", id = "form-id" }))
{
    <div class="lag">
        <label>
            Exam</label>
        <div class="field">
            @Html.HiddenFor(x => x.ExamId)
            <input type="text" class="modallink input-150 input" href="@Url.Action("GetExames")" title="Exam"  valueid="ExamId" id="exam-id" />
            @Html.ValidationMessageFor(m => m.ExamId)
        </div>
        <label>
            Class</label>
        <div class="field">
            @Html.HiddenFor(x => x.ClassId)
            <input type="text" class="modallink input-150 input" href="@Url.Action("GetClasses", "School")" title="Class" valueid="ClassId" id="class-id"/>
            @Html.ValidationMessageFor(m => m.ClassId)
        </div>
        <label>
            Student Name</label>
        <div class="field">
            @Html.HiddenFor(x => x.StudentId)
            <input type="text" class="modallink input-150 input" href="@Url.Action("GetStudentByClasId")" parent="ClassId" title="Student" parentnext="ExamId"  valueid="StudentId" id="student-id"/>
            @Html.ValidationMessageFor(m => m.StudentId)
        </div>
    </div>
    
    <div class="clearfix">
    </div>
    <div class="lag detailEntryTable" style="height: 350px; width: 100%">
        <table class="listpopup" id="table-examroutine-detail" width="100%">
            <tr>
                <th>
                </th>
                <th>
                </th>
                <th>
                </th>
                <th>
                </th>
                <th>
                </th>
                <th colspan="4">
                    Theory
                </th>
                <th colspan="4">
                    Practical
                </th>
            </tr>
            <tr class="">
                <th>
                    s.no
                </th>
                <th>
                    Subject Name
                </th>
                <th>
                    Code
                </th>
                <th>
                    Result Sys.
                </th>
                <th>
                    Eva.Type
                </th>
                <th>
                    Full Mark
                </th>
                <th>
                    Pass Mark
                </th>
                <th>
                    Ob. Mark
                </th>
                <th>
                    Status
                </th>
                <th>
                    Full Mark
                </th>
                <th>
                    Pass Mark
                </th>
                <th>
                    Ob. Mark
                </th>
                <th>
                    Status
                </th>
                <th>
                    Total
                </th>
                <th>
                    Narration
                </th>
            </tr>
        </table>
    </div>
    <hr />
    <fieldset>
        <div class="lag">
            <label class="label-100">
                Total Full Marks</label>
            <div class="field">
                @Html.TextBoxFor(x => x.TotalFullMarks, new { @class = "input-90 input", @readonly = true })
            </div>
            <label class="label-100">
                Total Obtained Marks</label><div class="field">
                    @Html.TextBoxFor(x => x.TotalObtainedMarks, new { @class = "input-90 input", @readonly = true })</div>
            <label class="label-90">
                Percentage</label><div class="field">
                    @Html.TextBoxFor(x => x.Percentage, new { @class = "input-90 input", @readonly = true })</div>
            <label class="label-90">
                Result</label><div class="field">
                    @Html.TextBoxFor(x => x.Result, new { @class = "input-90 input", @readonly = true })</div>
            <label class="label-90">
                Division</label><div class="field">
                    @Html.HiddenFor(x => x.DivisionId, new { @class = "input-90 input", @readonly = true })
                    @Html.TextBoxFor(x => x.DivisionDescription, new { @class = "input-90 input", @readonly = true })</div>
        </div>
        <div class="msg">
        </div>
    </fieldset>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-100">
            Remarks</label>
        @Html.TextBoxFor(x => x.Remarks, new { @class = "input-450 input" })
    </div>
}
