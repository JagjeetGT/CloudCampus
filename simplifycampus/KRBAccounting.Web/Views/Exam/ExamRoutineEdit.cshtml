@model KRBAccounting.Web.ViewModels.Academy.AcademicsExamRoutineViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@using (Ajax.BeginForm("ExamRoutineEdit", "Exam", new { controller = "Exam" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "successEdit" }, new { @class = "form-horizontal from-custom online-form", id = "form-id" }))
{
    @Html.HiddenFor(x => x.ExamId)
    @Html.HiddenFor(x => x.ClassId)
    @Html.HiddenFor(x => x.ExamRoutine.AcademicYearId)
    <div class="lag">
        <label class="label-90">
            Exam</label>
        <div class="field">
            @Html.HiddenFor(x => x.ExamRoutine.ExamId)
            <input type="text" class="modallink input-100" value="@if (Model.ExamRoutine.ScExam != null)
                                                                  {
                                                                      @Model.ExamRoutine.ScExam.Description
                                                                  }
                                                                     " href="@Url.Action("GetExames")" createhref="@Url.Action("OnlineExamAdd")" valueid="ExamRoutine_ExamId" id="exam-id" />
            @Html.ValidationMessageFor(m => m.ExamRoutine.ExamId)
        </div>
        <label class="label-90">
            Class</label>
        <div class="field">
            @Html.HiddenFor(x => x.ExamRoutine.ClassId)
            <input type="text" class="modallink input-100" value="@if (Model.ExamRoutine.Class != null)
                                                                  {
                                                                      @Model.ExamRoutine.Class.Description
                                                                  }
                                                                     " href="@Url.Action("GetExamRoutineClasses")" valueid="ExamRoutine_ClassId" id="class-id" parent="ExamRoutine_ExamId"/>
            @Html.ValidationMessageFor(m => m.ExamRoutine.ClassId)
        </div>
    </div>

    
    <div class="clearfix">
    </div>
    <div class="lag detailEntryTable" style="height: 400px; width: 1000px;">
        <table class="listpopup" id="table-examroutine-detail" width="100px;">
            <tr class="nodrop nodrag">
                <th width="20px">
                </th>
                <th>
                    Subject
                </th>
                <th>
                    Result System
                </th>
                <th>
                    Evaluation
                </th>
                <th>
                    Class Type
                </th>
                <th>
                    Date (MM/DD/YYYY)
                </th>
                <th>
                    Start Time
                </th>
                <th>
                    End Time
                </th>
                <th>
                    Hours
                </th>
                <th>
                    Narration
                </th>
            </tr>
            @foreach (var item in Model.ExamRoutines)
            {
                @Html.Partial("_PartialExamRoutineEdit", item)
            }
        </table>
    </div>

}
<script type="text/javascript">

    $(document).ready(function() {
        var ledgerElement = document.querySelectorAll(".text_subject");
        $.each(ledgerElement, function(index) {
            var element = $(this).closest("tr");
            element.attr("id", "tr_" + index);

            var Subject_valueid = element.find(".hdn_Subject_Id").attr("id");

            element.find(".text_subject").attr({
                "valueId": Subject_valueid,
                "id": "subject_" + index
            });

            var ResultSystem_valueid = element.find(".hdn_ResultSystem_Id").attr("id");

            element.find(".text_ResultSystem").attr({
                "valueId": ResultSystem_valueid,
                "id": "ResultSystem_" + index
            });
            var EvaluateForType_valueid = element.find(".hdn_EvaluateForType_Id").attr("id");

            element.find(".text_EvaluateForType").attr({
                "valueId": EvaluateForType_valueid,
                "id": "EvaluateForType_" + index
            });
            var ClassType_valueid = element.find(".hdn_ClassType_Id").attr("id");

            element.find(".text_ClassType").attr({
                "valueId": ClassType_valueid,
                "id": "ClassType_" + index
            });
            DateTime();
        });
    });
    function DateTime() {


        $(".ExamDate").mask("99/99/9999");


        $(".StartTime, .EndTime").timepicker({
            'timeFormat': 'h:i A',
            'step': 15,
            'showDuration': true,
            'forceRoundTime': true
        });
    }


</script>
