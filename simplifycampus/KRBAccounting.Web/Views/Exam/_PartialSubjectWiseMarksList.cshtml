@using KRBAccounting.Service.Models
@using KRBAccounting.Web.CustomFilters
@model PagedList<List<KRBAccounting.Domain.Entities.ScExamMarksEntry>>
           @{
               var userRight = (UserRight)ViewBag.UserRight;
           }
<div class="block-fluid table-sorting">
    <table cellpadding="0" cellspacing="0" width="100%" class="table" id="tbl-list">
        <thead>
            <tr>
                <th width="5%">S.N.</th>
                <th>
                    Exam
                </th>
                <th>
                    Class
                </th>
                <th>
                    Name
                </th>
                <th>
                    Highest Mark
                </th>
               @* <th>
                    Created By
                </th>*@
                <th>
                    Update By
                </th>
               @* <th>
                    Created Date
                </th>*@
                <th>
                    Updated Date
                </th>
                <th width="5%"></th>
            </tr>
        </thead>
        <tbody>
            @{var i = Convert.ToInt32(ViewBag.SnStart);}
            @foreach (var item in Model)
            {

                <tr>
                    <td align="center">@i</td>
                    <td>
                        @{
                            var scExam = item.FirstOrDefault().Exam;
                        }
                        @if (scExam != null)
                        {
                            @scExam.Description
                        }

                    </td>
                    <td>
                        @{
                            var schClass = item.FirstOrDefault().Class;
                        }
                        @if (schClass != null)
                        {
                            @schClass.Description
                        }

                    </td>
                    <td>
                        @{
                            var scSubject = item.FirstOrDefault().Subject;
                        }
                        @if (scSubject != null)
                        {
                            @scSubject.Description
                        }

                    </td>
                  
                    <td>
                       @item.FirstOrDefault().HighestMarks

                    </td>
                    <td>
                        @{
                            var updatedBy = item.FirstOrDefault().UpdatedBy;
                        }
                        @if (updatedBy != null)
                        {
                            @updatedBy.FullName
                        }

                    </td>
                   @* <td>@item.FirstOrDefault().CreatedDate
                    </td>*@
                    <td>@item.FirstOrDefault().UpdatedDate.ToShortDateString()
                    </td>
                    <td>
                        @if(userRight.Edit){<a href="javascript:void(0)" class="editExam icon-edit" data-classId="@item.FirstOrDefault().ClassId" data-examId="@item.FirstOrDefault().ExamId" data-subjectId="@item.FirstOrDefault().SubjectId" title="Edit">
                        </a>}
                    </td>
                  
                </tr>
                i++;
            }
        </tbody>
    </table>
<div class="pagination">
        @Html.Raw(Html.AjaxPager(Model, "SubjectWiseMarksList", "Exam", new PagerOptions() { PageIndexParameterName = "pageNo", ShowGoButton = false }, new AjaxOptions() { UpdateTargetId = "exam-list" }))
    </div>
</div>
@*<script type="text/javascript" src="/Scripts/cooperative.pagination-begin-end-request-loader.js">
</script>*@
