@model KRBAccounting.Domain.Entities.ScExamRoutine
@using KRBAccounting.Service
<tr class="subject-detail-entry detail-entry deletable">
    @using (Html.BeginCollectionItem("subjectEntry"))
    {
        <td class="dragHandle">
            &nbsp;&nbsp;&nbsp;
        </td>
        <td>
            @Html.HiddenFor(x => x.SubjectId, new { @class = "hdn_Subject_Id" })
            <input type="text"  class = "modallink text_subject input-120 input" value="@if (Model.Subject != null)
                                                                                        {
                                                                                                @Model.Subject.Description
                                                                                        }
                                                                                               "  href="@Url.Action("GetSubjects", "School")" title="Subject "  entermsg = "Press F1 for existing Account list." />
        </td>
        <td>
            @Html.HiddenFor(x => x.ResultSystem, new { @class = "hdn_ResultSystem_Id" })
            <input type="text" class = "modallink text_ResultSystem input-90 input" value="@UtilityService.GetResultSystem(Model.ResultSystem)" href="@Url.Action("GetEnumResultSystemList", "School")"  title="Result System"  entermsg = "Press F1 for existing Account list." />
        </td>
        <td>
            @Html.HiddenFor(x => x.EvaluateForType, new { @class = "hdn_EvaluateForType_Id" })
            <input type="text" class = "modallink text_EvaluateForType input-90 input" value="@UtilityService.GetEvaluateForPass(Model.EvaluateForType)"  href="@Url.Action("GetEnumEvaluateForPassList", "School")"  title="Evaluation For Pass"  entermsg = "Press F1 for existing Account list." />
        </td>
        <td>
            @Html.HiddenFor(x => x.ExamType, new { @class = "hdn_ClassType_Id" })
            <input type="text" class = "modallink text_ClassType input-90 input" value="@UtilityService.GetClassType(Model.ExamType)"  href="@Url.Action("GetEnumClassTypeList", "School")" title="Class Type"  entermsg = "Press F1 for existing Account list." />
        </td>
        <td>
            <span>
                @Html.HiddenFor(x => x.ExamMiti, new { @class = "ExamMiti" })
                @Html.DateTextBoxFor(x => x.ExamDate, new { @class = "ExamDate input-90 input" })
                @Html.ValidationMessageFor(x => x.ExamDate) </span>
        </td>
        <td>
            @Html.TextBoxFor(x => x.StartTime, new { @class = "StartTime input-90 input" })
            @Html.ValidationMessageFor(x => x.StartTime)
        </td>
        <td>
            @Html.TextBoxFor(x => x.EndTime, new { @class = "EndTime input-90 input" })
            @Html.ValidationMessageFor(x => x.EndTime)
        </td>
        <td>@Html.TextBoxFor(x => x.ExamHour, new { @class = "ExamHour input-90 input" })
        </td>
        <td>
            @Html.TextBoxFor(x => x.Remarks, new { @class = "narration input-160 input", href = "/Exam/ExamRoutineDetialAdd", entermsg = "Enter Narration or press F1 for existing Narration List." })
        </td>
        <td>
            <img src="../../Content/img/delete.png" width="15px" onclick="$(this).closest('tr').remove();"
                class="del-row">
        </td>

    }
</tr>
