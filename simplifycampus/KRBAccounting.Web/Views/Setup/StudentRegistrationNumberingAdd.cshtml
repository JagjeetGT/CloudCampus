@model KRBAccounting.Web.ViewModels.Setup.StudentRegistrationNumberingViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<div style="width: 680px;">
    @using (Ajax.BeginForm("DocumentNumberingSchemeAdd", "Setup", new { controller = "Setup" }, new AjaxOptions { HttpMethod = "Post", OnComplete = "OnComplete" }, new { @class = "form-horizontal form-custom", id = "document-numering-form" }))
    {
        @Html.HiddenFor(x=>x.StartDate)
          @Html.HiddenFor(x => x.EndDate)
        <div class="lag">
            <span class="stack">
                <span class="stack">
                    <label class="input-64">
                        Description</label>
                    <span class="field">
                        @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocDesc, new { @class = "input-90" })
                        @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocDesc)
                    </span></span></span>
        </div>
        <div class="row">
            <div class="lag span4">
               
              
                <fieldset class="input-315" style="margin: 10px;">
                    <legend>Numbering Style</legend><span class="stack"><span class="field lag">
                        @Html.RadioButtonForSelectList(m => m.StudentRegistrationNumbering.DocMode, Model.Mode)
                    </span></span
                </fieldset>
            </div>
            <div class="span3 lag">
                <fieldset>
                    <legend>Options</legend><span class="lag">
                        <label class="input-90">
                            Prefix</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocPrefix, new { @class = "input-120" })
                            @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocPrefix)
                        </span></span><span class="lag">
                            <label class="input-90">
                                Suffix</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocSuffix, new { @class = "input-120" })
                                @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocSuffix)
                            </span></span><span class="lag">
                                <label class="input-90">
                                    Body Length
                                </label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocBodyLen, new { @class = "input-120" })
                                    @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocBodyLen)
                                </span></span><span class="lag">
                                    <label class="input-90">
                                        Total Length</label>
                                    <span class="field">
                                        @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocTotalLen, new { @class = "input-120" })
                                        @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocTotalLen)
                                    </span></span>
                    <div class="lag">
                        <span class="stack">
                            <label class="input-90" style="font-size: 12px; padding: 0px 5px;">
                                Numeric Left Fill</label>
                            <span class="field">
                                @Html.EditorFor(m => m.StudentRegistrationNumbering.DocNumFill, new { @class = "input-25" })
                                @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocNumFill)
                            </span></span><span class="stack">
                                              <label class="input-80" style="font-size: 12px; padding: 0px 8px;">
                                                  Fill Character</label>
                                              <span class="field">
                                                  @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocCharFill, new { @class = "input-25" })
                                                  @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocCharFill)
                                              </span></span>
                        
                    </div>
                    <span class="lag">
                        <label class="input-90">
                            Start No</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocStartNo, new { @class = "input-120" })
                            @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocStartNo)
                        </span></span><span class="lag">
                            <label class="input-90">
                                End No</label>
                            <span class="field">
                                @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocEndNo, new { @class = "input-120" })
                                @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocEndNo)
                            </span></span><span class="lag">
                                <label class="input-90">
                                    Current No</label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocCurrNo, new { @class = "input-120" })
                                    @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocCurrNo)
                                </span></span>
                </fieldset>
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#StudentRegistrationNumbering_DocCharFill").attr("disabled", "disabled");
        $("#DocMode_D").attr("checked", "checked");
    });
    $("#DocMode_N").live("click", function () {
        $("#StudentRegistrationNumbering_DocSuffix").val('');
        $("#StudentRegistrationNumbering_DocSuffix").attr("disabled", "disabled");
        $("#StudentRegistrationNumbering_DocPrefix").val('');
        $("#StudentRegistrationNumbering_DocPrefix").attr("disabled", "disabled");
    });
    $("#DocMode_D, #DocMode_A").live("click", function () {
        $("#StudentRegistrationNumbering_DocSuffix").val('');
        $("#StudentRegistrationNumbering_DocSuffix").removeAttr("disabled");
        $("#StudentRegistrationNumbering_DocPrefix").val('');
        $("#StudentRegistrationNumbering_DocPrefix").removeAttr("disabled");
    });
    $("#StudentRegistrationNumbering_ModuleName").live("change", function () {
        var val = $(this).val();
        if (val != "CB") {
            $("#StudentRegistrationNumbering_DocType").attr("disabled", "disabled");
            $(".DocType").css("visibility", "hidden");
        }
        else {
            $("#StudentRegistrationNumbering_DocType").removeAttr("disabled");
            $(".DocType").css("visibility", "visible");
        }
    });
    $("#StudentRegistrationNumbering_DocPrefix").live("focusout", function () {

        CountTotalLength();

    });
    $("#StudentRegistrationNumbering_DocSuffix").live("focusout", function () {

        CountTotalLength();

    });
    $("#StudentRegistrationNumbering_DocBodyLen").live("focusout", function () {
        var val = $(this).val();
        if (val == 0 || val == "") {
            $(this).addClass("error").text("Body length Cannot be Zero Length").css("clear", "both");
            $("#DocumentNumberingScheme_DocBodyLen").focus();
        }

        CountTotalLength();

    });
    $("#StudentRegistrationNumbering_DocTotalLen").live("focusout", function () {
        var val = $(this).val();

        if (val = 0 || val == "") {
            $(this).addClass("error").text("Body length Cannot be Zero Length").css("clear", "both");
            $("#StudentRegistrationNumbering_DocBodyLen").focus();
        }
    });
    function CountTotalLength() {
        prefix = $("#StudentRegistrationNumbering_DocPrefix").val().length;
        suffix = $("#StudentRegistrationNumbering_DocSuffix").val().length;
        bodylen = $("#StudentRegistrationNumbering_DocBodyLen").val();
        if (bodylen == "") {
            bodylen = 0;
        }
        counttotal = prefix + suffix + parseInt(bodylen);

        $("#StudentRegistrationNumbering_DocTotalLen").val(counttotal);
    }



//    $("#StartDate").datepicker({
//        dateFormat: "mm/dd/yy",
//        changeMonth: true,
//        changeYear: true,
//        showAnim: 'fadeIn'
//    });
//    $("#EndDate").datepicker({
//        dateFormat: "mm/dd/yy",
//        changeMonth: true,
//        changeYear: true,
//        yearRange: 'c-50',

//        showAnim: 'fadeIn'
//    });
    $("#StudentRegistrationNumbering_DocStartNo, #StudentRegistrationNumbering_DocEndNo").keydown(function (e) {

        var bodylen = $("#StudentRegistrationNumbering_DocBodyLen").val();
        if (e.keyCode == 46 || e.keyCode == 8 || e.keyCode == 9 || e.keyCode == 27 || e.keyCode == 13 || (e.keyCode == 65 && e.ctrlKey === true) || (e.keyCode >= 35 && e.keyCode <= 39)) {
            //let it happen

            return;


        } else {
            //ensure that it is a number, otherwise stop the keypress
            if (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            } else {
                if ($(this).val().length > (bodylen - 1)) {
                    e.preventDefault();
                }
            }
        }
    });


    $("#StudentRegistrationNumbering_DocCharFill").keydown(function (e) {

        if (e.keyCode == 46 || e.keyCode == 8 || e.keyCode == 9 || e.keyCode == 27 || e.keyCode == 13 || (e.keyCode == 65 && e.ctrlKey === true) || (e.keyCode >= 35 && e.keyCode <= 39)) {
            //let it happen

            return;


        } else {
            //ensure that it is a number, otherwise stop the keypress
            if (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            } else {
                if ($(this).val()) {

                    e.preventDefault();
                }
            }
        }
    });
    $("#StudentRegistrationNumbering_DocNumFill").live("click", function () {
        $("#StudentRegistrationNumbering_DocCharFill").val('');
        if ($(this).attr("checked")) {


            $("#StudentRegistrationNumbering_DocCharFill").removeAttr("disabled");

        } else {

            $("#StudentRegistrationNumbering_DocCharFill").attr("disabled", "disabled");
        }
    });
</script>

