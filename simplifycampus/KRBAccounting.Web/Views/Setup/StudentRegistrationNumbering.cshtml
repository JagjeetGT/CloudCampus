@{
    ViewBag.Title = "Student Registration Numeric Scheme";
    Layout = "~/Views/Shared/_Layout.cshtml";
  
}    @using KRBAccounting.Service.Models    @model KRBAccounting.Web.ViewModels.Setup.StudentRegistrationNumberingViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<div class="workplace">
    <div class="head">
        <div class="isw-grid">
        </div>
        <h1>
            Student Registration Numbering Scheme</h1>
        
        <div class="clear">
        </div>
    </div>
<div id="DocNumScheme-list" class="block-fluid">

<div style="width: 680px;">
    @using (Ajax.BeginForm("StudentRegistrationNumberingAdd", "Setup", new { controller = "Setup" }, new AjaxOptions { HttpMethod = "Post", OnComplete = "OnComplete" }, new { @class = "form-horizontal form-custom", id = "document-numering-form" }))
    {
         @Html.HiddenFor(x => x.StudentRegistrationNumbering.Id)
        @Html.HiddenFor(x => x.StartDate)
          @Html.HiddenFor(x => x.EndDate)
       
        <div class="row">
          @*  <div class="lag span4">
               
              
                <fieldset class="input-315" style="margin: 10px;">
                    <legend>Numbering Style</legend><span class="stack"><span class="field lag">
                                                                            @Html.RadioButtonForSelectList(m => m.StudentRegistrationNumbering.DocMode, Model.Mode)
                                                                        </span></span>
                </fieldset>
            </div>*@
            <div class="span3 lag">
                <fieldset>
                    <legend>Options</legend><span class="lag">
                                                <label class="input-90">
                                                    Prefix</label>
                                                <span class="field">
                                                    @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocPrefix, new { @class = "input-120" })
                                                    @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocPrefix)
                                                </span></span><span class="lag">
                                                                  <label class="input-90">
                                                                      Suffix</label>
                                                                  <span class="field">
                                                                      @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocSuffix, new { @class = "input-120", @readonly="readonly" })
                                                                      @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocSuffix)
                                                                  </span></span><span class="lag">
                                                                                    <label class="input-90">
                                                                                        Body Length
                                                                                    </label>
                                                                                    <span class="field">
                                                                                        @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocBodyLen, new { @class = "input-120" })
                                                                                        @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocBodyLen)
                                                                                    </span></span><span class="lag">
                                                                                                      <label class="input-90">
                                                                                                          Total Length</label>
                                                                                                      <span class="field">
                                                                                                          @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocTotalLen, new { @class = "input-120" })
                                                                                                          @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocTotalLen)
                                                                                                      </span></span>
                    <div class="lag">
                        <span class="stack">
                            <label class="input-90" style="font-size: 12px; padding: 0px 5px;">
                                Numeric Left Fill</label>
                            <span class="field">
                                @Html.EditorFor(m => m.StudentRegistrationNumbering.DocNumFill, new { @class = "input-25" })
                                @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocNumFill)
                            </span></span><span class="stack">
                                              <label class="input-80" style="font-size: 12px; padding: 0px 8px;">
                                                  Fill Character</label>
                                              <span class="field">
                                                  @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocCharFill, new { @class = "input-25" })
                                                  @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocCharFill)
                                              </span></span>
                        
                    </div>
                    <span class="lag">
                        <label class="input-90">
                            Start No</label>
                        <span class="field">
                            @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocStartNo, new { @class = "input-120" })
                            @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocStartNo)
                        </span></span><span class="lag">
                                          <label class="input-90">
                                              End No</label>
                                          <span class="field">
                                              @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocEndNo, new { @class = "input-120" })
                                              @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocEndNo)
                                          </span></span><span class="lag">
                                                            <label class="input-90">
                                                                Current No</label>
                                                            <span class="field">
                                                                @Html.TextBoxFor(m => m.StudentRegistrationNumbering.DocCurrNo, new { @class = "input-120" })
                                                                @Html.ValidationMessageFor(m => m.StudentRegistrationNumbering.DocCurrNo)
                                                            </span></span>
                </fieldset>
              <div class="form-actions">
            <input type="submit" value="Save" class="btn btn-info" />
        </div>
            </div>
        </div>
    }
</div>

</div></div>
<div class="dialog" id="modalDocNumScheme" title="Document Numeric Scheme">
    <div class="block"></div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        if(@Model.StudentRegistrationNumbering.Id ==0) {
            $("#StudentRegistrationNumbering_DocCharFill").attr("disabled", "disabled");
            $("#DocMode_D").attr("checked", "checked");
        } else {
     
        if ($("#StudentRegistrationNumbering_DocNumFill").attr("checked")) {


            $("#StudentRegistrationNumbering_DocCharFill").removeAttr("disabled");

        } else {

            $("#StudentRegistrationNumbering_DocCharFill").attr("disabled", "disabled");
        }

        if ($("#DocMode_N").attr("checked")) {
            $("#StudentRegistrationNumbering_DocSuffix").val('');
            $("#StudentRegistrationNumbering_DocSuffix").attr("disabled", "disabled");
            $("#StudentRegistrationNumbering_DocPrefix").val('');
            $("#StudentRegistrationNumbering_DocPrefix").attr("disabled", "disabled");
        }
        if ($("#StudentRegistrationNumbering_ModuleName").val() != "CB") {
            $("#StudentRegistrationNumbering_DocType").attr("disabled", "disabled");
            $(".DocType").css("visibility", "hidden");
        }
 
        }


    });
    $("#DocMode_N").live("click", function () {
        $("#StudentRegistrationNumbering_DocSuffix").val('');
        $("#StudentRegistrationNumbering_DocSuffix").attr("disabled", "disabled");
        $("#StudentRegistrationNumbering_DocPrefix").val('');
        $("#StudentRegistrationNumbering_DocPrefix").attr("disabled", "disabled");
    });
    $("#DocMode_D, #DocMode_A").live("click", function () {
        $("#StudentRegistrationNumbering_DocSuffix").val('');
        $("#StudentRegistrationNumbering_DocSuffix").removeAttr("disabled");
        $("#StudentRegistrationNumbering_DocPrefix").val('');
        $("#StudentRegistrationNumbering_DocPrefix").removeAttr("disabled");
    });
    $("#StudentRegistrationNumbering_ModuleName").live("change", function () {
        var val = $(this).val();
        if (val != "CB") {
            $("#StudentRegistrationNumbering_DocType").attr("disabled", "disabled");
            $(".DocType").css("visibility", "hidden");
        }
        else {
            $("#StudentRegistrationNumbering_DocType").removeAttr("disabled");
            $(".DocType").css("visibility", "visible");
        }
    });
    $("#StudentRegistrationNumbering_DocPrefix").live("focusout", function () {

        CountTotalLength();

    });
    $("#StudentRegistrationNumbering_DocSuffix").live("focusout", function () {

        CountTotalLength();

    });
    $("#StudentRegistrationNumbering_DocBodyLen").live("focusout", function () {
        var val = $(this).val();
        if (val == 0 || val == "") {
            $(this).addClass("error").text("Body length Cannot be Zero Length").css("clear", "both");
            $("#DocumentNumberingScheme_DocBodyLen").focus();
        }

        CountTotalLength();

    });
    $("#StudentRegistrationNumbering_DocTotalLen").live("focusout", function () {
        var val = $(this).val();

        if (val = 0 || val == "") {
            $(this).addClass("error").text("Body length Cannot be Zero Length").css("clear", "both");
            $("#StudentRegistrationNumbering_DocBodyLen").focus();
        }
    });
    function CountTotalLength() {
        prefix = $("#StudentRegistrationNumbering_DocPrefix").val().length;
        suffix = $("#StudentRegistrationNumbering_DocSuffix").val().length;
        bodylen = $("#StudentRegistrationNumbering_DocBodyLen").val();
        if (bodylen == "") {
            bodylen = 0;
        }
        counttotal = prefix + suffix + parseInt(bodylen);

        $("#StudentRegistrationNumbering_DocTotalLen").val(counttotal);
    }



    //    $("#StartDate").datepicker({
    //        dateFormat: "mm/dd/yy",
    //        changeMonth: true,
    //        changeYear: true,
    //        showAnim: 'fadeIn'
    //    });
    //    $("#EndDate").datepicker({
    //        dateFormat: "mm/dd/yy",
    //        changeMonth: true,
    //        changeYear: true,
    //        yearRange: 'c-50',

    //        showAnim: 'fadeIn'
    //    });
    $("#StudentRegistrationNumbering_DocStartNo, #StudentRegistrationNumbering_DocEndNo").keydown(function (e) {

        var bodylen = $("#StudentRegistrationNumbering_DocBodyLen").val();
        if (e.keyCode == 46 || e.keyCode == 8 || e.keyCode == 9 || e.keyCode == 27 || e.keyCode == 13 || (e.keyCode == 65 && e.ctrlKey === true) || (e.keyCode >= 35 && e.keyCode <= 39)) {
            //let it happen

            return;
            

        } else {
            //ensure that it is a number, otherwise stop the keypress
            if (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            } else {
                if ($(this).val().length > (bodylen - 1)) {
                    e.preventDefault();
                }
            }
        }
    });


    $("#StudentRegistrationNumbering_DocCharFill").keydown(function (e) {

        if (e.keyCode == 46 || e.keyCode == 8 || e.keyCode == 9 || e.keyCode == 27 || e.keyCode == 13 || (e.keyCode == 65 && e.ctrlKey === true) || (e.keyCode >= 35 && e.keyCode <= 39)) {
            //let it happen

            return;


        } else {
            //ensure that it is a number, otherwise stop the keypress
            if (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            } else {
                if ($(this).val()) {

                    e.preventDefault();
                }
            }
        }
    });
    $("#StudentRegistrationNumbering_DocNumFill").live("click", function () {
        $("#StudentRegistrationNumbering_DocCharFill").val('');
        if ($(this).attr("checked")) {


            $("#StudentRegistrationNumbering_DocCharFill").removeAttr("disabled");

        } else {

            $("#StudentRegistrationNumbering_DocCharFill").attr("disabled", "disabled");
        }
    });
</script>
<script type="text/javascript">
    function Begin() {
        $.blockUI({
            message: 'Please Wait..',
            css: {
                border: 'none',
                padding: '15px',
                backgroundColor: '#fff',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                color: '#000'
            }
        });
    }
    function writeError(control, msg) {
        var err_msg = '<div class="alert-message error"><a class="close" href="#">×</a><p>' + msg + '</p></div>';
        $('#' + control).html(err_msg);
    }
    $("#modalDocNumScheme").dialog({
        autoOpen: false,
        modal: true,
        width: 'auto',
        buttons: {
            "Save": function () {
                if (CheckCurrnum()) {
                    
                    $("#document-numering-form").submit();

                    Begin();
                }

            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });
    function getRequest(url) {
        $.ajax({
            url: url,
            context: document.body,
            success: function (data) {
                $('#modalDocNumScheme .block').html(data);
                $(this).addClass("done");
                $("#modalDocNumScheme").dialog('open');
                $.unblockUI();
            },
            error: function (err) {
                writeError('msgErrorNewLocationDetails', err);
            }
        });
    }

    $('a.addDocNumScheme').live('click', function () {
        var url = '@Url.Action("StudentRegistrationNumberingAdd", "Setup")';
        Begin();
        getRequest(url);

        return false;
    });
    $('a.editDocNumScheme').live('click', function () {
        var id = $(this).attr("data-id");
        var url = '@Url.Action("StudentRegistrationNumberingEdit", "Setup")/' + id;
        Begin();
        getRequest(url);

        return false;
    });

    $('#saveDocNumScheme').live('click', function () {
        $("#document-numering-form").submit();
        Begin();
    });
    function CheckCurrnum() {
        var startno = parseInt($("#StudentRegistrationNumbering_DocStartNo").val());
        var endno = parseInt($("#StudentRegistrationNumbering_DocEndNo").val());
        var currno = parseInt($("#StudentRegistrationNumbering_DocCurrNo").val());
        //alert(startno); alert(endno); alert(currno);
        if (startno > endno) {
            alert("End Number Must Be Greater Than Start Number");
            e.preventDefault();
            return false;
        }
        if (startno <= currno && currno <= endno) {
            //alert(1);
            return true;
        } else {
            alert("Current Number Must be Between Start Number and End Number");
            return false;
        }

    }
    function OnComplete() {
        //$('#modalDocNumScheme .block').load("/Setup/StudentRegistrationNumberingAdd");
       // $("#DocNumScheme-list").load("/Setup/StudentRegistrationNumbering");
        $.unblockUI();
    }
    function OnCompleteEdit() {
        $('#modalDocNumScheme').dialog("close");
        $("#DocNumScheme-list").load("/Setup/StudentRegistrationNumbering");
        $.unblockUI();
    }

</script>
