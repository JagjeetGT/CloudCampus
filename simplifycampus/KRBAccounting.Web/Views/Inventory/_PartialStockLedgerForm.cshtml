@model KRBAccounting.Web.ViewModels.Inventory.StockLedgerFormViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@*@Html.CustomValidationSummary("Login was unsuccessful. Please correct the errors and try again.")*@
@using (Ajax.BeginForm("StockLedger", "Inventory", new { controller = "Inventory" }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "report", OnComplete = "$('#modalReportForm').modal('hide');" }, new { @class = "form-horizontal", id = "ledger-report-form" }))
{
    <div style="width:500px">
        <div class="clearfix">
        </div>
        <div class="lag">
            <label class="label-90">
                Start Date</label>
            <span class="field" style="width: 100px;">
                @Html.TextBoxFor(m => m.StartDate, new { @class = "input-100" })
                @Html.ValidationMessageFor(m => m.StartDate)
            </span>
        </div>
        <div class="lag">
            <label class="label-90">
                Summary</label>
            <span class="field">
                @Html.CheckBoxFor(m => m.Summary)
            </span>
        </div>
        <div class="lag">
            <label class="label-90">
                With Value</label>
            <span class="field">
                @Html.CheckBoxFor(m => m.WithValue)
            </span>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag endDate">
            <label class="label-90">
                End Date</label>
            <span class="field" style="width: 100px;">
                @Html.TextBoxFor(m => m.EndDate, new { @class = "input-100" })
                @Html.ValidationMessageFor(m => m.EndDate)
            </span>
        </div>
        <div class="lag">
            <label class="label-90">
                Zero Balance</label>
            <span class="field">
                @Html.CheckBoxFor(m => m.ZeroBalance)
            </span>
        </div>
        <div class="lag">
            <label class="label-90">
                All Product</label>
            <span class="field">
                @Html.CheckBoxFor(m => m.SelectAll)
            </span>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag">
            <label class="label-90">
                Unit</label>
            <span class="field">
                @Html.DropDownListFor(m => m.UnitId, Model.UnitList, new { @class = "input-100" })
            </span>
        </div>
       
        <div class="lag">
            @if (@Model.SystemControl.DateType == 1)
            {
                <label class="label-90">
                    Miti
                </label>
            }
            else
            {
                <label class="label-90">
                    Date
                </label>
            }
            <span class="field">
                @Html.CheckBoxFor(x => x.DateShow)
            </span>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag IsGodown">
            <label class="label-90">
                Godown</label>
            <span class="field">
                @Html.CheckBoxFor(m => m.Godown)
            </span>
            <div class="lag GodownList" style="display: none">
                <label class="label-90">
                    Godown List</label>
                <span class="field">
                    @Html.DropDownListFor(m => m.GodownId, Model.GodownList.Select(g => new SelectListItem { Text = g.Name, Value = g.Id.ToString() }), new { Multiple = "multiple", style = "height:100px !important;" })
                </span>
            </div>
        </div>
        <div class="lag batch">
            <label class="label-90">
                Batch</label>
            <span class="field">
                @Html.CheckBoxFor(m => m.Batch)
            </span>
        </div>
    </div>
    <div class="clearfix">
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
//        $("#StartDate").nepDateTimePicker({
//            dateFormat: "mm/dd/yy",
//            defaultDate: "+1w",
//            changeMonth: true,
//            changeYear: true,
//            numberOfMonths: 1,
//            minDate: '@Model.FiscalYear.StartDate.ToShortDateString()',
//            maxDate: '@Model.FiscalYear.EndDate.ToShortDateString()',
//            onSelect: function () {
//                $("#StartDate").datepicker("option", "minDate", '@Model.FiscalYear.StartDate.ToShortDateString()');
//            }
//        });

//        $("#EndDate").nepDateTimePicker({
//            dateFormat: "mm/dd/yy",
//            defaultDate: "+1w",
//            changeMonth: true,
//            changeYear: true,
//            numberOfMonths: 1,
//            minDate: $("#StartDate").val(),
//            maxDate: '@Model.FiscalYear.EndDate.ToShortDateString()',
//            onSelect: function () {
//                $("#EndDate").datepicker("option", "minDate", $("#StartDate").val());
//            }
        //        });
        var dateType = @Model.SystemControl.DateType.ToString();
        if (dateType == "1") {
            $("#StartDate,#EndDate" ).mask("99/99/9999");
            $("#StartDate,#EndDate" ).live("blur", function() {
                var validDate = isDate($(this).val(), "/", 1, 0, 2);
                if (!validDate) {
                    $($(this).addClass("error"));
                } else {
                    $($(this).removeClass("error"));
                }
            });
        } else {
            $("#StartDate,#EndDate").mask("9999/99/99");
            $("#StartDate,#EndDate").live("blur", function() {
                var date = $(this).val();
                var validDate = isNepaliDate(date);
                if (!validDate) {
                    $($(this).addClass("error"));
                } else {
                    $($(this).removeClass("error"));
                }
            });
        }

    });
    
</script>
