@model KRBAccounting.Web.ViewModels.ARAP.OutStandingFromViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@*@Html.CustomValidationSummary("Login was unsuccessful. Please correct the errors and try again.")*@
@using (Ajax.BeginForm("OutStandingSupplier", "ARAP", new { controller = "ARAP" }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "report", OnComplete = "$('#modalReportForm').modal('hide');" }, new { @class = "form-horizontal", id = "ledger-report-form" }))
{
    <div>
        <div class="clearfix">
        </div>
         <div class="lag">
            <label class="label-90">
                AsOn Date</label>
            <span class="field" style="width: 100px;">
                @Html.TextBoxFor(m => m.AsOnDate)
                @Html.ValidationMessageFor(m => m.AsOnDate)
            </span>
        </div>
       @* <div class="lag">
            <label class="label-90">
                Start Date</label>
            <span class="field">
                @Html.TextBoxFor(m => m.StartDate)
                @Html.ValidationMessageFor(m => m.StartDate)
            </span>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag endDate">
            <label class="label-90">
                End Date</label>
            <span class="field">
                @Html.TextBoxFor(m => m.EndDate)
                @Html.ValidationMessageFor(m => m.EndDate)
            </span>
        </div>*@
        <div class="lag">
            <label class="label-90">
                Doc Agent</label>
            <span class="field">
                @Html.CheckBoxFor(m => m.DocAgent, new {disabled="true"})
            </span>
        </div>
        <div class="clearfix">
        </div>  
        <div class="lag">
            <label class="label-90">
                Group By</label>
            <span class="field">
                @Html.DropDownListFor(m => m.GroupBy, Model.GroupByList, new { @class = "input-100" })</span>
        </div>
        <div class="lag">
            <label class="label-90">
                All Ledgers</label>
            <span class="field">
                @Html.EditorFor(m => m.AllLedger)
            </span>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag">
            @if (@Model.SystemControl.DateType == 1)
            {
                <label class="label-90">
                    Miti
                </label>
            }
            else
            {
                <label class="label-90">
                    Date
                </label>
            }
            <span class="field">
                @Html.CheckBoxFor(x => x.DateShow)
            </span>
        </div>
    </div>
    <div class="clearfix">
    </div>
}
<script type="text/javascript">
    
         $(document).ready(function () {
         var dateType = @Model.SystemControl.DateType;
     if(dateType=="1") {
            $("#StartDate").mask("99/99/9999");
            $("#StartDate").live("blur", function() {
                var validDate = isDate($(this).val(),"/",1,0,2);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
            }
    else {
            $("#StartDate").mask("9999/99/99");
            $("#StartDate").live("blur", function() {
                var date = $(this).val();
                var validDate=isNepaliDate(date);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
        }
              if(dateType=="1") {
            $("#AsOnDate").mask("99/99/9999");
            $("#AsOnDate").live("blur", function() {
                var validDate = isDate($(this).val(),"/",1,0,2);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
            }
    else {
            $("#AsOnDate").mask("9999/99/99");
            $("#AsOnDate").live("blur", function() {
                var date = $(this).val();
                var validDate=isNepaliDate(date);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
        }
              if(dateType=="1") {
            $("#EndDate").mask("99/99/9999");
            $("#EndDate").live("blur", function() {
                var validDate = isDate($(this).val(),"/",1,0,2);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
            }
    else {
            $("#EndDate").mask("9999/99/99");
            $("#EndDate").live("blur", function() {
                var date = $(this).val();
                var validDate=isNepaliDate(date);
               if(!validDate) {
                   $($(this).addClass("error"));
               }
                else {
                   $($(this).removeClass("error"));
               }
            });
        }
         }); 
//        $("#AsOnDate").nepDateTimePicker({
//            dateFormat: "MM/dd/yyyy",
//            defaultDate: "+1w",
//            changeMonth: true,
//            changeYear: true,
//            numberOfMonths: 1,
//            minDate :'@Model.FiscalYear.StartDate',
//           maxDate:'@Model.FiscalYear.EndDate',
//            onSelect: function () {
//                $("#AsOnDate").datepicker("option", "minDate", '@Model.FiscalYear.StartDate');
//            }
//        });
//        $("#StartDate").nepDateTimePicker({
//            dateFormat: "MM/dd/yyyy",
//            defaultDate: "+1w",
//            changeMonth: true,
//            changeYear: true,
//            numberOfMonths: 1,
//            onSelect: function (selectedDate) {
//                $("#StartDate").datepicker("option", "minDate", selectedDate);
//            }
//        });
//        $("#EndDate").nepDateTimePicker({
//            dateFormat: "MM/dd/yyyy",
//            defaultDate: "+1w",
//            changeMonth: true,
//            changeYear: true,
//            numberOfMonths: 1,
//            onSelect: function (selectedDate) {
//                $("#to").datepicker("option", "minDate", selectedDate);
//            }
//        });
//    });
</script>
