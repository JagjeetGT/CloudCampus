@using System.Globalization
@using KRBAccounting.Enums
@using KRBAccounting.Service
@using KRBAccounting.Service.Helpers
@model KRBAccounting.Web.ViewModels.Report.ReportStudentMonthlyBillReportViewModel
@{
    decimal drGrandTotal = 0;
    decimal crGrandTotal = 0;
    decimal grandTotalBalance = 0;
    decimal totalOpening = 0;
}
<link rel="stylesheet" type="text/css" media="print" href="/Content/Style.css" />
<link rel="stylesheet" type="text/css" media="print" href="/Content/bootstrap/css/bootstrap.css" />
<div class="clearfix">
</div>
<div class="ReportHeader" style="text-align: center">
    @Html.Partial("_PartialReportHeader", Model.ReportHeader)
</div>
<div class="ReportList">
    <table class="listpopup" cellspacing="0" cellpadding="0" width="100%">
        <thead>
            <tr>
                <th>
                    Date
                </th>
                <th>
                    Voucher No.
                </th>
                <th>
                    Month
                </th>
                @*<th>
                    Class
                </th>
                <th>
                    Std.Code
                </th>*@
                <th width="30%">
                    Student Name
                </th>
                <th>
                    Amount
                </th>
                @*<th>
                    Narration
                </th>*@
            </tr>
        </thead>
        @foreach (var item in Model.BillStudents)
        {
            var month = new DateTime(item.Year, item.Month, 1).ToString("MMM", System.Globalization.CultureInfo.InvariantCulture);

            var data = UtilityService.GetStudentRegistrationDetail(item.StudentId);
            <tr style="color: rgb(51, 90, 133)" align="center">
                
                <td>
                  @item.CreatedMiti B.S.(@item.CreatedDate.ToShortDateString() A.D.)


                </td>
                <td>
                    @item.BillNo
                </td>
                <td>
                    @item.YearMiti @Enum.GetName(typeof(KRBAccounting.Enums.NepaliMonth), item.MonthMiti)
                    (@item.Year @month)
                     @*@{
            var date = item.Month + "/1/" + item.Year;
          
                   }
                    @if (Model.SystemControl.DateType == 1)
                    {
                       @item.Year  @Convert.ToDateTime(date).ToString("MMMM")
                    }
                    else
                    {
                       @item.YearMiti  @Enum.GetName(typeof(KRBAccounting.Enums.NepaliMonth), item.MonthMiti)
                    }*@
                    
                   
                       @*@item.YearMiti @Enum.GetName(typeof(KRBAccounting.Enums.NepaliMonth), item.MonthMiti)
                (@item.Year @month)*@
                </td>
                @*<td>
                    @if (data.StudentRegistration.Class != null)
                    {
                        @data.StudentRegistration.Class.Description
                    }
                </td>
                <td>
                    @if (item.ScStudentinfo != null)
                    {
                        @item.ScStudentinfo.StdCode
                    }
                </td>*@
                <td>
                    @if (item.ScStudentinfo != null)
                    {
                        @item.ScStudentinfo.StuDesc
                    }
                    @if (item.ScStudentinfo != null)
                    {
                        @item.ScStudentinfo.StdCode
                    }
                    @if (data.StudentRegistration.Class != null)
                    {
                        @data.StudentRegistration.Class.Description
                    }
                    Roll: @data.RollNo
                    @if (data.Section != null)
                    {
                        <text>Sec: </text> @data.Section.Description
                    }
                </td>
                @* <td>@data.RollNo
                </td>*@
                <td>
                 
                </td>
                @*<td>
                    @item.Remarks
                </td>*@
            </tr>
      
                    foreach (var c in item.MonthlyBills.Where(x => x.FeeAmount != 0))
                    {
                        var studentfee = UtilityService.GetStudentFeeTerm(item.StudentId, c.FeeItemId, c.ScMonthlyBillStudent.AcademicYearId);
            <tr align="center">
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
            
                @{
                        var scStudentFeeTerm = studentfee.FirstOrDefault();
                }
                <td>
                    @if (scStudentFeeTerm != null)
                    {
                        @scStudentFeeTerm.StudentFeeRateDetail.FeeItem.Description
                    }
                    else
                    {
                        <text> @c.FeeItem.Description</text>
                    }
                </td>
                <td>
                    @if (scStudentFeeTerm != null)
                    {
                        @scStudentFeeTerm.StudentFeeRateDetail.FeeRate
                    }
                    else
                    {
                        <text> @c.FeeAmount</text>
                    }
                </td>
                @*<td>
                </td>*@
            </tr>
                    foreach (var i in studentfee)
                    {
            <tr>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                
                <td>
                    <p style="float: left; width: 135px; padding-left: 65px; margin: 0px;text-align:center">@i.FeeTerm.Description</p>
                    <span>@i.LocalRate %</span>
                </td>
                <td style="text-align:center">
                    @i.LocalAmount
                </td>
                @*<td>
                </td>*@
            </tr>
                    }
                    }
            if (@item.MonthlyBills.Sum(x => x.EducationTaxAmount) != 0)
            {
                <tr>
                    <td>
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                 
                    <td align="center">
                        Education Tax 1%
                 
                    </td>
                    <td style="text-align:center">
                        @item.MonthlyBills.Sum(x => x.EducationTaxAmount)
                    </td>
                    @*<td>
    </td>*@
                </tr>
            }
            <tr style="font-weight: bold">
                <td colspan="4" align="center" style="text-align:center">
                    Student Total
                </td>
                <td style="text-align:center">
                    @item.Amount
                </td>
                @*<td></td>*@
            </tr>
                    grandTotalBalance += item.Amount;
        }
        @if (Model.BillStudents.Any())
        {
            <tr style="font-weight: bold">
                <td colspan="4" align="center">
                    Grand Total
                </td>
                <td align="center" style="text-align:center">
                    @grandTotalBalance
                </td>
            </tr>
        }
    </table>
</div>
