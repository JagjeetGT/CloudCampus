@model KRBAccounting.Domain.Entities.PyAllowanceMaster
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@using (Ajax.BeginForm("AllowanceMasterEdit", "Payroll", new { controller = "Payroll" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "successEdit" }, new { @class = "form-horizontal from-custom online-form", id = "form-id" }))
{
    @Html.HiddenFor(x => x.Id)    @Html.HiddenFor(x => x.CreatedBy)@Html.HiddenFor(x => x.CreatedOn)
    @Html.HiddenFor(x=>x.FiscalYearId)  @Html.HiddenFor(x => x.BranchId)
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Name</label>
            <div class="field">
                @Html.TextBoxFor(m => m.Name, new { @class = "input-100 input", entermsg = "Enter Name" })
                @Html.ValidationMessageFor(m => m.Name)
            </div>
        </div>
        <div class="stack">
            <label class="label-90">
                Type</label>
            <div class="field">
                @Html.DropDownListFor(m => m.Type, Model.AllowanceType, new { @class = "input-100 input", entermsg = "Enter Type" })
                @Html.ValidationMessageFor(m => m.Type)
            </div>
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Is Flat</label>
            <div class="field">
                @Html.EditorFor(m => m.IsFlat, new { @class = "input-100 input", entermsg = "Enter Year" })
                @Html.ValidationMessageFor(m => m.IsFlat)
            </div>
        </div>
        <div class="stack">
            <label class="label-90 percent-value">
                Value</label>
            <div class="field">
                @Html.TextBoxFor(m => m.Value, new { @class = "input-100 input", entermsg = "Enter Value" })
                @Html.ValidationMessageFor(m => m.Value)
            </div>
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                IsAnnual</label>
            <div class="field">
                @Html.EditorFor(m => m.IsAnnual, new { @class = "input-100 input", entermsg = "Enter IsAnnual" })
                @Html.ValidationMessageFor(m => m.IsAnnual)
            </div>
        </div>
        <div class="stack">
            <label class="label-90">
                Status</label>
            <div class="field">
                @Html.EditorFor(m => m.Status, new { @class = "input-100 input", entermsg = "Enter Status" })
                @Html.ValidationMessageFor(m => m.Status)
            </div>
        </div>
    </div>
    
}
<script>
    $(document).ready(function () {
        var IsFlat = '@Model.IsFlat';
     if(IsFlat == "True") 
     {
         $(".percent-value").html("Value");
           
        } else {
             $(".percent-value").html("Percentage");
        }
    })
</script>
