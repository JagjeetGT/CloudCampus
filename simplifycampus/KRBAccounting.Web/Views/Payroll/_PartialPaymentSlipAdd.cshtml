@model KRBAccounting.Web.ViewModels.Payroll.PayrollPaymentSlipViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@using (Ajax.BeginForm("PaymentSlipAdd", "Payroll", new { controller = "Payroll" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnComplete" }, new { @class = "form-horizontal from-custom online-form", id = "form-id" }))
{
    <div id="error-msg">
    </div>
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Payment Slip No.</label>
            <div class="field">
                @Html.TextBoxFor(m => m.SlipNo, new { @class = "input-100 input", entermsg = "Enter Name" })
                @Html.ValidationMessageFor(m => m.SlipNo)
            </div>
        </div>
    </div>
@*<div class="lag">
     <div class="stack">
         <label class="label-90">
             Created By</label>
         <div class="field">
             @Html.TextBoxFor(m => m.PaymentSlip.CreatedBy, new { @class = "input-100 input", entermsg = "Enter Name", @readonly = "readnly" })
             @Html.ValidationMessageFor(m => m.CreatedBy)
         </div>
     </div>
     </div>*@
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Year</label>
            <div class="field">
                @Html.TextBoxFor(m => m.Year, new { @class = "input-100 input", entermsg = "Enter Name", @readonly = "readnly" })
                @Html.ValidationMessageFor(m => m.Year)
            </div>
        </div>
        <div class="stack">
            <label class="label-90">
                Month</label>
            <div class="field">
                @Html.DropDownListFor(m => m.Month, Model.MonthList, new { @class = "input-100 input", entermsg = "Enter Type" })
                @Html.ValidationMessageFor(m => m.Month)
            </div>
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Department</label>
            <div class="field">
                @Html.DropDownListFor(m => m.DepartmentId, Model.DepartmentList, new { @class = "input-100 input", entermsg = "Enter Type" })
                @Html.ValidationMessageFor(m => m.DepartmentId)
            </div>
        </div>
    </div>
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Employee</label>
            <div class="field">
                @Html.DropDownListFor(m => m.EmployeeId, Model.EmployeeList, new { @class = "input-100 input", entermsg = "Enter Name" })
                @Html.ValidationMessageFor(m => m.EmployeeId)
            </div>
        </div>
    </div>
    
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Ledger</label>
            <div class="field">
                @Html.HiddenFor(m => m.Ledger)
                <input type="text" readonly="readonly" class="LedgerName input-100 input" />
            </div>
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <div class="stack">
            <label class="label-90 bal-label">
                Balance Amount</label>
            <div class="field">
                @Html.TextBoxFor(m => m.NetAmount, new { @class = "input-100 input", entermsg = "Enter Name", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.NetAmount)
            </div>
        </div>
    </div>
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Payment Amount</label>
            <div class="field">
                @Html.TextBoxFor(m => m.PaymentAmount, new { @class = "input-100 input", entermsg = "Enter Name" })
                @Html.ValidationMessageFor(m => m.PaymentAmount)
            </div>
        </div>
    </div> <div class="clearfix">
    </div>
    <div class="lag">
        <div class="stack">
            <label class="label-90">
                Remark</label>
            <div class="field">
                @Html.TextAreaFor(m => m.Remarks, new { @class = "input-100 input", entermsg = "Enter Name" })
                @Html.ValidationMessageFor(m => m.Remarks)
            </div>
        </div>
    </div>
    
    
}
