@model KRBAccounting.Web.ViewModels.Management.CompanyViewModel
@{
    ViewBag.Title = "Company Management";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var date = Model.Company.StartDate.ToString("dd/MM/yyyy");
    var dates = Model.Company.EndDate.ToString("dd/MM/yyyy");
}
<script src="../../Content/KendoUI/kendo.core.min.js" type="text/javascript"></script>
<script src="../../Content/KendoUI/kendo.upload.min.js" type="text/javascript"></script>
<link href="../../Content/KendoUI/kendo.kendo.min.css" rel="stylesheet" type="text/css" />
<div class="workplace">
    <div class="row-fluid">
        <div class="span12">
            <div class="head">
                <div class="isw-grid">
                </div>
                <h1>
                    Company Setting</h1>
                <div class="clear">
                </div>
            </div>
            <div class="block-fluid">
                <div class="row-form">
                    @using (Html.BeginForm("Company", "Management", FormMethod.Post, new { @class = "form-horizontal form-custom", id = "Company-form" }))
                    {
                        @Html.HiddenFor(x => x.Company.LogoGuid)
                        @Html.HiddenFor(x => x.Company.LogoExt)
                        <div id="company-info">
                            @Html.HiddenFor(x => x.Company.Id)
                            @Html.HiddenFor(x => x.Company.CreatedDate)
                            @Html.HiddenFor(x => x.Company.ParentId)
                            <fieldset>
                                <div class="lag">
                                    <span class="stack">
                                        <label class="label-100">
                                            Initial</label>
                                        <span class="field">
                                            @Html.TextBoxFor(m => m.Company.Initial, new { @class = "input-245 input" })
                                            @Html.ValidationMessageFor(m => m.Company.Initial)
                                        </span></span><span class="stack">
                                            <label class="label-100">
                                                Name</label>
                                            <span class="field">
                                                @Html.TextBoxFor(m => m.Company.Name, new { @class = "input-245 input" })
                                                @Html.ValidationMessageFor(m => m.Company.Name)
                                            </span></span>
                                </div>
                                <div class="lag">
                                    <span class="stack">
                                        <label class="label-100">
                                            Country</label>
                                        <span class="field">
                                            @Html.TextBoxFor(m => m.Company.Country, new { @class = "input-245 input" })
                                            @Html.ValidationMessageFor(m => m.Company.Country)
                                        </span></span><span class="stack">
                                            <label class="label-100">
                                                State</label>
                                            <span class="field">
                                                @Html.TextBoxFor(m => m.Company.State, new { @class = "input-245 input" })
                                                @Html.ValidationMessageFor(m => m.Company.State)
                                            </span></span>
                                </div>
                                <div class="lag">
                                    <span class="stack">
                                        <label class="label-100">
                                            City</label>
                                        <span class="field">
                                            @Html.TextBoxFor(m => m.Company.City, new { @class = "input-245 input" })
                                            @Html.ValidationMessageFor(m => m.Company.City)
                                        </span></span><span class="stack">
                                            <label class="label-100">
                                                Address</label>
                                            <span class="field">
                                                @Html.TextBoxFor(m => m.Company.Address, new { @class = "input-245 input" })
                                                @Html.ValidationMessageFor(m => m.Company.Address)
                                            </span></span>
                                </div>
                                <div class="lag">
                                    <span class="stack">
                                        <label class="label-100">
                                            Phone No</label>
                                        <span class="field">
                                            @Html.TextBoxFor(m => m.Company.PhoneNo, new { @class = "input-245 input" })
                                            @Html.ValidationMessageFor(m => m.Company.PhoneNo)
                                        </span></span><span class="stack">
                                            <label class="label-100">
                                                Fax</label>
                                            <span class="field">
                                                @Html.TextBoxFor(m => m.Company.Fax, new { @class = "input-245 input" })
                                                @Html.ValidationMessageFor(m => m.Company.Fax)
                                            </span></span>
                                </div>
                                <div class="lag">
                                    <span class="stack">
                                        <label class="label-100">
                                            Email</label>
                                        <span class="field">
                                            @Html.TextBoxFor(m => m.Company.Email, new { @class = "input-245 input" })
                                            @Html.ValidationMessageFor(m => m.Company.Email)
                                        </span></span><span class="stack">
                                            <label class="label-100">
                                                Pan No</label>
                                            <span class="field">
                                                @Html.TextBoxFor(m => m.Company.PanNo, new { @class = "input-245 input" })
                                                @Html.ValidationMessageFor(m => m.Company.PanNo)
                                            </span></span>
                                </div>
                                <div class="lag">
                                    <span class="stack">
                                        <label class="label-100">
                                            Tax Invoice</label>
                                        <span class="field">
                                            @Html.TextBoxFor(m => m.Company.TaxInvoice, new { @class = "input-245 input" })
                                            @Html.ValidationMessageFor(m => m.Company.TaxInvoice)
                                        </span></span>
                                </div>
                                <div class="lag">
                                    <span class="stack">
                                        <label class="label-100">
                                            Start Date</label>
                                        <span class="field">
                                            @Html.HiddenFor(m => m.Company.StartMiti)
                                            @Html.HiddenFor(m => m.Company.StartDate, new { displayId = "DisplayStartDate" })
                                            @Html.TextBoxFor(m => m.DisplayStartDate, new
                                                    {
                                                        @class = "input-90 input",
                                                        entermsg = "Enter Date.",
                                                        miti = Model.SystemControl.DateType,
                                                        dateId = "Company_StartDate",
                                                        displayId = "DisplayStartDate",
                                                        mitiId = "Company_StartMiti"
                                                    })
                                            @Html.ValidationMessageFor(m => m.Company.StartDate)
                                            <input type="hidden" id="currDate" value="@date"/>
                                        </span></span><span class="stack">
                                            <label class="label-100">
                                                End Date</label>
                                            <span class="field">
                                                @Html.HiddenFor(m => m.Company.EndMiti)
                                                @Html.HiddenFor(m => m.Company.EndDate, new { displayId = "DisplayEndDate" })
                                                @Html.TextBoxFor(m => m.DisplayEndDate, new
                                                  {
                                                      @class = "input-90 input",
                                                      entermsg = "Enter Date.",
                                                      miti = Model.SystemControl.DateType,
                                                      dateId = "Company_EndDate",
                                                      displayId = "DisplayEndDate",
                                                      mitiId = "Company_EndMiti"
                                                  })
                                                @Html.ValidationMessageFor(m => m.Company.EndDate)
                                                <input type="hidden" id="currDates" value="@dates"/>
                                            </span></span>
                                </div>
                                <div class="lag">
                                    <span class="stack">
                                        <label class="label-100">
                                            Logo</label>
                                        <span class="field">
                                            <div class="image">
                                                <img src="@KRBAccounting.Service.UtilityService.GetLogo(Model.Company.LogoGuid, Model.Company.LogoExt)" width="60"/>
                                            </div>
                                            <input name="attachments" id="attachments" type="file" />
                                        </span></span>
                                </div>
                            </fieldset>
                            <div class="clearfix">
                            </div>
                            <input type="submit" value="Save Changes" class="btn btn-info" />
                        </div>
                         
                    }
                    <div class="clearfix">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="dr">
        <span></span>
    </div>
    <div class="row-fluid">
        <div class="span12">
            <div class="head">
                <div class="isw-grid">
                </div>
                <h1>
                    Branch List</h1>
                <ul class="buttons">
                    <li><a href="#" class="isw-plus addBranch"></a></li>
                </ul>
                <div class="clear">
                </div>
            </div>
            <div class="block">
                <div id="branches">
                    <ul>
                        @foreach (var branch in Model.Branches)
                        {
                            <li>
                                <p>@Html.ActionLink(@branch.Name, "Branch", new { id = branch.Id })
                                </p>
                                <p>@branch.Address , @branch.City , @branch.State</p>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="dialog" id="modalBranchAdd" style="display: none;" title="Branch(+)">
    <div class="block">
    </div>
</div>
<script type="text/javascript">
    $("#modalBranchAdd").dialog({
        autoOpen: false,
        modal: true,
        width: 'auto',
        buttons: {
            "Ok": function () {
                $("#branch-form").submit();
                $(this).dialog("close");
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

     $(document).ready(function () {
        var dateType = @Model.SystemControl.DateType;
        var date;
        var nepDate;
        if(dateType==1) {
            date = $("#currDate").val();
            nepDate = convertToNepali(date);
        } else {
            date = $("#currDate").val();
            date = convertToNepali(date);
            nepDate = date;
        }
        $("#Company_StartMiti").val(nepDate);
        $("#DisplayStartDate").val(date);
       // $("#Company_StartDate").nepNoBackDatePicker();
    });

     $(document).ready(function() {
         var dateType = @Model.SystemControl.DateType;
         var date;
         var nepDate;
         if (dateType == 1) {
             date = $("#currDates").val();
             nepDate = convertToNepali(date);
         } else {
             date = $("#currDates").val();
             date = convertToNepali(date);
             nepDate = date;
         }
         $("#Company_EndMiti").val(nepDate);
         $("#DisplayEndDate").val(date);
         //$("#Company_EndDate").nepNoBackDatePicker();


         function getRequest(url) {
             $.ajax({
                 url: url,
                 context: document.body,
                 success: function(data) {
                     $('#modalBranchAdd .block').html(data);
                     $(this).addClass("done");
                     $("#modalBranchAdd").dialog('open');
                     $.unblockUI();

                 }
             });
         }

         $('.addBranch').live('click', function() {
            
             var url = '@Url.Action("BranchAdd", "Management")';
             getRequest(url);
             return false;
         });

         $('#saveBranch').live('click', function() {
             $("#branch-form").submit();
         });

         function success(data) {
             if (data == "true") {
                 window.location.reload(true);
             }
         }
         });
         $(document).ready(function() {
             //kendo ui plugin
             //for uploading files
             $("#attachments").kendoUpload({
                 upload: onUpload,
                 remove: onRemove,
                 multiple: true,
                 async: {
                     saveUrl: ('/Management/UploadImages'),
//                     removeUrl: ('/remove-images/UserImages'),
                     autoUpload: true
                 },

                 success: function(data) {

                     if (data.response.success != null) {
                         alert(data.response.success);
                         //window.location.reload(true);

                     }
                     var logoGuid = data.response.guid;
                     if (logoGuid.toString() == '') {
                         alert('upload failed please try again');
                     } else {
                         var name = "hddimage" + data.response.filename;
                         var classname = "hddimage" + data.response.filename.replace('.', '');
                         $('#Company-form').append('<input type="hidden" class="' + classname + '" value="' + logoGuid + '" name="' + name + '" id="' + name + '" />');
                         $("#Company_LogoGuid").val(logoGuid);
                         $("#Company_LogoExt").val(data.response.ext);
                     }
                 }
             });
         });
     

     function onUpload(e) {
        var files = e.files;
        // Check the extension of each file and abort the upload if it is not .jpg
        $.each(files, function () {
            var ext = this.extension.toUpperCase();
            if (ext == ".JPG" || ext == ".PNG" || ext == ".JPEG") {

            } else {
                $("#kendoWindow").dialog();
                //alert("Only .jpg, .png and .jpeg files can be uploaded");
                e.preventDefault();
            }
        });

    }
     function onRemove(e) {
        for (var i = 0; i < e.files.length; i++) {
            var data = getGuid(e.files[i].name);
            e.files[i].name = data;
        }
    }
    
</script>
