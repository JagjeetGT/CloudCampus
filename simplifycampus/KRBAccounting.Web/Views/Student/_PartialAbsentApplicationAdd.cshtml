@model KRBAccounting.Domain.Entities.ScAbsentApplication
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@{
    var list = string.Empty;
    foreach (var item in Model.ReasionList)
    {
        if (list == string.Empty)
        {
            list = item;
        }
        else
        {
            list += "," + item + '\n';
        }

    }
                                                                                                              
}
@using (Ajax.BeginForm("AbsentApplicationAdd", "Student", new { controller = "Student" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnComplete" }, new { @class = "form-horizontal from-custom online-form", id = "leaveapplicatiom-form-id" }))
{
    
   

    <div class="lag">
        <label class="label-90">
            Class</label>
        <div class="field">
            @Html.DropDownListFor(x => x.ClassId, Model.ClassList, new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.ClassId)
        </div>
        <label class="label-70">
            Section</label>
        <div class="field">
            @Html.DropDownListFor(x => x.SectionId, Model.SectionList, new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.SectionId)
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-70">
            Student</label>
        <div class="field">
            @Html.HiddenFor(x => x.StudentId)
            @Html.ValidationMessageFor(m => m.StudentId)
            <input type="text" class="modallink input-305" href="@Url.Action("GetStudentClassIdSectionId", "School")" parent="ClassId" parentnext="SectionId" valueId="StudentId" id="student-id" title="Student" entermsg = "Press F1 for choosing existing cash/bank list." />
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <fieldset>
            <legend>Date From</legend><span class="stack">
                <label class="label-100">
                    (B.S.)(YYYY-MM-DD)</label>
                <span class="field">@Html.TextBoxFor(m => m.MitiFrom, new { @class = "input-100 input", entermsg = "Enter DBOMiti" })
                    @Html.ValidationMessageFor(m => m.MitiFrom) </span></span>
            <div class="clearfix">
            </div>
            <span class="stack">
                <label class="label-100">
                    (A.D.)(MM-DD-YYYY)</label>
                <span class="field">@Html.DateTextBoxFor(m => m.DateFrom, new { @class = "input-100 input", entermsg = "Enter DBO" })
                    @Html.ValidationMessageFor(m => m.DateFrom) </span></span>
        </fieldset>
        <fieldset>
            <legend>Date To</legend><span class="stack">
                <label class="label-100">
                    (B.S.)(YYYY-MM-DD)</label>
                <span class="field">@Html.TextBoxFor(m => m.MitiTo, new { @class = "input-100 input", entermsg = "Enter DBOMiti" })
                    @Html.ValidationMessageFor(m => m.MitiTo) </span></span>
            <div class="clearfix">
            </div>
            <span class="stack">
                <label class="label-100">
                    (A.D.)(MM-DD-YYYY)</label>
                <span class="field">@Html.DateTextBoxFor(m => m.DateTo, new { @class = "input-100 input", entermsg = "Enter DBO" })
                    @Html.ValidationMessageFor(m => m.DateTo) </span></span>
        </fieldset>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-90">
            Confirm</label>
        <div class="field">
            @Html.DropDownListFor(x => x.IsConfirm, Model.YesNoList, new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.IsConfirm)
        </div>
        <label class="label-90">
            Status</label>
        <div class="field">
            @Html.DropDownListFor(x => x.Status, Model.HalfFull, new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.Status)
        </div>
        <label class="label-90">
            Reason</label>
        <div class="field">
            @Html.TextBoxFor(m => m.Reason, new { @class = "input-170 input", entermsg = "Enter Schedule" })
            @Html.ValidationMessageFor(m => m.Reason)
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-90">
            Remarks</label>
        <div class="field">
            @Html.TextAreaFor(m => m.Remarks, new { @class = "input-450 input", entermsg = "Enter Remarks" })
            @Html.ValidationMessageFor(m => m.Remarks)
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-90">
            Application</label>
        <div class="field">
            @Html.CheckBoxFor(m => m.IsApplication, new { @class = "input-15 input", entermsg = "Enter Remarks" })
            @Html.ValidationMessageFor(m => m.IsApplication)
        </div>
    </div>
}
<script type="text/javascript">

    $(document).ready(function () {
        $("#leaveapplicatiom-form-id #MitiTo , #leaveapplicatiom-form-id #MitiFrom").mask('9999/99/99');
        $("#leaveapplicatiom-form-id #DateTo ,#leaveapplicatiom-form-id #DateFrom").mask('99/99/9999');
        $(function () {
           
            var availableTags = [ @foreach (var item in Model.ReasionList)
                                  {
        
          <text> "@item",</text>

                                  } ];
            $("#Reason").autocomplete({
                source: availableTags
            });
        });

    }); </script>
<style>
    .ui-menu
    {
        z-index: 1003 !important;
    }
  
</style>
