@model KRBAccounting.Domain.Entities.ScAbsentApplication
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@*@{
   
    var Startdate = Model.StartDate.ToString("dd/MM/yyyy");
    var Enddate = Model.EndDate.ToString("dd/MM/yyyy");
}*@
@using (Ajax.BeginForm("AbsentApplicationEdit", "Student", new { controller = "Student" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "successEdit" }, new { @class = "form-horizontal from-custom online-form", id = "leaveapplicatiomedit-form-id" }))
{
    @Html.Hidden("Id")
    @Html.Hidden("Section")
    <div class="lag">
        <label class="label-90">
            Class</label>
        <div class="field">
            @Html.DropDownListFor(x => x.ClassId, Model.ClassList, "All", new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.ClassId)
        </div>
        <label class="label-70">
            Section</label>
        <div class="field">
            @Html.DropDownListFor(x => x.SectionId, Model.SectionList, "All", new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.SectionId)
        </div>
        <label class="label-70">
            Student</label>
        <div class="field">
            @Html.DropDownListFor(x => x.StudentId, Model.StudentList, "All", new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.StudentId)
        </div>
    </div>

    
    <div class="clearfix">
    </div>
    
    <div class="lag">
        <fieldset>
            <legend>Date From</legend><span class="stack">
                <label class="label-100">
                    (B.S.)(YYYY-MM-DD)</label>
                <span class="field">@Html.TextBoxFor(m => m.MitiFrom, new { @class = "input-100 input", entermsg = "Enter DBOMiti" })
                    @Html.ValidationMessageFor(m => m.MitiFrom) </span></span>
            <div class="clearfix">
            </div>
            <span class="stack">
                <label class="label-100">
                    (A.D.)(MM-DD-YYYY)</label>
                <span class="field">@Html.DateTextBoxFor(m => m.DateFrom, new { @class = "input-100 input", entermsg = "Enter DBO" })
                    @Html.ValidationMessageFor(m => m.DateFrom) </span></span>
        </fieldset>
        <fieldset>
            <legend>Date To</legend><span class="stack">
                <label class="label-100">
                    (B.S.)(YYYY-MM-DD)</label>
                <span class="field">@Html.TextBoxFor(m => m.MitiTo, new { @class = "input-100 input", entermsg = "Enter DBOMiti" })
                    @Html.ValidationMessageFor(m => m.MitiTo) </span></span>
            <div class="clearfix">
            </div>
            <span class="stack">
                <label class="label-100">
                    (A.D.)(MM-DD-YYYY)</label>
                <span class="field">@Html.DateTextBoxFor(m => m.DateTo, new { @class = "input-100 input", entermsg = "Enter DBO" })
                    @Html.ValidationMessageFor(m => m.DateTo) </span></span>
        </fieldset>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-90">
            Confirm</label>
        <div class="field">
            @Html.DropDownListFor(x => x.IsConfirm, Model.YesNoList, new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.IsConfirm)
        </div>
        <label class="label-90">
            Status</label>
        <div class="field">
            @Html.DropDownListFor(x => x.Status, Model.HalfFull, new { @class = "input-100 input" })
            @Html.ValidationMessageFor(m => m.Status)
        </div>
        <label class="label-90">
            Reason</label>
        <div class="field">
            @Html.TextBoxFor(m => m.Reason, new { @class = "input-170 input", entermsg = "Enter Schedule" })
            @Html.ValidationMessageFor(m => m.Reason)
        </div>
    </div> 
       

    <div class="clearfix">
    </div>


    <div class="lag">
        <label class="label-90">
            Remarks</label>
        <div class="field">
            @Html.TextAreaFor(m => m.Remarks, new { @class = "input-450 input", entermsg = "Enter Remarks" })
            @Html.ValidationMessageFor(m => m.Remarks)
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-90">
            Application</label>
        <div class="field">
            @Html.CheckBoxFor(m => m.IsApplication, new { @class = "input-15 input", entermsg = "Enter Remarks" })
            @Html.ValidationMessageFor(m => m.IsApplication)
        </div>
    </div>
}
<script type="text/javascript">

    $(document).ready(function () {


        $("#MitiTo , #MitiFrom").mask('9999/99/99');
        $("#DateTo , #DateFrom").mask('99/99/9999');

    });
    $("#MitiFrom").live('blur', function () {
        if (!$(this).hasClass("error") && $(this).val() != "") {
            //alert(1);
            var date = $(this).val();
            var engDate = convertToEnglish(date);
            $("#DateFrom").val(engDate);
        }
    });

    $("#DateFrom").live('blur', function () {
        if (!$(this).hasClass("error") && $(this).val() != "") {
            //alert(1);
            var date = $(this).val();
            var nepDate = convertToNepaliNew(date);
            $("#MitiFrom").val(nepDate);
        }
    });


    $("#MitiTo").live('blur', function () {
        if (!$(this).hasClass("error") && $(this).val() != "") {
            //alert(1);
            var date = $(this).val();
            var engDate = convertToEnglish(date);
            $("#DateTo").val(engDate);
        }
    });

    $("#DateTo").live('blur', function () {
        if (!$(this).hasClass("error") && $(this).val() != "") {
            //alert(1);
            var date = $(this).val();
            var nepDate = convertToNepaliNew(date);
            $("#MitiTo").val(nepDate);
        }
    });
</script>
