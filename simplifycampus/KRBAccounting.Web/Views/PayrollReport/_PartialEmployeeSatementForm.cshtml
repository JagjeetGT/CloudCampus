@model KRBAccounting.Web.ViewModels.Payroll.EmployeeStatementViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@*@Html.CustomValidationSummary("Login was unsuccessful. Please correct the errors and try again.")*@
@using (Ajax.BeginForm("EmployeeStatement", "PayrollReport", new { controller = "PayrollReport" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "success", OnComplete = "$('#modalReportForm').modal('hide');$.unblockUI();" }, new { @class = "form-horizontal", id = "report-form" }))
{
    
    <div id="error-msg">
    </div>
    <div style="float: left" class="lag">
        <div class="lag">
            <div class="stack">
                <label class="label-90">
                    Department</label>
                <div class="field">
                    @Html.DropDownListFor(m => m.DepartmentId, Model.DepartmentList, new { @class = "input-100 input", entermsg = "Enter Type" })
                    @Html.ValidationMessageFor(m => m.DepartmentId)
                </div>
            </div>
            <div class="lag">
                <div class="stack">
                    <label class="label-90">
                        Employee</label>
                    <div class="field">
                        @Html.DropDownListFor(m => m.EmployeeId, Model.EmployeeList, new { @class = "input-100 input", entermsg = "Enter Name" })
                        @Html.ValidationMessageFor(m => m.EmployeeId)
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag asOn">
            <label class="label-90">
                As On Date</label>
            <span class="field">
                @Html.EditorFor(m => m.AsOnDate)
                @Html.ValidationMessageFor(m => m.AsOnDate)
            </span>
        </div>
        <div class="lag startDate">
            <label class="label-90">
                Start Date</label>
            <span class="field">
                @Html.EditorFor(m => m.StartDate)
                @Html.ValidationMessageFor(m => m.StartDate)
            </span>
        </div>
        <div>
            <div class="clearfix">
            </div>
            <div class="lag endDate" style="display: none">
                <label class="label-90">
                    End Date</label>
                <span class="field">
                    @Html.EditorFor(m => m.EndDate)
                    @Html.ValidationMessageFor(m => m.EndDate)
                </span>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag">
            <label class="label-90">
                Report Type</label>
            <span class="lag" style="width: 300px">
                @Html.RadioButtonForSelectList(m => m.ReportType, Model.ReportTypeList)
                @Html.ValidationMessageFor(m => m.ReportType)
            </span>
        </div>
    </div>
    <div class="lag">
        <div class="field">
            <label class="label-90">
                Summary</label>
            <input type="radio" name="Type" value="1" checked="checked" />
        </div>
        <div class="clearfix">
        </div>
        <div class="field">
            <label class="label-90">
                Detail</label>
            <input type="radio" name="Type" value="2" />
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
      var dateType = @Model.SystemControl.DateType.ToString();
        if (dateType == "1") {
            $("#StartDate,#EndDate,#AsOnDate" ).mask("99/99/9999");
            $("#StartDate,#EndDate,#AsOnDate" ).live("blur", function() {
                var validDate = isDate($(this).val(), "/", 1, 0, 2);
                if (!validDate) {
                    $($(this).addClass("error"));
                } else {
                    $($(this).removeClass("error"));
                }
            });
        } else {
            $("#StartDate,#EndDate,#AsOnDate").mask("9999/99/99");
            $("#StartDate,#EndDate,#AsOnDate").live("blur", function() {
                var date = $(this).val();
                var validDate = isNepaliDate(date);
                if (!validDate) {
                    $($(this).addClass("error"));
                } else {
                    $($(this).removeClass("error"));
                }
            });
        }
        var type = $('input:radio[name=ReportType]:checked').val();

        ChangeReportType(type);
    });

    $('input:radio[name=ReportType]').live('change', function () {
        var val = $(this).val();
        ChangeReportType(val);
    });

    function ChangeReportType(value) {

        if (value == 1) {
            $(".endDate").css("display", "none");
            $(".startDate").css("display", "none");
            $(".asOn").css("display", "block");
        }
        if (value == 2) {
            $(".endDate").css("display", "block");
            $(".startDate").css("display", "block");
            $(".asOn").css("display", "none");
        }
    }
</script>
