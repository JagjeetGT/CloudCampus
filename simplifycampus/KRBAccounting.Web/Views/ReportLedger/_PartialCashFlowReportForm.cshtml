@model KRBAccounting.Web.ViewModels.LedgerReport.CashFlowViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

@*@Html.CustomValidationSummary("Login was unsuccessful. Please correct the errors and try again.")*@
@using (Ajax.BeginForm("CashFlowReport", "ReportLedger", new { controller = "ReportLedger" }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "report", OnComplete = "$('#modalReportForm').modal('hide');" }, new { @class = "form-horizontal", id = "report-form" }))
{
    <div class="lag">
        <div class="clearfix">
        </div>
        <div class="lag">
            <label class="label-90">
                Start Date</label>
            <span class="field" style="width: 100px;">
                @Html.EditorFor(m => m.StartDate)
                @Html.ValidationMessageFor(m => m.StartDate)
            </span>
        </div>
        <div class="lag">
             <span class="stack">
            <label class="label-90">
                Cash/Bank</label>
            <span class="field">
                @Html.HiddenFor(x => x.LedgerId)
                <input type="text" class = "modallink input" href="@Url.Action("GetCashBankLedger", "Master")" valueId="LedgerId" id="cashbankledger" entermsg = "Press F1 for choosing existing cash/bank list." />
                @Html.ValidationMessageFor(m => m.LedgerId)
            </span></span>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag">
            <label class="label-90">
                End Date</label>
            <span class="field" style="width: 100px;">
                @Html.EditorFor(m => m.EndDate)
                @Html.ValidationMessageFor(m => m.EndDate)
            </span>
        </div>
        <div class="clearfix"></div>
        @if (Model.CheckBranch)
        {
            <div class="lag">
                <label class="label-90">
                    Branch
                </label>
                <span class="lag">
                    @{
                        var branchList = Model.BranchList.Count();
                        if (branchList > 1)
                        {
                            @Html.DropDownListFor(x => x.BranchId, Model.BranchList, "All", new {@class = "input-90"})
                        }
                        else
                        {
                            @Html.DropDownListFor(x => x.BranchId, Model.BranchList, new {@class = "input-90"})
                        }

                    }
                </span>
            </div>
        }
    </div>
    
}
<script type="text/javascript">
    $(document).ready(function () {
//        $("#StartDate").datepicker("option", "minDate", '@Model.FiscalYear.StartDate.ToShortDateString()');
//        $("#StartDate").datepicker("option", "maxDate", '@Model.FiscalYear.EndDate.ToShortDateString()');
//        $("#EndDate").datepicker("option", "maxDate", '@Model.FiscalYear.EndDate.ToShortDateString()');
//        $("#EndDate").datepicker("option", "minDate", '@Model.FiscalYear.EndDate.ToShortDateString()');
//        $("#StartDate").nepDateTimePicker({
//            dateFormat: "mm/dd/yy",
//            defaultDate: "+1w",
//            changeMonth: true,
//            changeYear: true,
//            numberOfMonths: 1,
//            minDate:'@Model.FiscalYear.StartDate.ToShortDateString()',
//            maxDate:'@Model.FiscalYear.EndDate.ToShortDateString()',
//            onSelect: function () {

//                $("#StartDate").datepicker("option", "minDate", '@Model.FiscalYear.StartDate.ToShortDateString()');
//            }
//        });

//        $("#EndDate").nepDateTimePicker({
//            dateFormat: "mm/dd/yy",
//            defaultDate: "+1w",
//            changeMonth: true,
//            changeYear: true,
//            numberOfMonths: 1,
//            minDate:  $("#StartDate").val(),
//            maxDate: '@Model.FiscalYear.EndDate.ToShortDateString()',
//            onSelect: function () {
//                $("#EndDate").datepicker("option", "minDate", $("#StartDate").val());
//            }
//        });
  var dateType = @Model.SystemControl.DateType.ToString();
        if (dateType == "1") {
            $("#StartDate,#EndDate" ).mask("99/99/9999");
            $("#StartDate,EndDate" ).live("blur", function() {
                var validDate = isDate($(this).val(), "/", 1, 0, 2);
                if (!validDate) {
                    $($(this).addClass("error"));
                } else {
                    $($(this).removeClass("error"));
                }
            });
        } else {
            $("#StartDate,#EndDate").mask("9999/99/99");
            $("#StartDate,#EndDate").live("blur", function() {
                var date = $(this).val();
                var validDate = isNepaliDate(date);
                if (!validDate) {
                    $($(this).addClass("error"));
                } else {
                    $($(this).removeClass("error"));
                }
            });
        }
    });

</script>
