@model KRBAccounting.Web.ViewModels.LedgerReport.BalanceSheetFormViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>


@*@Html.CustomValidationSummary("Login was unsuccessful. Please correct the errors and try again.")*@
@using (Ajax.BeginForm("BalanceSheet", "ReportLedger", new { controller = "ReportLedger" }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "report", OnComplete = "$('#modalReportForm').modal('hide');$.unblockUI();" }, new { @class = "form-horizontal", id = "report-form" }))
{
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-80">
            Report Type</label>
        <span class="lag" style="width: 300px">
            @Html.RadioButtonForSelectList(m => m.ReportType, Model.ReportTypeList)
            @Html.ValidationMessageFor(m => m.ReportType)
        </span>
    </div>
     <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-80">
            Report Format</label>
        <span class="lag" style="width: 300px">
            @Html.RadioButtonForSelectList(m => m.ReportFormat, Model.ReportFormatList)
            @Html.ValidationMessageFor(m => m.ReportFormat)
        </span>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag asOn">
        <label class="label-90">
            As On Date</label>
        <span class="field" style="width: 100px;">
            @Html.EditorFor(m => m.AsOnDate)
            @Html.ValidationMessageFor(m => m.AsOnDate)
        </span>
    </div>
    
    <div class="lag startDate">
        <label class="label-90">
            Start Date</label>
        <span class="field" style="width: 100px;">
            @Html.EditorFor(m => m.StartDate)
            @Html.ValidationMessageFor(m => m.StartDate)
        </span>
    </div>
    <div>
        <div class="clearfix">
        </div>
        <div class="lag endDate" style="display: none">
            <label class="label-90">
                End Date</label>
            <span class="field" style="width: 100px;">
                @Html.EditorFor(m => m.EndDate)
                @Html.ValidationMessageFor(m => m.EndDate)
            </span>
        </div>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-160">
            Account Group</label>
        <span class="lag">
            @Html.EditorFor(x => x.AccountGroup)
        </span>
    </div>
    <div class="lag">
        <label class="label-90">
            Ledger</label>
        <span class="lag">
            @Html.EditorFor(x => x.Ledger)
        </span>
    </div>
    <div class="lag">
            @if (@Model.SystemControl.DateType == 1)
            {
                <label class="label-90">
            Miti
                </label>
            }
            else
            {
                <label class="label-90">
                    Date 
                </label>
            }
                
        <span class="field">
            @Html.CheckBoxFor(x => x.DateShow)
        </span>
    </div>
    <div class="clearfix">
    </div>
    <div class="lag">
        <label class="label-160">
            Account SubGroup</label>
        <span class="lag">
            @Html.EditorFor(x => x.AccountSubGroup)
        </span>
    </div>
    <div class="lag">
        <label class="label-90">
           Sub Ledger</label>
        <span class="lag">
            @Html.EditorFor(x => x.SubLedger)
        </span>
    </div>
    <div class="lag">
        <span class="stack">
            <label class="label-90">
                Show</label>
            <span class="field">
                @Html.DropDownListFor(m => m.ReportShow, Model.ReportShowList, new { @class = "input-74" })
            </span></span>
    </div>
   
    <div class="clearfix"></div>
        if (Model.CheckBranch)
        {
                <div class="lag">
                <label class="label-90">
                    Branch
                </label>
                <span class="lag">
                    @{
                        var branchList = Model.BranchList.Count();
                        if (branchList > 1)
                        {
                            @Html.DropDownListFor(x => x.BranchId, Model.BranchList, "All", new { @class = "input-90" })
                        }
                        else
                        {
                            @Html.DropDownListFor(x => x.BranchId, Model.BranchList, new { @class = "input-90" })
                        }
                    }
                </span>
            </div>
        }
    <div class="clearfix">
    </div>
   
}
<script type="text/javascript">
    $(document).ready(function () {
      var dateType = @Model.SystemControl.DateType.ToString();
        if (dateType == "1") {
            $("#StartDate,#EndDate,#AsOnDate" ).mask("99/99/9999");
            $("#StartDate,#EndDate,#AsOnDate" ).live("blur", function() {
                var validDate = isDate($(this).val(), "/", 1, 0, 2);
                if (!validDate) {
                    $($(this).addClass("error"));
                } else {
                    $($(this).removeClass("error"));
                }
            });
        } else {
            $("#StartDate,#EndDate,#AsOnDate").mask("9999/99/99");
            $("#StartDate,#EndDate,#AsOnDate").live("blur", function() {
                var date = $(this).val();
                var validDate = isNepaliDate(date);
                if (!validDate) {
                    $($(this).addClass("error"));
                } else {
                    $($(this).removeClass("error"));
                }
            });
        }
        var type = $('input:radio[name=ReportType]:checked').val();

        ChangeReportType(type);
    });

    $('input:radio[name=ReportType]').live('change', function () {
        var val = $(this).val();
        ChangeReportType(val);
    });

    function ChangeReportType(value) {

        if (value == 1) {
            $(".endDate").css("display", "none");
            $(".startDate").css("display", "none");
            $(".asOn").css("display", "block");
        }
        if (value == 2) {
            $(".endDate").css("display", "block");
            $(".startDate").css("display", "block");
            $(".asOn").css("display", "none");
        }
    }
     $("#AccountGroup").live("click", function () {
        if ($(this).is(":checked")) {
            $("#AccountSubGroup").removeAttr("disabled");
        } else {
            $("#AccountSubGroup").attr("disabled", "disabled");
            $("#AccountSubGroup").removeAttr("checked");
        }
    });
    
    $("#Ledger").live("click", function () {
        if ($(this).is(":checked")) {
            $("#SubLedger").removeAttr("disabled");
        } else {
            $("#SubLedger").attr("disabled", "disabled");
            $("#SubLedger").removeAttr("checked");
        }
    });
</script>
