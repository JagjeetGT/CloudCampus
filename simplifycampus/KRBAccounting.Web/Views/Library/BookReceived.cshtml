@using KRBAccounting.Service.Models
@{
    ViewBag.Title = "Book Received";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userRight = (UserRight)ViewBag.UserRight;
}
<div class="workplace">
    <div id="ledger-list">
        <div class="row-fluid">
            <div class="span12">
                <div class="head">
                    <div class="isw-grid">
                    </div>
                    <h1>
                        Book Received</h1>
                    <ul class="buttons">
                        
                        @if(userRight.Create)
                        {
                              <li><a href="#" class="isw-plus addBookReceived"></a></li>
                        }
                      
                    </ul>
                    <div class="clear">
                    </div>
                </div>
                <div id="BookReceived-list">
                    @Html.Action("BookReceivedList")
                </div>
            </div>
        </div>
    </div>
</div>
<div class="dialog" id="modalBookReceived" style="display: none;" title="Book Received(+)">
    <div class="block">
    </div>
</div>
<script type="text/javascript">

    function CheckRow() {
        var element = document.querySelectorAll(".AccessionNo");

        var qty = $("#Quantity").val();
        var value = "";


        if (element.length == qty && qty > 0) {
            $.each(element, function () {
                if ($(this).val() != '') {
                    value = $(this).val();
                } else {
                    value = "";
                    return value;
                }
            });
            if (value == '') {

                writeError("error-msg", "AccessionNo Cannot be Blank");
            }
        }
        else {
            writeError("error-msg","Quantity Cannot be Zero");
        }
        return value;
    }



    $("#modalBookReceived").dialog({
        autoOpen: false,
        modal: true,
        width: 'auto',
        buttons: {
            "Ok": function () {
            
                var data = CheckRow();
                if (data != '') {
                    $("#form-id").submit();
                   
                }
                   Begin();
                checkValidationError();

            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });
    function writeError(control, msg) {

        var err_msg = '<div class="alert-error alert"><a class="close" href="javascript:void(0);" class="close">×</a><p>' + msg + '</p></div>';
        $('#' + control).html(err_msg);
        $.unblockUI();
    }
    function getRequest(url) {
        $.ajax({
            url: url,
            context: document.body,
            success: function (data) {
                $('#modalBookReceived .block').html(data);
                $(this).addClass("done");
                $("#modalBookReceived").dialog('open');
                $.unblockUI();
            },
            error: function (err) {
                writeError('msgErrorNewLocationDetails', err);
            }
        });
    }

    $('a.addBookReceived').live('click', function () {
        var url = '@Url.Action("BookReceivedAdd", "Library")';
        Begin();
        getRequest(url);

        return false;
    });
    $('a.editBookReceived').live('click', function () {
        var id = $(this).attr("data-id");
        var url = '@Url.Action("BookReceivedEdit", "Library")?BookReceivedId=' + id;
        Begin();
        getRequest(url);
        return false;
    });
    function OnComplete() {

        $('#modalBookReceived .block').load("/Library/BookReceivedAdd");
        $("#BookReceived-list").load("/Library/BookReceivedList");
        $.unblockUI();
    }
    function OnCompleteEdit() {


        $("#BookReceived-list").load("/Library/BookReceivedList");
        $('#modalBookReceived').dialog("close");
        $.unblockUI();
    }

    function success(data) {
        Begin();
        if (data == "True") {
            OnComplete();
        }
        else {
            alert(data);
        }
    }
    function successEdit(data) {
        Begin();
        if (data == "True") {
            OnCompleteEdit();
        }
        else {
            alert(data);
        }
    }
    $(".text_Book").live("blur", function () {

        var element = $(this).closest('tr');
        var bookId = element.find(".hdn_BookId_Id").val();
        if (bookId != '' && bookId != 0) {
            var url = '@Url.Action("GetBookMFNNumberById")?id=' + bookId;
            $.getJSON(url, function (data) {
                if (data != null) {
                    var MFNno = data.number;
                    element.find('.MFNNo').val(MFNno);
                }

            });
        }
    });
    $(document).ready(function () {
        $("#Date").datepicker();
    });
    $('a.deleteBook').live('click', function () {
        var result = confirm('Are you sure you wish to delete this Book?');
        if (result) {
            var id = $(this).attr("data-id");
            var url = '@Url.Action("BookReceivedDelete", "Library")?id=' + id;
            Begin();
            $.getJSON(url, function (data) {
                $.unblockUI();
                if (!data) {
                    alert("This Book is already used so cannot be deleted."); $.unblockUI();
                } else {
                    $("#BookReceived-list").load("/Library/BookReceivedList"); $.unblockUI();
                }
            });

            return false;
        }

    });
</script>
