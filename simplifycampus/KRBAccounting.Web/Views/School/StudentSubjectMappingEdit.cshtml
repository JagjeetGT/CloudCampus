@model IEnumerable<KRBAccounting.Domain.Entities.ScStudentSubjectMapping>
@using KRBAccounting.Enums
@using KRBAccounting.Service
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@using (Ajax.BeginForm("StudentSubjectMappingEdit", "School", new { controller = "School" }, new AjaxOptions { HttpMethod = "Post", OnComplete = "successEdit" }, new { @class = "form-horizontal from-custom online-form", id = "form-id" }))
{@Html.HiddenFor(m => m.First().AcademicYearId)
    var studentSubjectMapping = Model.FirstOrDefault();
    <div style="width: 800px;">
        <div class="lag">
            <label class="label-90">
                Class
            </label>
            <div class="field">
                @Html.HiddenFor(x => x.FirstOrDefault().ClassId)
                <input type="text" class="modallink input-100"  value="



                @if (studentSubjectMapping != null)
                {
                    var schClass = studentSubjectMapping.Class;

                    if (schClass != null)
                    {
                        @schClass.Description
                    }
                }

                " href="@Url.Action("GetStudentClass")" valueid="ClassId" id="class-id" />
                @Html.ValidationMessageFor(m => m.FirstOrDefault().ClassId)
            </div>
            <label class="label-90">
                Code
            </label>
            <div class="field">
                <input type="text" class="input-100" value="

                @if (studentSubjectMapping != null)
                {
                    var class1 = studentSubjectMapping.Class;

                    if (class1 != null)
                    {
                        @(class1.Code)
                    }
                }

                " readonly="readonly" id="class-code" />
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag">
            <label class="label-90">
                Student
            </label>
            <div class="field">
                @Html.HiddenFor(x => x.FirstOrDefault().StudentId)
                <input type="text" class="modallink input-370" href="@Url.Action("GetStudentsSubject")" value="
                       
                                                                                                                  
                                                                                                                  @{
                                                                                                                      var scStudentSubjectMapping = Model.FirstOrDefault();
                                                                                                                  }
                                                                                                                  @if (scStudentSubjectMapping != null)
                                                                                                                  {
                                                                                                                      var scStudentinfo = scStudentSubjectMapping.Studentinfo;
                                                                                                                      if (scStudentinfo != null) { @scStudentinfo.StuDesc  }
                                                                                                                  }
                                                                                                                  
                       " valueid=" studentid" id="student-id" />
                @Html.ValidationMessageFor(m => m.FirstOrDefault().StudentId)
            </div>
            <label class="label-90">
                Code
            </label>
            <div class="field">
                <input type="text" class="input-120" value="
                       
                                                               
                                                               @{
                                                                   var firstOrDefault = Model.FirstOrDefault();
                                                               }
                                                               @if (firstOrDefault != null)
                                                               {
                                                                   var studentinfo = firstOrDefault.Studentinfo;
                                                                   if (studentinfo != null) { @studentinfo.StdCode  }
                                                               }
                                                               
                       " readonly=" readonly" id="student-code" />
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="lag detailEntryTable" style="height: 400px">
            <table class="table-bordered" id="table-class-subject-detail">
                <tr class="nodrop nodrag">
                    <th width="20px">
                    </th>
                    <th width="220px">
                        Subject
                    </th>
                    <th width="80px">
                        Subject Type
                    </th>
                    <th width="90px">
                        Class Type
                    </th>
                    <th width="90px">
                        Result System
                    </th>
                    <th width="90px">
                        Evaluation
                    </th>
                    <th width="220px">
                        Narration
                    </th>
                </tr>
                @foreach (var item in Model)
                {
                    @Html.Partial("_PartialStudentSubjectEntryEdit", item)
                }
                @{
    var modellink = new KRBAccounting.Domain.Entities.ScStudentSubjectMapping();
                }
                @Html.Partial("_PartialStudentSubjectEntry", modellink)
            </table>
        </div>
    </div>
}
<script type="text/javascript">

    $(document).ready(function () {
        var ledgerElement = document.querySelectorAll(".text_subject");
        $.each(ledgerElement, function (index) {
            var element = $(this).closest("tr");
            element.attr("id", "tr_" + index);

            var Subject_valueid = element.find(".hdn_Subject_Id").attr("id");

            element.find(".text_subject").attr({
                "valueId": Subject_valueid,
                "id": "subject_" + index
            });

            var ResultSystem_valueid = element.find(".hdn_ResultSystem_Id").attr("id");

            element.find(".text_ResultSystem").attr({
                "valueId": ResultSystem_valueid,
                "id": "ResultSystem_" + index
            });
            var EvaluateForType_valueid = element.find(".hdn_EvaluateForType_Id").attr("id");

            element.find(".text_EvaluateForType").attr({
                "valueId": EvaluateForType_valueid,
                "id": "EvaluateForType_" + index
            });
            var SubjectType_valueid = element.find(".hdn_SubjectType_Id").attr("id");

            element.find(".text_SubjectType").attr({
                "valueId": SubjectType_valueid,
                "id": "SubjectType_" + index
            });
            var ClassType_valueid = element.find(".hdn_ClassType_Id").attr("id");

            element.find(".text_ClassType").attr({
                "valueId": ClassType_valueid,
                "id": "ClassType_" + index
            });
        });



    });


</script>
