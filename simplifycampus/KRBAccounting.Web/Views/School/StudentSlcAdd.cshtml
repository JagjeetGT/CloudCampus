@using KRBAccounting.Data.Repositories
@using KRBAccounting.Service
@model KRBAccounting.Domain.Entities.StudentSlcInfo
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Ajax.BeginForm("StudentSlcAdd", "Student", new AjaxOptions { UpdateTargetId = "MsgError",OnSuccess = "success"}, new { @class = "form-custom", id = "studentslc-form" }))
{
    
    <div id="MsgError" style="display:none"></div>
    <div style="width: 845px;">
        <div class="lag">
            <span class="stack">
                <label class="label-100">
                    Student Name</label>
                <span class="field">
                    @Html.HiddenFor(x => x.StudentId)
                   
                    @Html.ValidationMessageFor(m => m.StudentId)
                 
                     <input type="text" class = "modallink   input-120" href="@Url.Action("GetRegistrationStudentsForSLC", "School")"  parent="Id"  valueId="StudentId" id="feeitemledger" title="Student Name" entermsg = "Press F1 for choosing existing cash/bank list." />
             
                </span></span>
        </div>
       
         <div class="lag">
            <span class="stack">
                <label class="label-100">
                     Symbol No</label>
                <span class="field">
                    @Html.TextBoxFor(m => m.SlcSymbolNo, new { @class = "input-120" })
                    @Html.ValidationMessageFor(m => m.SlcSymbolNo)
                    

               
                </span></span>
         </div>   <div class="lag">
                      <span class="stack">
                          <label class="label-100">
                              Registration No</label>
                          <span class="field">
                              @Html.TextBoxFor(m => m.SlcRegNo, new { @class = "input-120" })
                              @Html.ValidationMessageFor(m => m.SlcRegNo)
                  
                          </span></span>
                  </div>
                  <div class="clearfix"></div>   
        <div class="lag">
            <span class="stack">
                <label class="label-100">
                    Percentage</label>
                <span class="field">
                    @Html.TextBoxFor(m => m.Percentage, new { @class = "input-120" })
                    @Html.ValidationMessageFor(m => m.Percentage)
                   
                </span></span>
        </div>
         <div class="lag">
            <span class="stack">
                <label class="label-100">
                    Division</label>
                <span class="field">
                    @Html.TextBoxFor(m => m.Division, new { @class = "input-120" })
                    @Html.ValidationMessageFor(m => m.Division)
                    
                </span></span>
        </div>
        <div class="lag">
            <span class="stack">
                <label class="label-100">
                    Pass Year (AD)</label>
                <span class="field">
                    @Html.TextBoxFor(m => m.PassYearAD, new { @class = "input-120" })
                    @Html.ValidationMessageFor(m => m.PassYearAD)
                    
                </span></span>
        </div>
        <div class="lag">
            <span class="stack">
                <label class="label-100">
                    Pass Year (BS)</label>
                <span class="field">
                    @Html.TextBoxFor(m => m.PassYearBS, new { @class = "input-120" })
                    @Html.ValidationMessageFor(m => m.PassYearAD)
                    
                </span></span>
        </div>
    </div>
    
  
}
