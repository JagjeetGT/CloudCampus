@model IEnumerable<KRBAccounting.Domain.Entities.ScClassTeacherMapping>
@using KRBAccounting.Enums
@using KRBAccounting.Service
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@using (Ajax.BeginForm("ClassTeacherMappingEdit", "School", new { controller = "School" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "success" }, new { @class = "form-horizontal from-custom online-form", id = "form-id" }))
{
    <div style="width: 800px;">
        <div class="lag">
            <label class="label-90 ">
                Class
            </label>
            <div class="field">
                @Html.HiddenFor(x => x.FirstOrDefault().ClassId)
                <input type="text" class="modallink input-370" href="@Url.Action("GetStudentClass")" value="
                                                                                                          
                                                                                                               @if (Model.FirstOrDefault().Class != null)
                                                                                                               {
                                                                                                                @Model.FirstOrDefault().Class.Code
                                                                                                               }
                                                                                                               " createhref="@Url.Action("AddClass")"  valueid="ClassId" id="class-id" />
                @Html.ValidationMessageFor(m => m.FirstOrDefault().ClassId)
            </div>
        
        </div>
        <div class="clearfix">
        </div>
        <div class="lag">
            <label class="label-90">
                Section
            </label>
            <div class="field">
                @Html.HiddenFor(x => x.FirstOrDefault().SectionId)
                <input type="text" class="modallink input-370" href="@Url.Action("GetSections")" value="
                                                                                                         
                                                                                                           @if (Model.FirstOrDefault().Section != null)
                                                                                                        {
                                                                                                            @Model.FirstOrDefault().Section.Description
                                                                                                        }
                                                                                                           " valueid="SectionId" id="section-id" />
                @Html.ValidationMessageFor(m => m.FirstOrDefault().SectionId)
            </div>
          
        </div>
        <div class="clearfix">
        </div>
        <div class="lag detailEntryTable" style="height: 400px">
            <table class="table-bordered" id="table-class-subject-detail">
                <tr class="nodrop nodrag">
                    <th width="20px">
                    </th>
                    <th width="220px">
                        Teacher
                    </th>
                   
                </tr>
                  @foreach(var item in Model)
                {
                    @Html.Partial("_PartialClassTeacherMapping", item)
                }  
                @*@if (Model.Any())
                {
                var modellink = new KRBAccounting.Domain.Entities.ScClassTeacherMapping();
                
                @Html.Partial("_PartialClassTeacherMapping", modellink)
                }*@
              
            </table>
        </div>
    </div>
}
<script type="text/javascript">

    $(document).ready(function () {

        var ele = document.querySelectorAll(".hdn_Student_Id");
        $.each(ele, function (index) {
            var closestr = $(this).closest("tr");


            closestr.attr("id", "tr_" + index);
          
            var id = closestr.find(".hdn_Student_Id").attr("id");
            closestr.find(".text_student").attr("id", "student_" + index);
            closestr.find(".text_student").attr("valueId", id);
            if (closestr.is(":last-child")) {
                closestr.find(".Add").css("display", "block");
            } else {
                closestr.addClass("deletable");
                closestr.find(".Add").css("display", "none");
            }

        });

    });


</script>
