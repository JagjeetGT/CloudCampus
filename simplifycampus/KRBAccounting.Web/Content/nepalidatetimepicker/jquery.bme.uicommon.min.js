function setBmeInputElementValue(e, t, n, r) { var i = $(e); var s = i.find(t); s.val(n); if (!r) { return } s.valid() } (function (e) { e.resizeObjs = function () { return { arr: new Array, fixSize: new Number, init: function () { arr = new Array; fixSize = 0; startSize = { w: e(window).width(), h: e(window).height()} }, reFixSize: function (e) { fixSize += e }, getFixSize: function () { return fixSize }, get: function () { return arr }, push: function (e) { arr.push(e) }, shift: function (t) { var n = e.grep(arr, function (n, r) { return e(n.container).data("orderNum") == e(t).data("orderNum") }, true); arr = n }, doResize: function () { var t = e(window).height() - startSize.h; var n = e("#pluginbarPop"); var r = false; if ("none" == n.css("display")) { r = true; n.show() } e(arr).each(function (n) { var r = e(this.container); if ("none" == r.css("display")) { r.show(); r.css("height", r.height() + t); if (this.child) { var i = r.find("iframe:first-child"); i.css("height", i.outerHeight() + t) } r.hide() } else if (r.attr("active") != "false") { r.css("height", r.height() + t); if (this.child) { var i = r.find("iframe:first-child"); i.css("height", i.outerHeight() + t) } } }); if (r) { r = false; n.hide() } startSize.h = e(window).height(); var i = e(window).width() - startSize.w; var s = e("#tabpageContent"); s.width(s.width() + i); startSize.w = e(window).width(); var o = e("#tabpageOverflow"); o.width(o.width() + i); var u = e("#horimenuContainer"); u.width(u.width() + i); if (e.browser.mozilla) { if (e.resizeObjs.second) { e.resizeObjs.second = false } else { e.resizeObjs.second = true; setTimeout("$.resizeObjs().doResize()", 1) } } } } }; e.selectAll = { initEvent: function (t, n) { var r = e("#" + n); var i = e("#" + t); var s = i.find(":checkbox"); s.each(function (t) { var n = e(this); n.bind("click", function () { n.selectAllCbox(i, r) }) }); if (i.find("#" + n).attr("id") != n) { r.bind("click", function () { r.selectAllCbox(i, r) }) } } }; e.fn.selectAllCbox = function (t, n) { var r; if (this.attr("id") == n.attr("id")) { r = e(":checkbox", t); if (this.attr("checked")) { r.each(function (e) { this.checked = true }) } else { r.each(function (e) { this.checked = false }) } return true } else { r = t.find(":checkbox:not(:checked)"); if (r.length == 0) { n.attr("checked", true) } else { if (r.length == 1 && r.attr("id") == n.attr("id")) { n.attr("checked", true) } else { n.attr("checked", false) } } return true } }; e.fn.alignMiddle = function (t, n) { function i(t, n, r) { var i; if (r) { i = e("#" + r) } else { i = e("body") } var s = n || 0; var o = i.height(); var u = t.height(); var a; if (o > u + s) { a = (o - u) / 2 - s / 2 } t.css("padding-top", a) } var r = this; i(r, t, n); e(window).bind("resize", function () { i(r, t, n) }) } })(jQuery); (function (e) { e.fn.mainFrameLayout = function (t) { var n = this; var r = e.extend({}, t); var i = ""; for (var s = 0; s < r.columns.length; s++) { i += "<div></div>"; if (r.columns[s].height > 0) { var o = r.columns[s].height; e.resizeObjs().reFixSize(o) } } var u = e(i).appendTo(n); var a = e(window).height(); var f = e.resizeObjs().getFixSize(); u.each(function (t) { var n = e(this); n.attr("id", r.columns[t].id).css({ width: r.columns[t].width, height: r.columns[t].height }); if (r.columns[t].autoSize) { var i = a - f; n.height(i); e.resizeObjs().push({ container: n, child: false }) } }) } })(jQuery); (function (e) { e.contents = function () { return { init: function () { function i(t) { if (typeof t.children != "undefined" && t.children.length > 0) { var n = t.children; e(n).each(function (e) { if (this.isSelected && typeof this.url != "undefined" && "" != this.url) { tabsData.data[tabsData.data.length] = { name: this.name, id: this.id.toString(), url: this.url, hideCloseIcon: this.hideCloseIcon} } i(this) }) } } var t = "<div class='top_logo'></div>"; if (typeof sysmenuData != "undefined") { t += "<div id='systemMenu' class='sysmenu'>"; t += "</div>" } t += "<div class='top_fun'>"; t += "<ul>"; t += "<li class='fun_logout' onclick='location.href=\"" + logoutConf.lnk + "\"'>" + logoutConf.name + "</li>"; t += "<li class='top_fun_split'> | </li>"; t += "<li class='fun_help' id='" + helpConf.id + "' onclick='window.open(\"" + helpConf.lnk + "\");'>" + helpConf.name + "</li>"; if (!searchConf.isDisabled) { var n = e("#searchPopBox"); n.hide(); t += "<li class='top_fun_split'> | </li>"; t += "<li class='fun_search' id='" + searchConf.id + "' onmouseover='$.showSearchPop(this);'>" + searchConf.name + "</li>" } t += "<li class='fun_user'>" + userConf.name + "</li>"; t += "</ul>"; t += "</div>"; t += "<div class='top_menu' id='topMenu'></div>"; if (!alarmConf.isDisabled) { t += "<div class='top_alarm' id='" + alarmConf.id + "'>"; if (alarmConf.children.length > 0) { for (var r = 0; r < alarmConf.children.length; r++) { t += "<ul id='" + alarmConf.children[r].id + "'><li class='alarm_left'></li><li class='alarm_center'>" + alarmConf.children[r].name + "</li><li class='alarm_right'></li></ul>" } } t += "</div>" } e("#topFrame").append(t); if (typeof menuData != "undefined") { e("#topMenu").horimenu(menuData); e(menuData.data).each(function (e) { if (typeof this.isSelected != "undefined" && this.isSelected && typeof this.url != "undefined" && "" != this.url) { tabsData.data[tabsData.data.length] = { name: this.name, id: this.id.toString(), url: this.url, hideCloseIcon: this.hideCloseIcon} } i(this) }) } e("#horimenuContainer").width(e(window).width() - 406); if (typeof sysmenuData != "undefined") { e("#systemMenu").sysmenu(sysmenuData); e(sysmenuData.systemMenu).each(function (e) { if (typeof this.isSelected != "undefined" && this.isSelected && typeof this.url != "undefined" && "" != this.url) { tabsData.data[tabsData.data.length] = { name: this.name, id: this.id.toString(), url: this.url, hideCloseIcon: this.hideCloseIcon} } i(this) }) } e("#middleFrame").tabPage(tabsData); e.plugin = e("#middleFrame").pluginBar(pluginData); e("#footerFrame").append("<div id='stateBar'></div>"); e("#stateBar").stateBar() } } } })(jQuery); (function (e) { e.showSearchPop = function (t) { var n = e(t); var r = e("#searchPopBox"); var i = n.offset(); var s = i.left - r.width() + n.width() + 30; r.css({ top: i.top - 6, left: s }); r.show(); r.mouseover(function () { e(this).show() }); r.mouseout(function () { e(this).hide() }) } })(jQuery); (function (e) { e.fn.pluginBar = function (t) { function p(t) { var n = false; if (s.css("display") == "none") { s.show(); n = true } var a = e("<div class='pluginbar_item'></div>"); var f = e("<div class='pluginbar_item_icon'></div>"); a.append(f); a.attr("id", t.id); f.css("background-image", "url(" + t.icon + ")"); i.append(a); a.bind("mouseover", function () { }); a.bind("mouseout", function () { }); a.bind("click.showpop", function () { if (s.is(":visible") && s.data("actObj") == a) { w(a) } else { b(a, t) } }); var l = e("<div class='pluginbarPopContent_body'></div>"); l.height(r.height() - u.height()); o.append(l); if (t.contentUrl && !t.contentType) { var c = e("<iframe src='' frameborder='0' scrolling='auto' name='pluginIFra" + t.id + "' width='100%'></iframe>"); c.appendTo(l); c.attr("src", t.contentUrl).attr("height", "100%") } if ("SHORTCUTMENU" == t.contentType) { l.shortcutMenu(shortcutMenuData) } e.resizeObjs().push({ container: l, child: false }); if (n) { s.hide() } a.data("contentObj", l) } function d(e) { } function v(e, t) { } function m(t) { var n = e("#tabpageContent"); if (t == "left") { r.css({ left: "0px", right: "auto" }); s.css({ left: "36px", right: "auto" }); i.css("margin-left", "0px"); n.css("float", "right"); r.removeClass("pluginbar_alignright"); s.parent().removeClass("pluginbar_pop_alignright") } else { r.css({ left: "auto", right: "0px" }); s.css({ left: "auto", right: "36px" }); i.css("margin-left", "-3px"); n.css("float", "left"); r.addClass("pluginbar_alignright"); s.parent().addClass("pluginbar_pop_alignright") } } function g() { r.show(); var t = e("#tabpageContent"); if (e.browser.msie) { t.width(e(window).width() - r.outerWidth() - 1) } else { t.width(e(window).width() - r.outerWidth()) } e("#tabpageFix").removeClass("tabpage_for_pluginhidden") } function y() { r.hide(); if (c) { E(); s.hide() } else { s.hide(); c = false } var t = e("#tabpageContent"); t.width(e(window).width()); e("#tabpageFix").addClass("tabpage_for_pluginhidden") } function b(e, t) { var n = s.data("actObj"); if (n) { n.removeClass("pluginbar_item_on") } a.html(t.name); e.addClass("pluginbar_item_on"); s.data("actObj", e); s.show(); s.find("div.pluginbarPopContent_body").hide(); e.data("contentObj").show() } function w(e) { if (!c) { s.hide(); e.removeClass("pluginbar_item_on") } } function E() { c = false; x(-1); f.attr("class", "float_pop"); s.removeClass("pluginbarpop_fix") } function S() { c = true; x(1); f.attr("class", "fix_pop"); s.addClass("pluginbarpop_fix") } function x(t) { var n = 196; var i = e("#tabpageContent"); i.width(i.width() - n * t); r.width(r.width() + n * t) } function T(t) { r = e("<div id='pluginbar'></div>"); i = e("<div id='pluginbarContainer'><div class='pluginbar_top'></div><div class='pluginbar_bottom'></div></div>"); r.append(i); s = e("<div id='pluginbarPop' class='pluginbar_pop pluginbarpop_float'></div>"); o = e("<div id='pluginbarPopContent'></div>"); u = e("<div class='pluginbarPopContent_header'></div>").appendTo(o); a = e("<div class='pluginbarPopContent_header_left'></div>").appendTo(u); var n = e("<div class='pluginbarPopContent_header_right'></div>").appendTo(u); f = e("<span class='float_pop'></span>").appendTo(n); l = e("<span class='close_pop'></span>").appendTo(n); s.append(o); var d = e("#tabpageContent"); d.before(r); var v = r.offset(); var g = v.left + r.width() + "px"; var b = v.top - 1 + "px"; s.css({ position: "absolute", left: g, top: b }); s.hide(); d.after("<div class='nofloat'></div>"); d.after(s); var w = e.resizeObjs().getFixSize(); var x = e(window).height() - w; r.height(x); s.height(x - 1); e.resizeObjs().push({ container: r, child: false }); e.resizeObjs().push({ container: s, child: false }); if (e.browser.msie) { d.width(e(window).width() - r.outerWidth() - 1) } else { d.width(e(window).width() - r.outerWidth()) } if (t && t.length > 0) { for (var T = 0; T < t.length; T++) { var N = t[T]; p(N) } } s.bind("mouseover", function () { }); s.bind("mouseout", function () { }); f.bind("click", function () { if (c) { E() } else { S() } }); l.bind("click", function () { if (c) { E(); s.hide() } else { s.hide(); c = false } var e = s.data("actObj"); e.removeClass("pluginbar_item_on") }); m(h.align); if (h.hidden) { y() } } var n = e(this); var r; var i; var s; var o; var u; var a; var f; var l; var c = false; this.defaults = { align: "left", hidden: false }; var h = e.extend({}, this.defaults, t); T(h.items); return { add: p, remove: d, newMsg: v, rePosition: m, hide: y, show: g} } })(jQuery); (function (e) { function t() { return { init: function (n, r) { var i = e('<ul id="shortcutmenu" class="shortcutmenu"></ul>').appendTo(n); i.data("saveUrl", r.saveUrl); i.data("selectedData", []); var s = r.selectedData; if (s && s.length > 0) { e(s).each(function (e) { t().addItem(this) }) } var o = e('<div class="shortcutmenu_bottom"></div>').appendTo(n); var u = e('<span class="bc_btn bc_ui_ele"><div><div>' + r.setLabel + "</div></div></span>").appendTo(o); u.bind("click", t().openCloseAll); var a = e('<div id="shortcutmenuAll" class="shortcutmenu_all"></div>').prependTo(n); var f = e('<div class="shortcutmenu_all_content"></div>').appendTo(a); var l = r.allData.data; if (l && l.length > 0) { var c; e(l).each(function (n) { var r = this; c = e('<div class="shortcutmenu_all_group"></div>').appendTo(f); var i = e('<div class="shortcutmenu_all_fa">' + r.name + "</div>").appendTo(c); var s = e('<ul class="shortcutmenu_all_sub"></ul>').appendTo(c); if (r.children && r.children.length > 0) { e(r.children).each(function () { var n = this; var r = e("<li><label for=" + n.id + ">" + n.name + "</label></li>").appendTo(s); var i = e('<input id="' + n.id + '" type="checkbox" value="' + n.id + '" />').prependTo(r); i.bind("click", function () { if (i.attr("checked")) { t().addItem(n) } else { t().removeItem(n.id) } }) }) } if (n > 0 && n % 3 == 0) { e('<div class="nofloat"></div>').appendTo(f) } }); var h = c.outerWidth(true); if (l.length > 4) { a.width(h * 4) } else { a.width(h * l.length) } } else { u.hide() } var p = e('<div class="shortcutmenu_all_bottom"></div>').appendTo(a); var d = e('<span class="bc_btn bc_ui_ele"><div><div>' + r.okLabel + "</div></div></span>").appendTo(p); d.bind("click", t().okHandler); var v = e('<span class="bc_btn bc_ui_ele"><div><div>' + r.cancelLabel + "</div></div></span>").appendTo(p); v.bind("click", t().cancelHandler); t().resize(); a.hide() }, addItem: function (n) { var r = e("#shortcutmenu"); var i = e("<li id=" + n.id + ">" + n.name + "</li>").appendTo(r); var s = e('<span class="shortcutmenu_up"></span>').prependTo(i); var o = e('<span class="shortcutmenu_del"></span>').prependTo(i); i.bind("click", function () { var t = e.fn.tabPage.add({ name: n.name, url: n.url, id: n.id.toString() }) }); i.hover(function () { e(this).addClass("shortcutmenu_over") }, function () { e(this).removeClass("shortcutmenu_over") }); s.bind("click", function () { if (i.prev().is("li")) { i.insertBefore(i.prev()); i.mouseout() } else { i.appendTo(r); i.mouseout() } t().saveState(); return false }); o.bind("click", function () { i.remove(); t().saveState(); return false }); var u = r.data("selectedData"); u.push(n); r.data("selectedData", u) }, removeItem: function (t) { var n = e("#shortcutmenu"); var r = n.find("li[id=" + t + "]"); r.remove(); var i = n.data("selectedData"); var s = e.grep(i, function (e, n) { return e.id == t }, true); n.data("selectedData", s) }, resize: function () { var t = e("#pluginbar"); var n = e("#shortcutmenuAll"); var r = n.find("div.shortcutmenu_all_content"); if (n.height() > t.height() - 10) { r.height(t.height() - 50) } }, openCloseAll: function () { var n = e("#shortcutmenuAll"); if (n.is(":hidden")) { t().showAll() } else { t().hideAll() } }, showAll: function () { var n = e("#shortcutmenuAll"); var r = n.data("poper"); if (undefined == r) { r = new jBME.Poper(n); r.defaultWrap(); r.mask = true; n.data("poper", r) } var i = e("#pluginbarPop"); var s = i.offset(); r.showIn(s.left + i.width(), s.top - 2); t().resize(); var o = e("#shortcutmenu"); n.find("input:checked").attr("checked", false); o.find("li").each(function () { var t = n.find("input[id=" + e(this).attr("id") + "]"); t.attr("checked", true) }); var u = []; e(o.data("selectedData")).each(function () { u.push(this) }); o.data("lastData", u) }, hideAll: function () { var t = e("#shortcutmenuAll"); t.data("poper").hide() }, okHandler: function () { t().saveState(); t().hideAll() }, cancelHandler: function () { var n = e("#shortcutmenu"); var r = n.data("lastData"); n.html(""); n.data("selectedData", []); e(r).each(function () { t().addItem(this) }); t().hideAll() }, saveState: function () { var t = []; var n = e("#shortcutmenu"); var r = n.data("saveUrl"); n.find("li").each(function () { t.push(e(this).attr("id")) }); e.ajax({ url: r, data: { ids: t.toString()} }) } } } e.fn.shortcutMenu = function (e) { return (new t).init(this, e) } })(jQuery); (function (e) { function t() { return { init: function (n, r) { var i = "<div class='horimenu'>"; i += "<div class='horimenu_bg_left'></div>"; i += "<div class='horimenu_bg_center' id='horimenuContainer'></div>"; i += "<div class='horimenu_bg_right'></div>"; i += "<div id='menuTitleContainer'></div>"; i += "<div id='submenuContainer'></div>"; i += "</div>"; e(n).append(i); e(r.data).each(function (n) { var i = t().addMenu(e("#horimenuContainer"), this, n); t().addSubTitle(e("#menuTitleContainer"), this, n); t().addSubmenu(e("#submenuContainer"), this.children, n); if (n < r.data.length - 1) { t().addSplit(i) } }) }, shortmenu: function (n, r) { var i = "<ul class='horimenu_title_normal'>"; i += "<li class='horimenu_title_left'></li>"; i += "<li class='horimenu_title_center shortmenu'></li>"; i += "<li class='horimenu_title_right'></li>"; i += "</ul>"; var s = e(i).prependTo(n); s.click(function () { }); s.mouseover(function () { e(this).removeClass("horimenu_title_normal"); e(this).addClass("horimenu_title_on"); t().showSubMenu(0) }); s.mouseout(function () { e(this).removeClass("horimenu_title_on"); e(this).addClass("horimenu_title_normal"); t().hideSubMenu(0) }); t().addSubmenu(e("#submenuContainer"), r, 0) }, addMenu: function (n, r, i) { var s = "<ul class='horimenu_title_normal title_ul' title='" + r.name + "'>"; s += "<li class='horimenu_title_left'></li>"; s += "<li class='horimenu_title_center'><span>" + r.name + "</span></li>"; s += "<li class='horimenu_title_right'></li>"; s += "</ul>"; var o = e(s).appendTo(n); o.click(function () { if (r.url) { if (typeof sysmenuData != "undefined") { var t = "{ id: '" + r.id + "', label:'" + r.name + "', url: '" + r.url + "'}"; e.fn.historyReport(t, sysmenuData) } var n = e.fn.tabPage.add({ name: r.name, url: r.url, id: r.id.toString(), helpid: r.helpid }) } }); o.mouseover(function () { e(this).removeClass("horimenu_title_normal"); e(this).addClass("horimenu_title_on"); if (r.children.length > 0) { t().showSubMenu(i) } }); o.mouseout(function () { e(this).removeClass("horimenu_title_on"); e(this).addClass("horimenu_title_normal"); if (r.children.length > 0) { t().hideSubMenu(i) } }); return o }, addSubTitle: function (n, r, i) { var s = e("#horimenuContainer").find("ul.title_ul:eq(" + i + ")"); var o = "<div style='position: absolute;'><ul class='horimenu_title_sub_on'><li class='horimenu_title_left'></li><li class='horimenu_title_center'><span>" + r.name + "</span></li><li class='horimenu_title_right'></li></ul></div>"; var u = e(o).appendTo(n); u.width(s.width() + 12); var a = s.offset(); u.css("left", a.left - 6); u.mouseover(function () { t().showSubTitle(i); t().showSubMenu(i) }); u.mouseout(function () { t().hideSubTitle(i); t().hideSubMenu(i) }); u.hide() }, addSubmenu: function (n, r, i) { var s = e("#horimenuContainer").find("ul.title_ul:eq(" + i + ")"); var o = "<div style='position:absolute;'><div class='menu_masker'><iframe frameborder='0' src=''></iframe></div></div>"; var u = e(o).appendTo(n); o = "<div class='horimenu_sub'><div class='horimenuSub_top'><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td><div class='horimenuSub_top_left'></div></td>	<td class='horimenuSub_top_center'></td><td><div class='horimenuSub_top_right'></div></td></tr></table></div><div class='horimenuSub_center_left'><div class='horimenuSub_center_right'><div class='horimenuSub_center_center'><ul></ul></div><div class='porlet_nofloat'></div></div></div><div class='horimenuSub_bottom'><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td><div class='horimenuSub_bottom_left'></div></td><td class='horimenuSub_bottom_center'></td><td><div class='horimenuSub_bottom_right'></div></td></tr></table></div></div>"; var a = e(o).appendTo(u); a.attr("id", "horimenuSub" + i).addClass("horimenu_sub"); e(r).each(function () { t().addSubItem(a.find("ul:eq(0)"), this, i) }); var f = e(a).width(); var l = e(a).height(); a.find("li").each(function () { if (s.width() >= f + 11) { e(this).width(s.width() + 26); a.width(s.width() + 37) } else { e(this).width(f - 11) } e(this).find("a").css("display", "block") }); var c = u.find("iframe:eq(0)"); c.width(f + 8); c.height(l + 8); var h = s.offset(); u.css("left", h.left - 2); u.mouseover(function () { s.removeClass("horimenu_title_normal"); s.addClass("horimenu_title_on"); t().showSubMenu(i) }); u.mouseout(function () { s.removeClass("horimenu_title_on"); s.addClass("horimenu_title_normal"); t().hideSubMenu(i) }); u.hide() }, addSubItem: function (n, r, i) { var s = "<li><a>" + r.name + "</a></li>"; var o = e(s).appendTo(n); if (r.disabled) { o.attr("disabled", true) } o.click(function () { if (r.javascript) { r.javascript(r.url); return } if (typeof sysmenuData != "undefined") { var n = "{ id: '" + r.id + "', label:'" + r.name + "', url: '" + r.url + "'}"; e.fn.historyReport(n, sysmenuData) } var s = e.fn.tabPage.add({ name: r.name, url: r.url, id: r.id, helpid: r.helpid }); t().hideSubMenu(i) }) }, addSplit: function (t) { var n = "<ul class='horimenu_title_split'><li></li></ul>"; e(n).insertAfter(t) }, showSubMenu: function (t) { e("#submenuContainer > div:eq(" + t + ")").show() }, hideSubMenu: function (t) { e("#submenuContainer > div:eq(" + t + ")").hide() }, showSubTitle: function (t) { e("#menuTitleContainer > div:eq(" + t + ")").show() }, hideSubTitle: function (t) { e("#menuTitleContainer > div:eq(" + t + ")").hide() } } } e.fn.horimenu = function (e) { return (new t).init(this, e) } })(jQuery); (function ($) { $.fn.sysmenu = function (s) { function showmenu() { menu.show(); menu.find("div.shortsubmenu_sub").hide() } function hidemenu() { titleItem.removeClass("sysmenu_hover").addClass("sysmenu"); menu.hide(); menu.find("div.shortsubmenu_sub").hide(); var e = menu.data("maskDiv"); $(e).remove() } function changeItem() { titleItem.removeClass("sysmenu_hover").addClass("sysmenu"); var e = menu.data("maskDiv"); $(e).remove() } function createMenu(obj) { var menuHtml = "<div id='systemMenuContainer' onmouseover='$.menuEnter();' ><div class='shortmenu_sub'>"; menuHtml += "<div class='menu_masker'><iframe width='0' height='0' frameborder='0' src=''></iframe></div>"; menuHtml += "<div class='horimenuSub_top'><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td><div class='horimenuSub_top_left'></div></td><td class='horimenuSub_top_center'></td><td><div class='horimenuSub_top_right'></div></td></tr></table></div>"; menuHtml += "<div class='horimenuSub_center_left'><div class='horimenuSub_center_right'><div class='horimenuSub_center_center'>"; if (showSearch) { menuHtml += "<div class='sysmenu_header'><div class='sysmenu_search'><div class='search_input'><input type='text' value='' name='systemSearch' id='systemSearch' class='system_text_input' /><input type='submit' value='' class='system_btn' /></div></div>"; menuHtml += "<div class='sysmenu_map_tool'><div class='system_menu_close'></div><span>Site Map</span></div>"; menuHtml += "<div class='nofloat'></div></div>" } else { menuHtml += "<div class='sysmenu_header'>"; menuHtml += "<div class='sysmenu_map_tool'><div class='system_menu_close'></div></div>"; menuHtml += "<div class='nofloat'></div></div>" } if (typeof itemArr != "undefined") { menuHtml += "<div class='shortmenu_proj_list'><ul class='shortmenu_proj_ul'></ul></div>" } if (showHistory) { menuHtml += "<div class='shortmenu_his_list'><span class='history_title'>" + historyTitle + "</span><ul class='shortmenu_his_ul'></ul></div>" } if (typeof systemMenu != "undefined") { menuHtml += "<div class='shortmenu_proj_items_list'><ul class='shortmenu_proj_itmes_ul'></ul></div>" } menuHtml += "<div class='porlet_nofloat'></div></div></div></div>"; menuHtml += "<div class='horimenuSub_bottom'><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td><div class='horimenuSub_bottom_left'></div></td><td class='horimenuSub_bottom_center'></td><td><div class='horimenuSub_bottom_right'></div></td></tr></table>"; menuHtml += "</div></div>"; var menuEle = $(menuHtml); menuEle.appendTo("#topFrame"); menu = menuEle; if (typeof itemArr != "undefined") { for (var i = 0; i < itemArr.length; i++) { addMenuItem(itemArr[i]) } } if (typeof systemMenu != "undefined") { for (var i = 0; i < systemMenu.length; i++) { addProjItem(systemMenu[i]) } } if (showHistory && $.cookie("historyItems") != null) { var ulObj = menu.find("ul.shortmenu_his_ul"); var historyStr = $.cookie("historyItems"); var historyObj = eval("(" + historyStr + ")"); if (ulObj.html() != "") { ulObj.html("") } for (var j = 0; j < historyObj.length; j++) { addHistoryList(historyObj[j]) } } var offset = obj.offset(); var searchBox = menu.find("div.sysmenu_header"); var projBox = menu.find("div.shortmenu_proj_list"); var projSubBox = menu.find("div.shortmenu_proj_items_list"); var historyBox = menu.find("div.shortmenu_his_list"); var boxW = 0; if (projBox.width() != null && projSubBox.width() != null && historyBox.width() == null) { boxW = projBox.width() + projSubBox.width(); if (projBox.height() > projSubBox.height()) { projSubBox.addClass("list_noline"); projSubBox.height(projBox.height()) } else { projBox.addClass("list_noline"); projBox.height(projSubBox.height()) } } if ((projBox.width() == null || projSubBox.width() == null) && historyBox.width() == null) { boxW = singleBoxWidth; if (projBox.width() == null) { projSubBox.width(singleBoxWidth); projSubBox.addClass("list_noline") } else if (projSubBox.width() == null) { projBox.width(singleBoxWidth); projBox.addClass("list_noline") } } if (historyBox.width() != null && projSubBox.width() != null && projBox.width() == null) { boxW = historyBox.width() + projSubBox.width(); if (historyBox.height() > projSubBox.height()) { projSubBox.addClass("list_noline") } else { historyBox.addClass("list_noline") } } $("#systemMenuContainer").css({ top: offset.top + obj.height() + 2, width: boxW + 18 }); menu.find("div.system_menu_close").click(function () { hidemenu() }); if (typeof systemMenu != "undefined") { projSubBox.showSubMenu("sub_selected") } menu.hide(); titleItem.ExternalClick(menu, changeItem); return menuEle } function addHistoryList(e) { var t = menu.find("ul.shortmenu_his_ul"); var n = "<li>"; n += "<a href = '#none'>" + e.label + "</a>"; n += "</li>"; var r = $(n).prependTo(t); r.click(function () { var t = $.fn.tabPage.add({ name: e.label, url: e.url, id: e.id, helpid: e.helpid }); hidemenu() }) } function addMenuItem(e) { var t = menu.find("ul.shortmenu_proj_ul"); var n = "<li>"; n += "<a href='" + e.url + "' target='_blank'><img src='" + $.trim(e.icon) + "' /></a>"; n += "</li>"; var r = $(n).appendTo(t); itemsHash[e.id] = r; if (e.isdisabled) { r.attr("disabled", true) } r.click(function () { hidemenu() }); return r } function addProjItem(e) { var t = menu.find("ul.shortmenu_proj_itmes_ul"); if (e.children.length > 0) { var n = "<li>"; n += "<a href='#none' class='has_sub'>" + e.name + "</a>" } else { var n = "<li>"; n += "<a href='#none'>" + e.name + "</a>" } n += "</li>"; var r = $(n).appendTo(t); var i = $(t).width(); if (typeof itemArr != "undefined" || showHistory) { r.width(i + 2) } else { r.width(singleBoxWidth + 7) } if (e.children.length == 0) { r.click(function () { hidemenu(); if (typeof sysmenuData != "undefined") { var t = "{ id: '" + e.id + "', label:'" + e.name + "', url: '" + e.url + "'}"; $.fn.historyReport(t, sysmenuData) } var n = $.fn.tabPage.add({ name: e.name, url: e.url, id: e.id, helpid: e.helpid }) }) } else { createSubMenu(r, e.children) } return r } function showSubMenu(e) { var t = $(e).next(); t.bind("mouseover", function () { $(this).show(); titleItem.removeClass("sysmenu").addClass("sysmenu_hover") }); t.show() } function hideSubMenu(e) { var t = $(e).next(); t.hide() } function createSubMenu(e, t) { var n = "<div class='shortsubmenu_sub'>"; n += "<div class='menu_masker'><iframe width='0' height='0' frameborder='0' src=''></iframe></div>"; n += "<div class='horimenuSub_top'><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td><div class='horimenuSub_top_left'></div></td><td class='horimenuSub_top_center'></td><td><div class='horimenuSub_top_right'></div></td></tr></table></div>"; n += "<div class='horimenuSub_center_left'><div class='horimenuSub_center_right'><div class='horimenuSub_center_center'>"; n += "<ul></ul>"; n += "</div><div class='porlet_nofloat'></div></div></div>"; n += "<div class='horimenuSub_bottom'><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td><div class='horimenuSub_bottom_left'></div></td><td class='horimenuSub_bottom_center'></td><td><div class='horimenuSub_bottom_right'></div></td></tr></table>"; n += "</div>"; var r = $(n); r.appendTo(e); var i = r; for (var s = 0; s < t.length; s++) { addSubMenuItem(t[s], i) } var o = menu.find("div.shortmenu_proj_list"); var u = menu.find("div.shortmenu_proj_items_list"); if ($.browser.msie) { if ($.browser.version == "7.0" || $.browser.version == "6.0") { var a = -6 } if ($.browser.version == "8.0") var a = -5 } else { var a = -4 } i.css({ left: $(i).parent().width() - 12, top: a }); i.hide() } function addSubMenuItem(e, t) { var n = t.find("ul:eq(0)"); if (e.children && e.children.length > 0) { var r = "<li>"; r += "<a href='#none' class='has_sub'>" + e.name + "</a>" } else { var r = "<li>"; r += "<a href='#none'>" + e.name + "</a>" } r += "</li>"; var i = $(r).appendTo(n); i.css({ width: t.width() - 11 }); if (e.children && e.children.length > 0) { createSubMenu(i, e.children) } else { i.click(function () { t.hide(); hidemenu(); if (typeof sysmenuData != "undefined") { var n = "{ id: '" + e.id + "', label:'" + e.name + "', url: '" + e.url + "'}"; $.fn.historyReport(n, sysmenuData) } var r = $.fn.tabPage.add({ name: e.name, url: e.url, id: e.id, helpid: e.helpid }) }) } } var container = this; var titleItem = container; var menu; var menuList; var subMenu; var delayCloseTimer = this.delayCloseTimer = null; var closetime = 0; var singleBoxWidth = 240; var itemsHash = {}; var showSearch = s.hasSearch; var showHistory = s.showHistory; if (typeof s.historyTitle != "undefined") { var historyTitle = s.historyTitle } else { var historyTitle = "The last history" } var itemArr = s.subProj; var systemMenu = s.systemMenu; titleItem.bind("click", function () { $(this).removeClass("sysmenu").addClass("sysmenu_hover"); showmenu(); var e = $("<div style='position: absolute; top: 0px; left: 0px;'></div>"); e.width($("body").width()); e.height($("body").height()); e.insertBefore(menu); menu.data("maskDiv", e) }); if (!menu) { createMenu(titleItem) } } })(jQuery); (function (e) { e.menuEnter = function () { var t = e("#systemMenuContainer"); var n = e("#systemMenu"); n.removeClass("sysmenu").addClass("sysmenu_hover") } })(jQuery); (function (e) { e.fn.stateBar = function () { var t = ""; var n = ""; e(this).append("<div id='loginInfo'></div><div id='alarmInfo'></div>"); t += "<ul>"; t += "<li class='login_user'>" + loginData.user + "</li>"; t += "<li class='login_ip'>" + loginData.ipAddress + "</li>"; t += "</ul>"; e("#loginInfo").append(t); e("#topLnk").append(n); e.fn.alarm() }; e.fn.alarm = function () { }; var t = function (t) { var n = ""; n += "<ul>"; for (var r = 0; r < t.length; r++) { n += "<li id='alarm" + t[r].id + "'><img src='" + t[r].icon + "' align='absmiddle' />" + t[r].times + "</li>" } n += "</ul>"; e("#alarmInfo").html(n) } })(jQuery); (function (e) { function n() { var r = 1e4; return { spaceWidth: 500, init: function (t, i) { var s = e(window).width() - 76; r = i.max || r; var o = "<div class='tabpage'>"; o += "<div class='tabpage_bg_left'></div>"; o += "<div class='tabpage_bg_right'></div>"; o += "<div class='tabpage_bg_center'>"; o += "<div class='tabpage_fix' id='tabpageFix'></div>"; o += "<div class='tabpage_overflow' id='tabpageOverflow'>"; o += "<div class='tabpage_inner' id='tabPageInner'>"; o += "<div id='tabpageTitle'>"; o += "</div></div></div>"; o += "<div class='tabpage_tools' id='tabpageTools'></div>"; o += "</div>"; o += "</div>"; o += "<div id='tabpageContent'></div>"; var u = e(o); u.appendTo(t); var a = e("#tabpageTitle"); var f = e("#tabpageOverflow"); n().initTools(e("#tabpageTools")); a.data("count", 0).data("current", new Array).width(n().spaceWidth); f.width(s); a.data("max", r); a.data("openedNum", 0); e.resizeObjs().reFixSize(u.outerHeight()); if (i.data) { e(i.data).each(function (e) { n().add({ name: this.name, url: this.url, id: this.id, hideCloseIcon: this.hideCloseIcon, index: e, helpid: this.helpid }) }) } }, add: function (r, i, s, o, u, a) { if (typeof r == "object") { var f = r; r = f.name; i = f.url; s = f.id; o = f.hideCloseIcon; u = f.index; a = f.helpid } var l = e("#tabpageTitle"); var c = e("#tabpageFix"); var h = e("#tabpageTools"); if (s) { if (document.getElementById("tabpageTitle" + s)) { var p = document.getElementById("tabpageTitle" + s); n().switchTo(p); return true } tid = "tabpageTitle" + s } else { tid = "tabpageTitleRd" + u } var d = l.find("li.tabpage_title_center"); if (d.length > 0) { for (var v = 0; v < d.length; v++) { var m = e(d[v]); if (r == m.text()) { var g = m.parent(); n().switchTo(g); return true } } } var y = l.data("openedNum"); var b = l.data("max"); if (y >= b) { return true } var w = u ? u : n().count(); var E = "<ul id='" + tid + "' class='tabpage_title tabpage_title_normal' title='" + r + "' tabIndx='" + w + "'>"; E += "<li class='tabpage_title_left'></li>"; E += "<li class='tabpage_title_center'><span>" + r + "</span></li>"; E += "<li class='tabpage_title_icon'><span></span></li>"; E += "<li class='tabpage_title_right'></li>"; E += "</ul>"; var S; var x = 0; if (o) { S = e(E).appendTo(c); x = 0 } else { S = e(E).appendTo(l); x = S.width(); t.push(S) } S.helpid = a; if (r == "内容上传") S.helpid = "真空"; var T = e("#tabpageOverflow"); T.width(e(window).width() - c.width() - 76); var N = l.width(); var C = N + x; l.width(C); S.click(function () { n().switchTo(S) }); S.mouseover(function () { if ("tabpage_title_on" == e(this).attr("class")) { return false } e(this).removeClass("tabpage_title_normal"); e(this).addClass("tabpage_title_over") }); S.mouseout(function () { if ("tabpage_title_on" == e(this).attr("class")) { return false } e(this).removeClass("tabpage_title_over"); e(this).addClass("tabpage_title_normal") }); S.find("li:eq(2)").click(function () { n().del(S) }); var k = S.find("span:eq(1)"); k.mouseover(function () { e(this).addClass("tabicon_over") }); k.mouseout(function () { e(this).removeClass("tabicon_over") }); if (o) { S.addClass("tabpage_title_fix"); S.find("li.tabpage_title_icon:eq(0)").hide() } var L = e.resizeObjs().getFixSize() + 4; var A = "<div></div>"; var O = e(A).appendTo("#tabpageContent"); var M = e(window).height() - L; e(O).height(M); S.data("orderNum", w); O.data("orderNum", w); O.data("toHeight", M); A = "<iframe name='tabPageIfra" + w + "' width='100%' scrolling='auto' frameborder='0' border='0' src=''></iframe>"; var _ = e(A).appendTo(e(O)); if (i.indexOf("?") > 0) { i += "&BMETimestamp=" + (new Date).getTime() } else { i += "?BMETimestamp=" + (new Date).getTime() } e(_).height(M).attr("src", i); e.resizeObjs().push({ container: e(O), child: true }); n().switchTo(S); n().count(1); if (l.width() - n().spaceWidth > T.width()) { n().scrollShow() } n().scrollResize("add"); n().scrollRepos("add"); y++; l.data("openedNum", y); S.setHelpId = function (e) { S.data("helpid", e || "真空") }; return S }, del: function (r) { var i = e("#tabpageTitle"); var s = e("#tabpageOverflow"); e.resizeObjs().shift(e("#tabpageContent > div:eq(" + e(r).data("orderNum") + ")")); n().resetCurrent(r, "del"); var i = e("#tabpageTitle"); var o = i.width(); var u = o - r.width(); i.width(u); t = e.grep(t, function (e, t) { return e != r }); n().getCurrentIframe(r).each(function () { this.src = "about:blank" }); e("#tabpageContent > div:eq(" + e(r).data("orderNum") + ")").remove(); e(r).remove(); n().count(-1); e("div.tabpage_bg_center ul.tabpage_title").each(function (t) { e(this).show(); e(this).data("orderNum", t) }); e("#tabpageContent > div").each(function (t) { e(this).data("orderNum", t) }); n().switchTo(); n().scrollResize("del"); n().scrollRepos("del"); if (i.width() - n().spaceWidth <= s.width()) { n().scrollHide() } var a = i.data("openedNum"); a--; i.data("openedNum", a) }, switchTo: function (t) { var r; if (t) { r = t } else { if (n().getCurrent(0)) { r = n().getCurrent(0) } else if (e("#tabpageTitle > ul:eq(0)")) { r = e("#tabpageTitle > ul:eq(0)") } else { return false } } n().resetCurrent(r); e("#tabpageTitle").data("currentItem", e(r)); e("#tabpageTitle > ul").removeClass("tabpage_title_on").addClass("tabpage_title_normal"); e("#tabpageFix > ul").removeClass("tabpage_title_on").addClass("tabpage_title_normal"); e(r).removeClass("tabpage_title_normal").addClass("tabpage_title_on"); var i = e("#tabPageInner"); var s = e("#tabpageTitle"); var o = e("#tabpageOverflow"); var u = document.getElementById("tabpageTitle").getElementsByTagName("ul"); for (var a = 0; a < u.length; a++) { u[a].style.display = "block" } var f = e(r).attr("id"); var l = 0; for (var a = 0; a < u.length; a++) { if (u[a].id) { if (u[a].id == f) { l = a } } } var c = e(r).width() + 1; var h = Math.ceil(Math.abs(parseInt(i.css("left"))) / c); var p = Math.floor((Math.abs(parseInt(i.css("left"))) + o.width()) / c); if (l < h) { if (parseInt(i.css("left")) < 0) { var d = parseInt(i.css("left")) + (h - l) * c; if (d > 0) { d = 0 } } else { var d = 0 } i.css("left", d); for (var a = p - h + l; a < u.length; a++) { u[a].style.display = "none" } } if (l >= p) { var d = parseInt(i.css("left")) - (l - p + 1) * c; if (d > 0) { d = 0 } i.css("left", d); for (var a = l + 1; a < u.length; a++) { u[a].style.display = "none" } } if (h <= l && l < p) { for (var a = p; a < u.length; a++) { u[a].style.display = "none" } } if (e.browser.mozilla) { e("#tabpageContent > div").css("visibility", "hidden").css("height", "0px").attr("active", false); var v = e("#tabpageContent > div:eq(" + e(r).data("orderNum") + ")"); v.css("visibility", "visible").css("height", v.data("toHeight") + "px").attr("active", true) } else { e("#tabpageContent > div").hide(); e("#tabpageContent > div:eq(" + e(r).data("orderNum") + ")").show() } }, initTools: function (t) { var r = "<ul>"; r += "<li class='tabpage_scroll'>"; r += "	<div style='position:absolute'>"; r += "	<ul id='tabpageScrollBar'>"; r += "		<li class='tabpage_scroll_left'></li>"; r += "		<li class='tabpage_scroll_center'></li>"; r += "		<li class='tabpage_scroll_right'></li>"; r += "	</ul>"; r += "	</div>"; r += "</li>"; r += "<li class='tabpage_icon_list'></li>"; r += "<li class='tabpage_icon_close'></li>"; r += "</ul>"; var i = e(r).appendTo(t); n().scrollTabpage(e("#tabpageScrollBar")); document.getElementById("tabpageScrollBar").onselectstart = function () { return false }; n().scrollHide(); var s = i.find("li.tabpage_icon_list"); var o = i.find("li.tabpage_icon_close"); s.bind("mouseover", n().showOpenedList); s.bind("mouseout", n().closeOpenedList); o.bind("click", n().closeCurrent) }, showOpenedList: function () { n().showTabPop() }, closeOpenedList: function () { n().hideTabPop() }, showTabPop: function () { n().createTabPop(); var t = e("#tabPopContainer"); t.mouseover(function () { e(this).show() }); t.mouseout(function () { e(this).hide() }); t.show() }, hideTabPop: function () { var t = e("#tabPopContainer"); t.hide() }, createTabPop: function () { if (document.getElementById("tabPopContainer")) { e("#tabPopContainer").remove() } var r = "<div class='tab_pop_menu' id='tabPopContainer'>"; r += "<div class='menu_masker'><iframe width='0' height='0' frameborder='0' src=''></iframe></div>"; r += "<div class='tab_pop_tool' id='tabPopTool'></div><div class='nofloat'></div>"; r += "<div class='horimenuSub_top'><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td><div class='horimenuSub_top_left'></div></td><td class='horimenuSub_top_center'></td><td><div class='horimenuSub_top_right'></div></td></tr></table></div>"; r += "<div class='horimenuSub_center_left'><div class='horimenuSub_center_right'><div class='horimenuSub_center_center'>"; r += "<ul></ul>"; r += "</div><div class='porlet_nofloat'></div></div></div>"; r += "<div class='horimenuSub_bottom'><table width='100%' border='0' cellspacing='0' cellpadding='0'><tr><td><div class='horimenuSub_bottom_left'></div></td><td class='horimenuSub_bottom_center'></td><td><div class='horimenuSub_bottom_right'></div></td></tr></table>"; r += "</div>"; var i = e(r).appendTo("#topFrame"); var s = e("#tabpageTools").find("li.tabpage_icon_list"); var o = s.offset(); var u = o.left - i.width() + s.width() + 5; i.css({ left: u, top: o.top - 6 }); for (var a = 0; a < t.length; a++) { n().addTabMenuItem(t[a]) } return i }, addTabMenuItem: function (t) { var r = e("#tabPopContainer"); var i = e("#tabPopContainer").find("ul"); var s = "<li>"; s += "<a href='#none'>" + t.text() + "</a>"; s += "</li>"; var o = e(s).appendTo(i); o.css({ width: r.width() - 11 }); o.click(function () { r.hide(); n().switchTo(t) }); return o }, closeCurrent: function () { var t = e("#tabpageTitle").data("currentItem"); n().del(t) }, scrollTabpage: function (e) { e.focus(function () { e.blur() }); e.bind("mousedown", n().scrollDown) }, scrollDown: function (t) { e(document).bind("mousemove.tabPageScroll", n().scrollMove); e(document).bind("mouseup.tabPageScroll", n().scrollUp); t = n().fixE(t); if (t.which != 1) { return true } e(this).data("lastMouseX", t.clientX); this.isScrolling = true }, scrollUp: function (t) { e(document).unbind("mousemove.tabPageScroll"); e(document).unbind("mouseup.tabPageScroll"); this.isScrolling = false }, scrollMove: function (t) { var r = e("#tabpageScrollBar"); var i = parseInt(r.css("left")); var s = t.clientX; var o = r.data("lastMouseX"); var u = i + (s - o); if (u < 1) { u = 1 } if (u >= 59 - r.width()) { u = 59 - r.width() } r.css("left", u); r.data("lastMouseX", t.clientX); n().scrollTo(u, r) }, scrollHide: function () { var t = e("#tabpageTools"); t.hide() }, scrollShow: function () { var t = e("#tabpageTools"); t.show() }, scrollResize: function (t) { var n = e("#tabpageScrollBar"); var r = n.find("li:eq(1)"); var i = n.width(); var s = r.width(); if (n.css("display") == "none") { return true } var o; if ("add" == t) { if (n.width() <= 26) { return true } o = -2 } else { if (n.width() >= 44) { return true } o = 2 } n.width(i + o); r.width(s + o) }, scrollRepos: function (t) { var r = e("#tabpageTitle"); var i = e("#tabPageInner"); var s = e("#tabpageOverflow"); var o = e("#tabpageScrollBar"); var u = r.find("ul:last"); var a; if ("add" == t) { if (r.width() - n().spaceWidth > s.width()) { toX = s.width() - (r.width() - n().spaceWidth); var f = -Math.ceil(Math.abs(toX) / (u.width() + 1)) * (u.width() + 1); i.css("left", f + "px"); var l = parseInt(i.css("left")); var r = e("#tabpageTitle"); var i = e("#tabPageInner"); var u = r.find("ul:last"); var c = r.width() - u.width() - n().spaceWidth; var h = 58 - o.width(); var p = -(h * l / c + 1); o.css("left", p + "px") } } else { toX = parseInt(i.css("left")); if (toX < 0) { var f = toX + (u.width() + 1); i.css("left", f + "px") } } }, scrollTo: function (t, r) { var i = e("#tabpageTitle"); var s = e("#tabPageInner"); var o = i.find("ul:last"); var u = i.width() - o.width() - n().spaceWidth; var a = 58 - r.width(); var f = -(t - 1) / a * u; s.css("left", f + "px") }, count: function (t) { var n = e("#tabpageTitle").data("count"); if (t && isNaN != t) { n += t } e("#tabpageTitle").data("count", n); return n }, resetCurrent: function (t, n) { var r = e("#tabpageTitle").data("current"); var i = e.grep(r, function (n, r) { return n.data("orderNum") == e(t).data("orderNum") }, true); if ("del" != n) { i.unshift(e(t)) } e("#tabpageTitle").data("current", i) }, isOpen: function () { }, getCurrent: function (t) { return e("#tabpageTitle").data("current")[t] }, getCurrentIframe: function (t) { var n = e("#tabpageContent > div:eq(" + e(t).data("orderNum") + ")"); var r = n.find("iframe:first-child"); return r }, fixE: function (e) { if (typeof e == "undefined") { e = window.event } if (typeof e.layerX == "undefined") { e.layerX = e.offsetX } if (typeof e.layerY == "undefined") { e.layerY = e.offsetY } if (typeof e.which == "undefined") { e.which = e.button } return e } } } e.fn.tabPage = function (t) { var r = e.extend({}, t); return (new n).init(this, r) }; e.fn.tabPage.add = function (e, t, r, i) { return n().add(e, t, r, i) }; var t = new Array })(jQuery); (function ($) { $.fn.getFormData = function (toType) { var textObj = this.find(":text"); var checkedObj = this.find(":checked"); var selectedObj = this.find(":selected"); var hideObj = this.find("input:hidden"); var jsonstr = ""; jsonstr += "({"; if (textObj.length > 0) { textObj.each(function (e) { if (this.value) { jsonstr += "'" + this.name + "': '" + this.value + "'," } }) } if (checkedObj.length > 0) { checkedObj.each(function (e) { if (this.value) { jsonstr += "'" + this.name + "': '" + this.value + "'," } }) } if (hideObj.length > 0) { hideObj.each(function (e) { if (this.value) { jsonstr += "'" + this.name + "': '" + this.value + "'," } }) } if (selectedObj.length > 0) { selectedObj.each(function (e) { if (this.value) { jsonstr += "'" + $(this).parent().attr("name") + "': '" + this.value + "'," } }) } jsonstr += "})"; jsonstr = jsonstr.replace(",}", "}"); return eval(jsonstr) } })(jQuery); (function (e) { e.fn.fullPageHeight = function () { function r(t) { var n = t.data.targetEle; n.css("height", "auto"); if (e.browser.msie && "6.0" == e.browser.version) { e("body").css("height", "auto") } var r = document.body.offsetHeight - 22; var i = n.find("div.page_container").height(); if (i <= r) { n.css("height", r) } if (e.browser.msie && "6.0" == e.browser.version) { e("body").css("height", "100%") } } var t = document.body.offsetHeight - 22; var n = this.find("div.page_container").height(); if (n < t) { e(this).css("height", t) } else { this.css("height", "auto") } e(window).bind("resize.fullPageHeight", { targetEle: this }, r) } })(jQuery); (function (e) { e.fn.containerMiddle = function () { function n(e) { var t = e.data.targetEle; r(t) } function r(t) { var n = e("body").height(); var r = t.height(); var i = (n - r) / 2 - 100; if (i > 0) { t.css("top", i + "px") } } var t = this; r(t); e(window).bind("resize.fullPageHeight", { targetEle: t }, n) } })(jQuery); (function (e) { function t() { function n() { if (document.getElementById("pageload")) { e("#pageload").remove() } t = r() } function r() { var t = "<div id='pageload'>"; t += "<div class='pageload_masker'><iframe width='100%' height='100%' frameborder='0'></iframe></div>"; t += "<div class='pageload_body'></div>"; t += "</div>"; var n = e(t); n.appendTo("body"); n.hide(); return n } var t; this.show = function () { n(); t.show() }; this.cancel = function () { if (t) { t.remove() } } } e.pageload = new t })(jQuery); (function (e) { function t(e) { return "string" == typeof e ? document.getElementById(e) : e } function n(e, t, n) { if (e.addEventListener) { e.addEventListener(t, n, false) } else if (e.attachEvent) { e.attachEvent("on" + t, n) } else { e["on" + t] = n } } function r(e, t) { for (var n = 0, r = e.length; n < r; n++) { t(e[n], n) } } function i(e, t) { var n = document.createElement("OPTION"); n.value = e; n.innerHTML = t; return n } var s = { create: function () { return function () { this.initialize.apply(this, arguments) } } }; Object.extend = function (e, t) { for (var n in t) { e[n] = t[n] } return e }; var o = function () { }; o.prototype = { create: function (e, i, s) { if (e.length <= 0 || i.lenght <= 0) return; var o = this; this.Selects = []; this.Menu = i; this.SetOptions(s); this.Default = this.options.Default || []; this.ShowEmpty = !!this.options.ShowEmpty; this.EmptyText = this.options.EmptyText.toString(); r(e, function (e, r) { n(o.Selects[r] = t(e), "change", function () { o.Set(r) }) }); this.ReSet() }, SetOptions: function (e) { this.options = { Default: [], ShowEmpty: false, EmptyText: "Please select" }; Object.extend(this.options, e || {}) }, ReSet: function () { this.SetSelect(this.Selects[0], this.Menu, this.Default.shift()); this.Set(0) }, Set: function (e) { var t = this.Menu; for (var n = 1, i = this.Selects.length; n < i; n++) { if (t.length > 0) { var s = this.Selects[n - 1].value; if (s != "") { r(t, function (e) { if (e.val == s) { t = e.menu || [] } }) } else { t = [] } if (n > e) { this.SetSelect(this.Selects[n], t, this.Default.shift()) } } else { this.SetSelect(this.Selects[n], [], "") } } this.Default.length = 0 }, SetSelect: function (e, t, n) { e.options.length = 0; e.disabled = false; if (this.ShowEmpty) { e.appendChild(i("", this.EmptyText)) } if (t.length <= 0) { e.disabled = true; return } r(t, function (t) { var r = i(t.val, t.txt ? t.txt : t.val); r.selected = n == r.value; e.appendChild(r) }) }, Add: function (e) { this.Menu[this.Menu.length] = e; this.ReSet() }, Delete: function (e) { if (e < 0 || e >= this.Menu.length) return; for (var t = e, n = this.Menu.length - 1; t < n; t++) { this.Menu[t] = this.Menu[t + 1] } this.Menu.pop(); this.ReSet() } }; e.cascadeselect = new o })(jQuery); (function (e) { e.fn.tab = function (t) { function f(t) { i = t; var n = e(o[t]); var r = e(u[t]); if (o[t].className.indexOf("button_disable") != -1) { return } o.removeClass("tab_title_normal"); o.removeClass("tab_title_on"); o.addClass("tab_title_normal"); n.removeClass("tab_title_normal"); n.removeClass("tab_title_on"); n.addClass("tab_title_on"); u.hide(); r.show(); l(t) } function l(e) { if (a.length > 0) { for (var t = 0, n = a.length; t < n; t++) { var r = a[t]; if (typeof r.backfun == "function") { r.backfun.apply(this, [{ type: r.type, data: e}]) } } } } var n = this; var r = e.extend({}, t); var i = 0; var s = n.children(".tab_title"); var o = s.find(".tab_title_normal"); var u = n.children(".tab_content"); var a = []; if (r.normalStyle) { n.addClass(r.normalStyle) } f(i); o.each(function (t) { var n = e(this); n.bind("click", function () { f(t) }); n.data("no", t); if (t == 0) { n.addClass("tab_title_first") } }); return { addEventListener: function (t, n) { var r = { type: t, backfun: n }; var i = e.inArray(r, a); if (-1 == i) { a.push(r) } }, removeEventListener: function (t, n) { var r = { type: t, backfun: n }; e.grep(a, function (e, t) { return e == r }, true) }, switchTo: function (e) { f(e - 1) }, getCurrent: function () { return i + 1 } } } })(jQuery); (function (e) { e.fn.setBmeInputValue = function (e, t) { setBmeInputElementValue(this, "input", e, t) } })(jQuery); (function (e) { e.fn.setBmeTextareaValue = function (e) { setBmeInputElementValue(this, "textarea", e, validate) } })(jQuery); (function (e) { e.fn.setBmeSelectValue = function (e) { setBmeInputElementValue(this, "select", e, validate) } })(jQuery); (function (e) { e.fn.clearFileValue = function () { var t = jQuery("#" + this.attr("id") + "_text"); var n = jQuery("#" + this.attr("id") + "_file"); t.val(""); t.valid(); n.val(""); if (e.browser.msie) { var r = n.clone(true); n.replaceWith(r) } } })(jQuery); (function (e) { function t() { if (undefined != jBME.titleTipsPoper) { return } jBME.titleTipsPoper = new jBME.Poper; jBME.titleTipsPoper.offsetInfo.left = 15; jBME.titleTipsPoper.offsetInfo.right = -15; jBME.titleTipsPoper.offsetInfo.top = 5 } e.fn.onLoadHelp = function () { this.tipsHelp(); this.focusBorderInit(); this.focusFieldInit(); this.autoHeightInit(); t() } })(jQuery); (function (e) { e.fn.autoHeight = function (t, n) { function u(t) { var n = i.innerHeight() - (t || 0); n -= r.outerHeight(true) - r.height(); if (parseFloat(e.browser.version) >= 8) { n -= 4 } return Math.max(n, 0) } var r = this; var i = e(document.documentElement); var s = 0; if (undefined == t) { this.addClass("auto_height_self"); i = r.parent(); var o = i.children(":not(.auto_height_self)"); this.removeClass("auto_height_self"); o.each(function (t) { s += e(this).outerHeight(true) }) } else if ("number" === typeof t) { s = t } else { e(t || []).each(function () { s += e(this).outerHeight(true) }) } r.height(u(s)); if (n !== false) { e(window).bind("resize", function () { r.height(u(s)) }) } }; e.fn.autoHeightInit = function () { var t = this; var n = t.find(".bc_auto_height"); n.each(function (t) { var n = e(this); n.autoHeight(undefined, true) }) } })(jQuery); (function (e) { e.fn.tipsHelp = function () { function i(t, n) { var r = t.attr("vMsg"); var i = ""; if (r) { i += "<p class='tips_error'>" + r + "</p>" } var s = t.attr("bmeTips"); if (s) { i += s } if ("" == i || e(document.activeElement).filter(":input").attr("name") != t.attr("name")) { jBME.tipsObj.hideTips(); return } jBME.tipsObj.poper.setPopFromInfoByDom(n); jBME.tipsObj.poper.popFromInfo.left += 20; jBME.tipsObj.poper.popFromInfo.width = 0; jBME.tipsObj.poper.bottomFirst = false; jBME.tipsObj.content.html(" "); jBME.tipsObj.width("auto"); jBME.tipsObj.poper.show(); jBME.tipsObj.content.html(i); jBME.tipsObj.jqTipsTarget = n; jBME.tipsObj.width(jBME.tipsObj.width()); jBME.tipsObj.poper.show(); jBME.tipsObj.attr("arrowTop", jBME.tipsObj.poper.resultBottom); jBME.tipsObj.fixSelectorBug(); jBME.tipsObj.css("z-index", 9999); return } if (!jBME.tipsObj) { var t = '<div class="bf_tips">'; t += '<div hl="true"></div>'; t += '<div hr="true"></div>'; t += '<div ml="true"><div mr="true"></div></div>'; t += '<div fl="true"></div>'; t += '<div fr="true"></div>'; t += "</div>"; jBME.tipsObj = e(t); jBME.tipsObj.content = jBME.tipsObj.find("[mr]"); jBME.tipsObj.appendTo("body"); jBME.tipsObj.poper = new jBME.Poper(jBME.tipsObj) } jBME.tipsObj.getTipsTarget = function (t) { var n = t.attr("bmeTipsId"); if (undefined == n) { n = t } else { n = e("#" + n) } return n }; jBME.tipsObj.hideTips = function () { jBME.tipsObj.jqTipsTarget = undefined; jBME.tipsObj.hide() }; jBME.tipsObj.refresh = function (e, t) { if (jBME.tipsObj.jqTipsTarget && jBME.tipsObj.jqTipsTarget.get(0) != t.get(0)) { return } i(e, t) }; var n = this; var r = n.find("[bmeTips],[validateRules]"); r.each(function (t) { var n = e(this); var r = jBME.tipsObj.getTipsTarget(n); n.unbind("focusin.tips").bind("focusin.tips", function () { jBME.tipsObj.jqTipsTarget = r; jBME.tipsObj.refresh(n, r) }); n.unbind("blur.tips").bind("blur.tips", function (t) { var n = jBME.tipsObj.getTipsTarget(e(t.target)); if (jBME.tipsObj.jqTipsTarget && jBME.tipsObj.jqTipsTarget.get(0) != n.get(0)) { return } jBME.tipsObj.hideTips() }); if ((e.browser.safari || e.browser.msie) && n.is("input[type='checkbox'],input[type='radio'],input[type='text']")) { n.unbind("click.tips").bind("click.tips", function () { jBME.tipsObj.jqTipsTarget = r; jBME.tipsObj.refresh(n, r) }) } }); } })(jQuery); (function (e) { e.fn.focusBorderInit = function () { var t = this; var n = t.find("[focusBorder]"); n.each(function (t) { var n = e(this); var r = n.attr("focusBorder"); n.unbind("focus.border").bind("focus.border", function () { n.addClass(r) }); n.unbind("blur.border").bind("blur.border", function () { n.removeClass(r) }) }) } })(jQuery); (function (e) { e.fn.focusFieldInit = function () { var t = this; var n = t.find("[focusField]").not(".field_no_bg"); n.each(function () { var t = e(this); var n = t.attr("focusField"); t.find(":input").each(function (r) { var i = e(this); i.unbind("focus.field").bind("focus.field", function () { t.addClass(n) }); i.unbind("blur.field").bind("blur.field", function () { t.removeClass(n) }) }) }) } })(jQuery); (function (e) { e.fn.conditionCheck = function (t) { function o(t) { s.hide(); e(s[t]).show() } var n = this; var r = n.find(".vlist_condition_title"); var i = r.find(":radio"); var s = n.find("div.vlist_condition_content"); i.each(function (t) { var n = e(this); n.bind("click", function () { o(t) }) }) } })(jQuery); (function (e) { e.fn.tips = function (t) { function s() { jBME.titleTipsPoper.wrapperFunc = function () { var e = jBME.titleTipsPoper.createShadowWrapper(); e.bind("mouseout", u); e.removeClass("bf_shadow").addClass("bf_title_tips"); e.css("max-width", n + "px"); return e } } function o(t) { s(); jBME.titleTipsPoper.setPop(e(this).data("tips")); jBME.titleTipsPoper.setPopFromInfoByEvent(t); jBME.titleTipsPoper.show() } function u(e) { jBME.titleTipsPoper.hide() } t = t || {}; var n = t.maxWidth || 800; var r = t.attrName || "title"; var i = this; actObjs = i.find("[" + r + "]"); actObjs.each(function () { var t = e(this); var n = t.attr(r); t.data("tips", e("<div>" + n + "</div>")); if (r == "title") { t.removeAttr("title") } t.unbind("mouseover").bind("mouseover", o); t.unbind("mouseout").bind("mouseout", u); t.unbind("click").bind("click", u) }) } })(jQuery); (function (e) { e.fn.ExternalClick = function (t, n) { function u(t) { var u = e(t.target); var a = u.parents("[ExternalClickID='" + s + "']"); var f = false; if (u.data("ExternalClickID") == s) { f = true } if (a.size() > 0) { f = true } if (!f && i.is(":visible")) { i.hide(); if (n) { o.call(this, r, i) } } } var r = e(this); var i = e(t); var s = Math.random().toString(); if (n) { var o = n } r.attr("ExternalClickID", s); i.attr("ExternalClickID", s); e(document).mousedown(u) } })(jQuery); (function ($) { $.fn.historyReport = function (dataString, s) { function getJsonString(e) { var t = []; (function (e) { var n = true; if (e instanceof Array) n = false; else if (typeof e != "object") { if (typeof e == "string") t.push('"' + e + '"'); else t.push(e); return } t.push(n ? "{" : "["); for (var r in e) { if (e.hasOwnProperty(r) && r != "prototype") { if (n) t.push(r + ":"); arguments.callee(e[r]); t.push(",") } } t.push(n ? "}" : "]") })(e); return t.slice(0).join("").replace(/,\}/g, "}").replace(/,\]/g, "]") } function addHistoryList(e) { var t = "<li>"; t += "<a href = '#none'>" + e.label + "</a>"; t += "</li>"; var n = $(t).prependTo(ulObj); if ($("#systemMenuContainer").css("display") == "none") { $("#systemMenuContainer").show(); if (hisBox.height() > submenuBox.height()) { submenuBox.addClass("list_noline"); hisBox.removeClass("list_noline") } else { hisBox.addClass("list_noline"); submenuBox.removeClass("list_noline") } $("#systemMenuContainer").hide() } n.click(function () { var t = $.fn.tabPage.add(e.label, e.url, e.id); t.setHelpId(itemsData.helpid); $("#systemMenu").removeClass("sysmenu_hover").addClass("sysmenu"); $("#systemMenuContainer").hide(); var n = $("#systemMenuContainer").data("maskDiv"); $(n).remove() }) } var maxLength = 10; var ulObj = $("#systemMenuContainer").find("ul.shortmenu_his_ul"); var hisBox = $("#systemMenuContainer").find("div.shortmenu_his_list"); var submenuBox = $("#systemMenuContainer").find("div.shortmenu_proj_items_list"); if (typeof s.showHistory != "undefined" && s.showHistory) { var historyStr = $.cookie("historyItems"); if (historyStr != null) { var historyObj = eval("(" + historyStr + ")"); var newReport = eval("(" + dataString + ")"); for (var i = 0; i < historyObj.length; i++) { if (historyObj[i].id == newReport.id) { historyObj.splice(i, 1) } } historyObj.push(newReport); if (historyObj.length > maxLength) { historyObj = historyObj.slice(historyObj.length - maxLength) } $.cookie("historyItems", null); $.cookie("historyItems", getJsonString(historyObj)) } else { var historyStr = "[" + dataString + "]"; $.cookie("historyItems", historyStr) } var historyStr = $.cookie("historyItems"); var historyObj = eval("(" + historyStr + ")"); if (ulObj.html() != "") { ulObj.html("") } for (var j = 0; j < historyObj.length; j++) { addHistoryList(historyObj[j]) } } } })(jQuery); (function (e) { e.fn.showSubMenu = function (t) { function f(t) { s = t; var n = o, r = e(o).find("div.shortsubmenu_sub"), i = r.size(), f = 0; for (f; f < i; f++) { var c = e(r[f]).parent("li"); u[f] = c; a[f] = r[f]; e(u[f]).data("subNum", f); u[f].mouseover(function () { l(e(this).data("subNum"), true) }); u[f].mouseout(function () { l(e(this).data("subNum")) }) } } function l(t, r) { var i = a[t], o = u[t], f = e(o).find("a:eq(0)"); if (i.t) { clearInterval(i.t) } if (r) { e(f).addClass(s); e(i).show(); e(o).css("overflow", "visible"); i.t = setInterval(function () { c(i, 1) }, n) } else { e(f).removeClass(s); i.t = setInterval(function () { c(i, -1) }, n) } } function c(t, n) { if (n == 1) { e(t).show() } else { e(t).hide(); e(t).parent("li").css("overflow", "hidden") } clearInterval(t.t) } var n = 15, r = 50, i = 6, s; var o = e(this); var u = []; var a = []; f(t); } })(jQuery); (function (e) { e.fn.toggleDisabled = function (e) { if (this.toggleClass("cbme_disabled", e).hasClass("cbme_disabled")) { this.attr("disabled", "disabled"); this.find(":input,.bc,.bc_toggleable").attr("disabled", "disabled").addClass("cbme_disabled") } else { this.removeAttr("disabled"); this.find(":input,.bc,.bc_toggleable").removeAttr("disabled").removeClass("cbme_disabled") } return this }; e.fn.fixSelectorBug = function () { return this.toggleClass("bmeFixSelectorBug") } })(jQuery)